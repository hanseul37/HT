/* Generated by Yosys 0.32+74 (git sha1 b739213d9, x86_64-w64-mingw32-g++ 9.2.1 -Os) */

(* hdlname = "\\rx" *)
(* src = "rx.v:1.1-125.10" *)
module \$paramod\rx\MAX_CNT=s32'00000000000000000001010001011000 (clk, rstn, rx, rx_data, out_flag);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  (* src = "rx.v:19.18-19.25" *)
  wire [20:0] bit_cnt;
  (* src = "rx.v:21.17-21.25" *)
  wire bit_flag;
  (* src = "rx.v:4.29-4.32" *)
  input clk;
  wire clk;
  (* src = "rx.v:20.17-20.20" *)
  wire [4:0] cnt;
  (* src = "rx.v:12.12-12.20" *)
  wire d_flip_0;
  (* src = "rx.v:13.12-13.20" *)
  wire d_flip_1;
  (* src = "rx.v:14.10-14.18" *)
  wire d_flip_2;
  (* src = "rx.v:22.17-22.26" *)
  wire [7:0] d_rx_data;
  (* src = "rx.v:17.17-17.25" *)
  wire fin_flag;
  (* src = "rx.v:9.29-9.37" *)
  output out_flag;
  wire out_flag;
  (* src = "rx.v:5.29-5.33" *)
  input rstn;
  wire rstn;
  (* src = "rx.v:6.29-6.31" *)
  input rx;
  wire rx;
  (* src = "rx.v:8.29-8.36" *)
  output [7:0] rx_data;
  wire [7:0] rx_data;
  (* src = "rx.v:18.17-18.25" *)
  wire start_en;
  (* src = "rx.v:16.17-16.27" *)
  wire start_flag;
  an2v0x05 _137_ (
    .a(rstn),
    .b(d_flip_1),
    .z(_000_)
  );
  mxn2v0x05 _138_ (
    .a0(rx_data[0]),
    .a1(d_rx_data[0]),
    .s(fin_flag),
    .z(_050_)
  );
  an2v0x05 _139_ (
    .a(rstn),
    .b(_050_),
    .z(_001_)
  );
  mxn2v0x05 _140_ (
    .a0(rx_data[1]),
    .a1(d_rx_data[1]),
    .s(fin_flag),
    .z(_051_)
  );
  an2v0x05 _141_ (
    .a(rstn),
    .b(_051_),
    .z(_002_)
  );
  mxn2v0x05 _142_ (
    .a0(rx_data[2]),
    .a1(d_rx_data[2]),
    .s(fin_flag),
    .z(_052_)
  );
  an2v0x05 _143_ (
    .a(rstn),
    .b(_052_),
    .z(_003_)
  );
  mxn2v0x05 _144_ (
    .a0(rx_data[3]),
    .a1(d_rx_data[3]),
    .s(fin_flag),
    .z(_053_)
  );
  an2v0x05 _145_ (
    .a(rstn),
    .b(_053_),
    .z(_004_)
  );
  mxn2v0x05 _146_ (
    .a0(rx_data[4]),
    .a1(d_rx_data[4]),
    .s(fin_flag),
    .z(_054_)
  );
  an2v0x05 _147_ (
    .a(rstn),
    .b(_054_),
    .z(_005_)
  );
  mxn2v0x05 _148_ (
    .a0(rx_data[5]),
    .a1(d_rx_data[5]),
    .s(fin_flag),
    .z(_055_)
  );
  an2v0x05 _149_ (
    .a(rstn),
    .b(_055_),
    .z(_006_)
  );
  mxn2v0x05 _150_ (
    .a0(rx_data[6]),
    .a1(d_rx_data[6]),
    .s(fin_flag),
    .z(_056_)
  );
  an2v0x05 _151_ (
    .a(rstn),
    .b(_056_),
    .z(_007_)
  );
  mxn2v0x05 _152_ (
    .a0(rx_data[7]),
    .a1(d_rx_data[7]),
    .s(fin_flag),
    .z(_057_)
  );
  an2v0x05 _153_ (
    .a(rstn),
    .b(_057_),
    .z(_008_)
  );
  an2v0x05 _154_ (
    .a(fin_flag),
    .b(rstn),
    .z(_009_)
  );
  nr2v0x05 _155_ (
    .a(cnt[4]),
    .b(cnt[3]),
    .z(_058_)
  );
  nd3abv0x05 _156_ (
    .a(cnt[4]),
    .b(cnt[2]),
    .c(cnt[3]),
    .z(_059_)
  );
  nr3v0x05 _157_ (
    .a(cnt[1]),
    .b(cnt[0]),
    .c(_059_),
    .z(_060_)
  );
  nd2av0x05 _158_ (
    .a(cnt[2]),
    .b(_058_),
    .z(_061_)
  );
  oai31v0x05 _159_ (
    .a1(cnt[1]),
    .a2(cnt[0]),
    .a3(_061_),
    .b(bit_flag),
    .z(_062_)
  );
  oan21bv0x05 _160_ (
    .a1(_058_),
    .a2(_060_),
    .b(_062_),
    .z(_063_)
  );
  mxn2v0x05 _161_ (
    .a0(d_rx_data[0]),
    .a1(d_rx_data[1]),
    .s(_063_),
    .z(_064_)
  );
  an2v0x05 _162_ (
    .a(rstn),
    .b(_064_),
    .z(_010_)
  );
  mxn2v0x05 _163_ (
    .a0(d_rx_data[1]),
    .a1(d_rx_data[2]),
    .s(_063_),
    .z(_065_)
  );
  an2v0x05 _164_ (
    .a(rstn),
    .b(_065_),
    .z(_011_)
  );
  mxn2v0x05 _165_ (
    .a0(d_rx_data[2]),
    .a1(d_rx_data[3]),
    .s(_063_),
    .z(_066_)
  );
  an2v0x05 _166_ (
    .a(rstn),
    .b(_066_),
    .z(_012_)
  );
  mxn2v0x05 _167_ (
    .a0(d_rx_data[3]),
    .a1(d_rx_data[4]),
    .s(_063_),
    .z(_067_)
  );
  an2v0x05 _168_ (
    .a(rstn),
    .b(_067_),
    .z(_013_)
  );
  mxn2v0x05 _169_ (
    .a0(d_rx_data[4]),
    .a1(d_rx_data[5]),
    .s(_063_),
    .z(_068_)
  );
  an2v0x05 _170_ (
    .a(rstn),
    .b(_068_),
    .z(_014_)
  );
  mxn2v0x05 _171_ (
    .a0(d_rx_data[5]),
    .a1(d_rx_data[6]),
    .s(_063_),
    .z(_069_)
  );
  an2v0x05 _172_ (
    .a(rstn),
    .b(_069_),
    .z(_015_)
  );
  mxn2v0x05 _173_ (
    .a0(d_rx_data[6]),
    .a1(d_rx_data[7]),
    .s(_063_),
    .z(_070_)
  );
  an2v0x05 _174_ (
    .a(rstn),
    .b(_070_),
    .z(_016_)
  );
  mxn2v0x05 _175_ (
    .a0(d_rx_data[7]),
    .a1(d_flip_2),
    .s(_063_),
    .z(_071_)
  );
  an2v0x05 _176_ (
    .a(rstn),
    .b(_071_),
    .z(_017_)
  );
  nd2v0x05 _177_ (
    .a(bit_flag),
    .b(_060_),
    .z(_072_)
  );
  nd2v0x05 _178_ (
    .a(rstn),
    .b(_072_),
    .z(_073_)
  );
  or2v0x05 _179_ (
    .a(bit_flag),
    .b(cnt[0]),
    .z(_074_)
  );
  nd2v0x05 _180_ (
    .a(bit_flag),
    .b(cnt[0]),
    .z(_075_)
  );
  nr3abv0x05 _181_ (
    .a(_074_),
    .b(_075_),
    .c(_073_),
    .z(_018_)
  );
  or2v0x05 _182_ (
    .a(cnt[1]),
    .b(_075_),
    .z(_076_)
  );
  nd2v0x05 _183_ (
    .a(cnt[1]),
    .b(_075_),
    .z(_077_)
  );
  aoi21v0x05 _184_ (
    .a1(_076_),
    .a2(_077_),
    .b(_073_),
    .z(_019_)
  );
  aoi31v0x05 _185_ (
    .a1(bit_flag),
    .a2(cnt[1]),
    .a3(cnt[0]),
    .b(cnt[2]),
    .z(_078_)
  );
  nr3abv0x05 _186_ (
    .a(cnt[2]),
    .b(cnt[1]),
    .c(_075_),
    .z(_079_)
  );
  nr3v0x05 _187_ (
    .a(_073_),
    .b(_078_),
    .c(_079_),
    .z(_020_)
  );
  xnr2v0x05 _188_ (
    .a(cnt[3]),
    .b(_079_),
    .z(_080_)
  );
  nr2v0x05 _189_ (
    .a(_073_),
    .b(_080_),
    .z(_021_)
  );
  xaoi21v0x05 _190_ (
    .a1(cnt[3]),
    .a2(_079_),
    .b(cnt[4]),
    .z(_081_)
  );
  nr2v0x05 _191_ (
    .a(_073_),
    .b(_081_),
    .z(_022_)
  );
  nr2av0x1 _192_ (
    .a(rstn),
    .b(_072_),
    .z(_023_)
  );
  nd3v0x05 _193_ (
    .a(bit_cnt[2]),
    .b(bit_cnt[1]),
    .c(bit_cnt[0]),
    .z(_082_)
  );
  or3v0x05 _194_ (
    .a(bit_cnt[20]),
    .b(bit_cnt[19]),
    .c(bit_cnt[17]),
    .z(_083_)
  );
  nr3v0x05 _195_ (
    .a(bit_cnt[18]),
    .b(bit_cnt[16]),
    .c(_083_),
    .z(_084_)
  );
  nd2av0x05 _196_ (
    .a(bit_cnt[13]),
    .b(bit_cnt[12]),
    .z(_085_)
  );
  nd3abv0x05 _197_ (
    .a(bit_cnt[11]),
    .b(bit_cnt[5]),
    .c(bit_cnt[4]),
    .z(_086_)
  );
  nd3abv0x05 _198_ (
    .a(_086_),
    .b(bit_cnt[7]),
    .c(bit_cnt[6]),
    .z(_087_)
  );
  nr3v0x05 _199_ (
    .a(bit_cnt[3]),
    .b(_082_),
    .c(_087_),
    .z(_088_)
  );
  nd3abv0x05 _200_ (
    .a(bit_cnt[9]),
    .b(bit_cnt[8]),
    .c(bit_cnt[10]),
    .z(_089_)
  );
  nr4v1x05 _201_ (
    .a(bit_cnt[15]),
    .b(bit_cnt[14]),
    .c(_085_),
    .d(_089_),
    .z(_090_)
  );
  nd3v0x05 _202_ (
    .a(_084_),
    .b(_088_),
    .c(_090_),
    .z(_091_)
  );
  oai211v0x05 _203_ (
    .a1(_059_),
    .a2(_076_),
    .b(_091_),
    .c(rstn),
    .z(_092_)
  );
  xnr2v0x05 _204_ (
    .a(start_en),
    .b(bit_cnt[0]),
    .z(_093_)
  );
  nr2v0x05 _205_ (
    .a(_092_),
    .b(_093_),
    .z(_024_)
  );
  aoi21v0x05 _206_ (
    .a1(start_en),
    .a2(bit_cnt[0]),
    .b(bit_cnt[1]),
    .z(_094_)
  );
  nd3v0x05 _207_ (
    .a(start_en),
    .b(bit_cnt[1]),
    .c(bit_cnt[0]),
    .z(_095_)
  );
  nr3av0x05 _208_ (
    .a(_095_),
    .b(_092_),
    .c(_094_),
    .z(_025_)
  );
  xor2v0x05 _209_ (
    .a(bit_cnt[2]),
    .b(_095_),
    .z(_096_)
  );
  nr2v0x05 _210_ (
    .a(_092_),
    .b(_096_),
    .z(_026_)
  );
  aoi21a2v0x05 _211_ (
    .a1(start_en),
    .a2(_082_),
    .b(bit_cnt[3]),
    .z(_097_)
  );
  nr3abv0x05 _212_ (
    .a(start_en),
    .b(bit_cnt[3]),
    .c(_082_),
    .z(_098_)
  );
  nr3v0x05 _213_ (
    .a(_092_),
    .b(_097_),
    .c(_098_),
    .z(_027_)
  );
  nr2v0x05 _214_ (
    .a(bit_cnt[4]),
    .b(_098_),
    .z(_099_)
  );
  nd2v0x05 _215_ (
    .a(bit_cnt[4]),
    .b(_098_),
    .z(_100_)
  );
  nr3av0x05 _216_ (
    .a(_100_),
    .b(_092_),
    .c(_099_),
    .z(_028_)
  );
  xor2v0x05 _217_ (
    .a(bit_cnt[5]),
    .b(_100_),
    .z(_101_)
  );
  nr2v0x05 _218_ (
    .a(_092_),
    .b(_101_),
    .z(_029_)
  );
  nd4v0x05 _219_ (
    .a(start_en),
    .b(bit_cnt[5]),
    .c(bit_cnt[4]),
    .d(bit_cnt[3]),
    .z(_102_)
  );
  nr2v0x05 _220_ (
    .a(_082_),
    .b(_102_),
    .z(_103_)
  );
  xnr2v0x05 _221_ (
    .a(bit_cnt[6]),
    .b(_103_),
    .z(_104_)
  );
  nr2v0x05 _222_ (
    .a(_092_),
    .b(_104_),
    .z(_030_)
  );
  xaoi21v0x05 _223_ (
    .a1(bit_cnt[6]),
    .a2(_103_),
    .b(bit_cnt[7]),
    .z(_105_)
  );
  nr2v0x05 _224_ (
    .a(_092_),
    .b(_105_),
    .z(_031_)
  );
  nd2v0x05 _225_ (
    .a(bit_cnt[7]),
    .b(bit_cnt[6]),
    .z(_106_)
  );
  nr3v0x05 _226_ (
    .a(_082_),
    .b(_102_),
    .c(_106_),
    .z(_107_)
  );
  xnr2v0x05 _227_ (
    .a(bit_cnt[8]),
    .b(_107_),
    .z(_108_)
  );
  nr2v0x05 _228_ (
    .a(_092_),
    .b(_108_),
    .z(_032_)
  );
  xaoi21v0x05 _229_ (
    .a1(bit_cnt[8]),
    .a2(_107_),
    .b(bit_cnt[9]),
    .z(_109_)
  );
  nr2v0x05 _230_ (
    .a(_092_),
    .b(_109_),
    .z(_033_)
  );
  an2v0x05 _231_ (
    .a(bit_cnt[9]),
    .b(bit_cnt[8]),
    .z(_110_)
  );
  an3v0x05 _232_ (
    .a(bit_cnt[10]),
    .b(_107_),
    .c(_110_),
    .z(_111_)
  );
  aoi21v0x05 _233_ (
    .a1(_107_),
    .a2(_110_),
    .b(bit_cnt[10]),
    .z(_112_)
  );
  nr3v0x05 _234_ (
    .a(_092_),
    .b(_111_),
    .c(_112_),
    .z(_034_)
  );
  an4v0x05 _235_ (
    .a(bit_cnt[11]),
    .b(bit_cnt[10]),
    .c(_107_),
    .d(_110_),
    .z(_113_)
  );
  nr2v0x05 _236_ (
    .a(bit_cnt[11]),
    .b(_111_),
    .z(_114_)
  );
  nr3v0x05 _237_ (
    .a(_092_),
    .b(_113_),
    .c(_114_),
    .z(_035_)
  );
  xnr2v0x05 _238_ (
    .a(bit_cnt[12]),
    .b(_113_),
    .z(_115_)
  );
  nr2v0x05 _239_ (
    .a(_092_),
    .b(_115_),
    .z(_036_)
  );
  xaoi21v0x05 _240_ (
    .a1(bit_cnt[12]),
    .a2(_113_),
    .b(bit_cnt[13]),
    .z(_116_)
  );
  nr2v0x05 _241_ (
    .a(_092_),
    .b(_116_),
    .z(_037_)
  );
  an2v0x05 _242_ (
    .a(bit_cnt[13]),
    .b(bit_cnt[12]),
    .z(_117_)
  );
  an3v0x05 _243_ (
    .a(bit_cnt[14]),
    .b(_113_),
    .c(_117_),
    .z(_118_)
  );
  aoi21v0x05 _244_ (
    .a1(_113_),
    .a2(_117_),
    .b(bit_cnt[14]),
    .z(_119_)
  );
  nr3v0x05 _245_ (
    .a(_092_),
    .b(_118_),
    .c(_119_),
    .z(_038_)
  );
  an4v0x05 _246_ (
    .a(bit_cnt[15]),
    .b(bit_cnt[14]),
    .c(_113_),
    .d(_117_),
    .z(_120_)
  );
  nr2v0x05 _247_ (
    .a(bit_cnt[15]),
    .b(_118_),
    .z(_121_)
  );
  nr3v0x05 _248_ (
    .a(_092_),
    .b(_120_),
    .c(_121_),
    .z(_039_)
  );
  aoi21v0x05 _249_ (
    .a1(bit_cnt[16]),
    .a2(_120_),
    .b(_092_),
    .z(_122_)
  );
  oan21v0x05 _250_ (
    .a1(bit_cnt[16]),
    .a2(_120_),
    .b(_122_),
    .z(_040_)
  );
  an3v0x05 _251_ (
    .a(bit_cnt[17]),
    .b(bit_cnt[16]),
    .c(_120_),
    .z(_123_)
  );
  aoi21v0x05 _252_ (
    .a1(bit_cnt[16]),
    .a2(_120_),
    .b(bit_cnt[17]),
    .z(_124_)
  );
  nr3v0x05 _253_ (
    .a(_092_),
    .b(_123_),
    .c(_124_),
    .z(_041_)
  );
  an4v0x05 _254_ (
    .a(bit_cnt[18]),
    .b(bit_cnt[17]),
    .c(bit_cnt[16]),
    .d(_120_),
    .z(_125_)
  );
  nr2v0x05 _255_ (
    .a(bit_cnt[18]),
    .b(_123_),
    .z(_126_)
  );
  nr3v0x05 _256_ (
    .a(_092_),
    .b(_125_),
    .c(_126_),
    .z(_042_)
  );
  aoi21v0x05 _257_ (
    .a1(bit_cnt[19]),
    .a2(_125_),
    .b(_092_),
    .z(_127_)
  );
  oan21v0x05 _258_ (
    .a1(bit_cnt[19]),
    .a2(_125_),
    .b(_127_),
    .z(_043_)
  );
  xaoi21v0x05 _259_ (
    .a1(bit_cnt[19]),
    .a2(_125_),
    .b(bit_cnt[20]),
    .z(_128_)
  );
  nr2v0x05 _260_ (
    .a(_092_),
    .b(_128_),
    .z(_044_)
  );
  oan21bv0x05 _261_ (
    .a1(start_en),
    .a2(start_flag),
    .b(_073_),
    .z(_045_)
  );
  nr3abv0x05 _262_ (
    .a(bit_cnt[3]),
    .b(rstn),
    .c(bit_cnt[2]),
    .z(_129_)
  );
  nd2av0x05 _263_ (
    .a(bit_cnt[4]),
    .b(bit_cnt[5]),
    .z(_130_)
  );
  nd2av0x05 _264_ (
    .a(bit_cnt[10]),
    .b(bit_cnt[11]),
    .z(_131_)
  );
  nd3abv0x05 _265_ (
    .a(bit_cnt[8]),
    .b(_131_),
    .c(bit_cnt[9]),
    .z(_132_)
  );
  nr4v1x05 _266_ (
    .a(bit_cnt[7]),
    .b(bit_cnt[6]),
    .c(_130_),
    .d(_132_),
    .z(_133_)
  );
  nr2v0x05 _267_ (
    .a(bit_cnt[13]),
    .b(bit_cnt[12]),
    .z(_134_)
  );
  nd3v0x05 _268_ (
    .a(bit_cnt[1]),
    .b(bit_cnt[0]),
    .c(_134_),
    .z(_135_)
  );
  nr3v0x05 _269_ (
    .a(bit_cnt[15]),
    .b(bit_cnt[14]),
    .c(_135_),
    .z(_136_)
  );
  an4v0x05 _270_ (
    .a(_084_),
    .b(_129_),
    .c(_133_),
    .d(_136_),
    .z(_046_)
  );
  nr3abv0x05 _271_ (
    .a(d_flip_2),
    .b(rstn),
    .c(d_flip_1),
    .z(_047_)
  );
  an2v0x05 _272_ (
    .a(rstn),
    .b(rx),
    .z(_048_)
  );
  an2v0x05 _273_ (
    .a(rstn),
    .b(d_flip_0),
    .z(_049_)
  );
  (* src = "rx.v:27.1-40.4" *)
  dfnt1v0x2 _274_ (
    .cp(clk),
    .d(_000_),
    .z(d_flip_2)
  );
  (* src = "rx.v:108.1-113.4" *)
  dfnt1v0x2 _275_ (
    .cp(clk),
    .d(_001_),
    .z(rx_data[0])
  );
  (* src = "rx.v:108.1-113.4" *)
  dfnt1v0x2 _276_ (
    .cp(clk),
    .d(_002_),
    .z(rx_data[1])
  );
  (* src = "rx.v:108.1-113.4" *)
  dfnt1v0x2 _277_ (
    .cp(clk),
    .d(_003_),
    .z(rx_data[2])
  );
  (* src = "rx.v:108.1-113.4" *)
  dfnt1v0x2 _278_ (
    .cp(clk),
    .d(_004_),
    .z(rx_data[3])
  );
  (* src = "rx.v:108.1-113.4" *)
  dfnt1v0x2 _279_ (
    .cp(clk),
    .d(_005_),
    .z(rx_data[4])
  );
  (* src = "rx.v:108.1-113.4" *)
  dfnt1v0x2 _280_ (
    .cp(clk),
    .d(_006_),
    .z(rx_data[5])
  );
  (* src = "rx.v:108.1-113.4" *)
  dfnt1v0x2 _281_ (
    .cp(clk),
    .d(_007_),
    .z(rx_data[6])
  );
  (* src = "rx.v:108.1-113.4" *)
  dfnt1v0x2 _282_ (
    .cp(clk),
    .d(_008_),
    .z(rx_data[7])
  );
  (* src = "rx.v:117.1-124.4" *)
  dfnt1v0x2 _283_ (
    .cp(clk),
    .d(_009_),
    .z(out_flag)
  );
  (* src = "rx.v:90.1-97.4" *)
  dfnt1v0x2 _284_ (
    .cp(clk),
    .d(_010_),
    .z(d_rx_data[0])
  );
  (* src = "rx.v:90.1-97.4" *)
  dfnt1v0x2 _285_ (
    .cp(clk),
    .d(_011_),
    .z(d_rx_data[1])
  );
  (* src = "rx.v:90.1-97.4" *)
  dfnt1v0x2 _286_ (
    .cp(clk),
    .d(_012_),
    .z(d_rx_data[2])
  );
  (* src = "rx.v:90.1-97.4" *)
  dfnt1v0x2 _287_ (
    .cp(clk),
    .d(_013_),
    .z(d_rx_data[3])
  );
  (* src = "rx.v:90.1-97.4" *)
  dfnt1v0x2 _288_ (
    .cp(clk),
    .d(_014_),
    .z(d_rx_data[4])
  );
  (* src = "rx.v:90.1-97.4" *)
  dfnt1v0x2 _289_ (
    .cp(clk),
    .d(_015_),
    .z(d_rx_data[5])
  );
  (* src = "rx.v:90.1-97.4" *)
  dfnt1v0x2 _290_ (
    .cp(clk),
    .d(_016_),
    .z(d_rx_data[6])
  );
  (* src = "rx.v:90.1-97.4" *)
  dfnt1v0x2 _291_ (
    .cp(clk),
    .d(_017_),
    .z(d_rx_data[7])
  );
  (* src = "rx.v:79.1-88.4" *)
  dfnt1v0x2 _292_ (
    .cp(clk),
    .d(_018_),
    .z(cnt[0])
  );
  (* src = "rx.v:79.1-88.4" *)
  dfnt1v0x2 _293_ (
    .cp(clk),
    .d(_019_),
    .z(cnt[1])
  );
  (* src = "rx.v:79.1-88.4" *)
  dfnt1v0x2 _294_ (
    .cp(clk),
    .d(_020_),
    .z(cnt[2])
  );
  (* src = "rx.v:79.1-88.4" *)
  dfnt1v0x2 _295_ (
    .cp(clk),
    .d(_021_),
    .z(cnt[3])
  );
  (* src = "rx.v:79.1-88.4" *)
  dfnt1v0x2 _296_ (
    .cp(clk),
    .d(_022_),
    .z(cnt[4])
  );
  (* src = "rx.v:99.1-106.4" *)
  dfnt1v0x2 _297_ (
    .cp(clk),
    .d(_023_),
    .z(fin_flag)
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _298_ (
    .cp(clk),
    .d(_024_),
    .z(bit_cnt[0])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _299_ (
    .cp(clk),
    .d(_025_),
    .z(bit_cnt[1])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _300_ (
    .cp(clk),
    .d(_026_),
    .z(bit_cnt[2])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _301_ (
    .cp(clk),
    .d(_027_),
    .z(bit_cnt[3])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _302_ (
    .cp(clk),
    .d(_028_),
    .z(bit_cnt[4])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _303_ (
    .cp(clk),
    .d(_029_),
    .z(bit_cnt[5])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _304_ (
    .cp(clk),
    .d(_030_),
    .z(bit_cnt[6])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _305_ (
    .cp(clk),
    .d(_031_),
    .z(bit_cnt[7])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _306_ (
    .cp(clk),
    .d(_032_),
    .z(bit_cnt[8])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _307_ (
    .cp(clk),
    .d(_033_),
    .z(bit_cnt[9])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _308_ (
    .cp(clk),
    .d(_034_),
    .z(bit_cnt[10])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _309_ (
    .cp(clk),
    .d(_035_),
    .z(bit_cnt[11])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _310_ (
    .cp(clk),
    .d(_036_),
    .z(bit_cnt[12])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _311_ (
    .cp(clk),
    .d(_037_),
    .z(bit_cnt[13])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _312_ (
    .cp(clk),
    .d(_038_),
    .z(bit_cnt[14])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _313_ (
    .cp(clk),
    .d(_039_),
    .z(bit_cnt[15])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _314_ (
    .cp(clk),
    .d(_040_),
    .z(bit_cnt[16])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _315_ (
    .cp(clk),
    .d(_041_),
    .z(bit_cnt[17])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _316_ (
    .cp(clk),
    .d(_042_),
    .z(bit_cnt[18])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _317_ (
    .cp(clk),
    .d(_043_),
    .z(bit_cnt[19])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _318_ (
    .cp(clk),
    .d(_044_),
    .z(bit_cnt[20])
  );
  (* src = "rx.v:50.1-59.4" *)
  dfnt1v0x2 _319_ (
    .cp(clk),
    .d(_045_),
    .z(start_en)
  );
  (* src = "rx.v:70.1-77.4" *)
  dfnt1v0x2 _320_ (
    .cp(clk),
    .d(_046_),
    .z(bit_flag)
  );
  (* src = "rx.v:41.1-48.4" *)
  dfnt1v0x2 _321_ (
    .cp(clk),
    .d(_047_),
    .z(start_flag)
  );
  (* src = "rx.v:27.1-40.4" *)
  dfnt1v0x2 _322_ (
    .cp(clk),
    .d(_048_),
    .z(d_flip_0)
  );
  (* src = "rx.v:27.1-40.4" *)
  dfnt1v0x2 _323_ (
    .cp(clk),
    .d(_049_),
    .z(d_flip_1)
  );
endmodule

(* hdlname = "\\tx" *)
(* src = "tx.v:1.1-81.10" *)
module \$paramod\tx\MAX_CNT=s32'00000000000000000001010001011000 (clk, rstn, data, flag, tx);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  (* src = "tx.v:14.13-14.20" *)
  wire [20:0] bit_cnt;
  (* src = "tx.v:15.13-15.21" *)
  wire bit_flag;
  (* src = "tx.v:4.25-4.28" *)
  input clk;
  wire clk;
  (* src = "tx.v:16.13-16.16" *)
  wire [4:0] cnt;
  (* src = "tx.v:6.25-6.29" *)
  input [7:0] data;
  wire [7:0] data;
  (* src = "tx.v:8.25-8.29" *)
  input flag;
  wire flag;
  (* src = "tx.v:5.25-5.29" *)
  input rstn;
  wire rstn;
  (* src = "tx.v:13.13-13.21" *)
  wire start_en;
  (* src = "tx.v:9.20-9.22" *)
  output tx;
  wire tx;
  iv1v0x05 _109_ (
    .a(tx),
    .z(_083_)
  );
  iv1v0x05 _110_ (
    .a(bit_cnt[5]),
    .z(_084_)
  );
  iv1v0x05 _111_ (
    .a(bit_cnt[7]),
    .z(_085_)
  );
  iv1v0x05 _112_ (
    .a(bit_cnt[6]),
    .z(_086_)
  );
  iv1v0x05 _113_ (
    .a(bit_cnt[9]),
    .z(_087_)
  );
  iv1v0x05 _114_ (
    .a(bit_cnt[8]),
    .z(_088_)
  );
  an2v0x05 _115_ (
    .a(start_en),
    .b(rstn),
    .z(_089_)
  );
  nr3v0x05 _116_ (
    .a(bit_cnt[20]),
    .b(bit_cnt[17]),
    .c(bit_cnt[19]),
    .z(_090_)
  );
  nd3abv0x05 _117_ (
    .a(bit_cnt[16]),
    .b(bit_cnt[18]),
    .c(_090_),
    .z(_091_)
  );
  an2v0x05 _118_ (
    .a(bit_cnt[0]),
    .b(bit_cnt[1]),
    .z(_092_)
  );
  an2v0x05 _119_ (
    .a(bit_cnt[2]),
    .b(_092_),
    .z(_093_)
  );
  nd2av0x05 _120_ (
    .a(bit_cnt[3]),
    .b(_093_),
    .z(_094_)
  );
  nr2v0x05 _121_ (
    .a(bit_cnt[15]),
    .b(bit_cnt[14]),
    .z(_095_)
  );
  nr3abv0x05 _122_ (
    .a(bit_cnt[4]),
    .b(_095_),
    .c(bit_cnt[5]),
    .z(_096_)
  );
  nr2v0x05 _123_ (
    .a(bit_cnt[9]),
    .b(bit_cnt[8]),
    .z(_097_)
  );
  nr3abv0x05 _124_ (
    .a(_085_),
    .b(bit_cnt[12]),
    .c(bit_cnt[13]),
    .z(_098_)
  );
  nr3abv0x05 _125_ (
    .a(bit_cnt[10]),
    .b(_098_),
    .c(bit_cnt[11]),
    .z(_099_)
  );
  nd4v0x05 _126_ (
    .a(bit_cnt[6]),
    .b(_096_),
    .c(_097_),
    .d(_099_),
    .z(_100_)
  );
  oai31v0x05 _127_ (
    .a1(_091_),
    .a2(_094_),
    .a3(_100_),
    .b(_089_),
    .z(_101_)
  );
  nr2v0x05 _128_ (
    .a(bit_cnt[0]),
    .b(_101_),
    .z(_000_)
  );
  nr2v0x05 _129_ (
    .a(bit_cnt[0]),
    .b(bit_cnt[1]),
    .z(_102_)
  );
  nr3v0x05 _130_ (
    .a(_092_),
    .b(_101_),
    .c(_102_),
    .z(_001_)
  );
  nr2v0x05 _131_ (
    .a(bit_cnt[2]),
    .b(_092_),
    .z(_103_)
  );
  nr3v0x05 _132_ (
    .a(_093_),
    .b(_101_),
    .c(_103_),
    .z(_002_)
  );
  xnr2v0x05 _133_ (
    .a(bit_cnt[3]),
    .b(_093_),
    .z(_104_)
  );
  nr2v0x05 _134_ (
    .a(_101_),
    .b(_104_),
    .z(_003_)
  );
  an4v0x05 _135_ (
    .a(bit_cnt[0]),
    .b(bit_cnt[1]),
    .c(bit_cnt[3]),
    .d(bit_cnt[2]),
    .z(_105_)
  );
  nr2v0x05 _136_ (
    .a(bit_cnt[4]),
    .b(_105_),
    .z(_106_)
  );
  an2v0x05 _137_ (
    .a(bit_cnt[4]),
    .b(_105_),
    .z(_107_)
  );
  nr3v0x05 _138_ (
    .a(_101_),
    .b(_106_),
    .c(_107_),
    .z(_004_)
  );
  nr2v0x05 _139_ (
    .a(bit_cnt[5]),
    .b(_107_),
    .z(_108_)
  );
  nd2v0x05 _140_ (
    .a(bit_cnt[5]),
    .b(_107_),
    .z(_029_)
  );
  nr3av0x05 _141_ (
    .a(_029_),
    .b(_101_),
    .c(_108_),
    .z(_005_)
  );
  nd4v0x05 _142_ (
    .a(bit_cnt[4]),
    .b(bit_cnt[5]),
    .c(bit_cnt[6]),
    .d(_105_),
    .z(_030_)
  );
  nd2v0x05 _143_ (
    .a(_086_),
    .b(_029_),
    .z(_031_)
  );
  nr3abv0x05 _144_ (
    .a(_030_),
    .b(_031_),
    .c(_101_),
    .z(_006_)
  );
  nr2v0x05 _145_ (
    .a(_085_),
    .b(_030_),
    .z(_032_)
  );
  an2v0x05 _146_ (
    .a(_085_),
    .b(_030_),
    .z(_033_)
  );
  nr3v0x05 _147_ (
    .a(_101_),
    .b(_032_),
    .c(_033_),
    .z(_007_)
  );
  nr3v0x05 _148_ (
    .a(_085_),
    .b(_088_),
    .c(_030_),
    .z(_034_)
  );
  nr2v0x05 _149_ (
    .a(bit_cnt[8]),
    .b(_032_),
    .z(_035_)
  );
  nr3v0x05 _150_ (
    .a(_101_),
    .b(_034_),
    .c(_035_),
    .z(_008_)
  );
  nr4v1x05 _151_ (
    .a(_085_),
    .b(_087_),
    .c(_088_),
    .d(_030_),
    .z(_036_)
  );
  nr2v0x05 _152_ (
    .a(bit_cnt[9]),
    .b(_034_),
    .z(_037_)
  );
  nr3v0x05 _153_ (
    .a(_101_),
    .b(_036_),
    .c(_037_),
    .z(_009_)
  );
  an2v0x05 _154_ (
    .a(bit_cnt[10]),
    .b(_036_),
    .z(_038_)
  );
  nr2v0x05 _155_ (
    .a(bit_cnt[10]),
    .b(_036_),
    .z(_039_)
  );
  nr3v0x05 _156_ (
    .a(_101_),
    .b(_038_),
    .c(_039_),
    .z(_010_)
  );
  aoi21v0x05 _157_ (
    .a1(bit_cnt[11]),
    .a2(_038_),
    .b(_101_),
    .z(_040_)
  );
  oan21v0x05 _158_ (
    .a1(bit_cnt[11]),
    .a2(_038_),
    .b(_040_),
    .z(_011_)
  );
  an4v0x05 _159_ (
    .a(bit_cnt[11]),
    .b(bit_cnt[10]),
    .c(bit_cnt[12]),
    .d(_036_),
    .z(_041_)
  );
  aoi21v0x05 _160_ (
    .a1(bit_cnt[11]),
    .a2(_038_),
    .b(bit_cnt[12]),
    .z(_042_)
  );
  nr3v0x05 _161_ (
    .a(_101_),
    .b(_041_),
    .c(_042_),
    .z(_012_)
  );
  an2v0x05 _162_ (
    .a(bit_cnt[13]),
    .b(_041_),
    .z(_043_)
  );
  nr2v0x05 _163_ (
    .a(bit_cnt[13]),
    .b(_041_),
    .z(_044_)
  );
  nr3v0x05 _164_ (
    .a(_101_),
    .b(_043_),
    .c(_044_),
    .z(_013_)
  );
  an2v0x05 _165_ (
    .a(bit_cnt[14]),
    .b(_043_),
    .z(_045_)
  );
  nr2v0x05 _166_ (
    .a(bit_cnt[14]),
    .b(_043_),
    .z(_046_)
  );
  nr3v0x05 _167_ (
    .a(_101_),
    .b(_045_),
    .c(_046_),
    .z(_014_)
  );
  an4v0x05 _168_ (
    .a(bit_cnt[13]),
    .b(bit_cnt[15]),
    .c(bit_cnt[14]),
    .d(_041_),
    .z(_047_)
  );
  nr2v0x05 _169_ (
    .a(bit_cnt[15]),
    .b(_045_),
    .z(_048_)
  );
  nr3v0x05 _170_ (
    .a(_101_),
    .b(_047_),
    .c(_048_),
    .z(_015_)
  );
  an2v0x05 _171_ (
    .a(bit_cnt[16]),
    .b(_047_),
    .z(_049_)
  );
  nr2v0x05 _172_ (
    .a(bit_cnt[16]),
    .b(_047_),
    .z(_050_)
  );
  nr3v0x05 _173_ (
    .a(_101_),
    .b(_049_),
    .c(_050_),
    .z(_016_)
  );
  aoi21v0x05 _174_ (
    .a1(bit_cnt[17]),
    .a2(_049_),
    .b(_101_),
    .z(_051_)
  );
  oan21v0x05 _175_ (
    .a1(bit_cnt[17]),
    .a2(_049_),
    .b(_051_),
    .z(_017_)
  );
  an4v0x05 _176_ (
    .a(bit_cnt[17]),
    .b(bit_cnt[16]),
    .c(bit_cnt[18]),
    .d(_047_),
    .z(_052_)
  );
  aoi21v0x05 _177_ (
    .a1(bit_cnt[17]),
    .a2(_049_),
    .b(bit_cnt[18]),
    .z(_053_)
  );
  nr3v0x05 _178_ (
    .a(_101_),
    .b(_052_),
    .c(_053_),
    .z(_018_)
  );
  xnr2v0x05 _179_ (
    .a(bit_cnt[19]),
    .b(_052_),
    .z(_054_)
  );
  nr2v0x05 _180_ (
    .a(_101_),
    .b(_054_),
    .z(_019_)
  );
  xaoi21v0x05 _181_ (
    .a1(bit_cnt[19]),
    .a2(_052_),
    .b(bit_cnt[20]),
    .z(_055_)
  );
  nr2v0x05 _182_ (
    .a(_101_),
    .b(_055_),
    .z(_020_)
  );
  nd2av0x05 _183_ (
    .a(cnt[2]),
    .b(cnt[3]),
    .z(_056_)
  );
  nr4v1x05 _184_ (
    .a(cnt[1]),
    .b(cnt[0]),
    .c(data[7]),
    .d(_056_),
    .z(_057_)
  );
  nr2av0x1 _185_ (
    .a(cnt[0]),
    .b(cnt[1]),
    .z(_058_)
  );
  an2v0x05 _186_ (
    .a(cnt[1]),
    .b(cnt[0]),
    .z(_059_)
  );
  nd3av0x05 _187_ (
    .a(cnt[0]),
    .b(data[5]),
    .c(cnt[1]),
    .z(_060_)
  );
  nd3abv0x05 _188_ (
    .a(cnt[1]),
    .b(cnt[0]),
    .c(data[3]),
    .z(_061_)
  );
  aoi22v0x05 _189_ (
    .a1(data[4]),
    .a2(_058_),
    .b1(_059_),
    .b2(data[6]),
    .z(_062_)
  );
  nd4v0x05 _190_ (
    .a(cnt[2]),
    .b(_060_),
    .c(_061_),
    .d(_062_),
    .z(_063_)
  );
  nr3abv0x05 _191_ (
    .a(cnt[1]),
    .b(data[1]),
    .c(cnt[0]),
    .z(_064_)
  );
  aoi22v0x05 _192_ (
    .a1(data[0]),
    .a2(_058_),
    .b1(_059_),
    .b2(data[2]),
    .z(_065_)
  );
  nd3abv0x05 _193_ (
    .a(cnt[2]),
    .b(_064_),
    .c(_065_),
    .z(_066_)
  );
  aoi21v0x05 _194_ (
    .a1(_063_),
    .a2(_066_),
    .b(cnt[3]),
    .z(_067_)
  );
  nr2v0x05 _195_ (
    .a(_057_),
    .b(_067_),
    .z(_068_)
  );
  oai21v0x05 _196_ (
    .a1(cnt[4]),
    .a2(_068_),
    .b(bit_flag),
    .z(_069_)
  );
  oai211v0x05 _197_ (
    .a1(bit_flag),
    .a2(_083_),
    .b(rstn),
    .c(_069_),
    .z(_021_)
  );
  nd2v0x05 _198_ (
    .a(bit_flag),
    .b(_058_),
    .z(_070_)
  );
  oai31v0x05 _199_ (
    .a1(cnt[4]),
    .a2(_056_),
    .a3(_070_),
    .b(rstn),
    .z(_071_)
  );
  xnr2v0x05 _200_ (
    .a(bit_flag),
    .b(cnt[0]),
    .z(_072_)
  );
  nr2v0x05 _201_ (
    .a(_071_),
    .b(_072_),
    .z(_022_)
  );
  xaoi21v0x05 _202_ (
    .a1(bit_flag),
    .a2(cnt[0]),
    .b(cnt[1]),
    .z(_073_)
  );
  nr2v0x05 _203_ (
    .a(_071_),
    .b(_073_),
    .z(_023_)
  );
  aoi21v0x05 _204_ (
    .a1(bit_flag),
    .a2(_059_),
    .b(cnt[2]),
    .z(_074_)
  );
  an3v0x05 _205_ (
    .a(bit_flag),
    .b(cnt[2]),
    .c(_059_),
    .z(_075_)
  );
  nr3v0x05 _206_ (
    .a(_071_),
    .b(_074_),
    .c(_075_),
    .z(_024_)
  );
  aoi21v0x05 _207_ (
    .a1(cnt[3]),
    .a2(_075_),
    .b(_071_),
    .z(_076_)
  );
  oan21v0x05 _208_ (
    .a1(cnt[3]),
    .a2(_075_),
    .b(_076_),
    .z(_025_)
  );
  xaoi21v0x05 _209_ (
    .a1(cnt[3]),
    .a2(_075_),
    .b(cnt[4]),
    .z(_077_)
  );
  nr2v0x05 _210_ (
    .a(_071_),
    .b(_077_),
    .z(_026_)
  );
  nr3v0x05 _211_ (
    .a(bit_cnt[10]),
    .b(bit_cnt[12]),
    .c(bit_cnt[13]),
    .z(_078_)
  );
  an4v0x05 _212_ (
    .a(_086_),
    .b(bit_cnt[9]),
    .c(_088_),
    .d(bit_cnt[11]),
    .z(_079_)
  );
  nr4v1x05 _213_ (
    .a(bit_cnt[2]),
    .b(bit_cnt[4]),
    .c(_084_),
    .d(bit_cnt[7]),
    .z(_080_)
  );
  nd3v0x05 _214_ (
    .a(_078_),
    .b(_079_),
    .c(_080_),
    .z(_081_)
  );
  nd4v0x05 _215_ (
    .a(rstn),
    .b(bit_cnt[3]),
    .c(_092_),
    .d(_095_),
    .z(_082_)
  );
  nr3v0x05 _216_ (
    .a(_091_),
    .b(_081_),
    .c(_082_),
    .z(_027_)
  );
  oan21bv0x05 _217_ (
    .a1(start_en),
    .a2(flag),
    .b(_071_),
    .z(_028_)
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _218_ (
    .cp(clk),
    .d(_000_),
    .z(bit_cnt[0])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _219_ (
    .cp(clk),
    .d(_001_),
    .z(bit_cnt[1])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _220_ (
    .cp(clk),
    .d(_002_),
    .z(bit_cnt[2])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _221_ (
    .cp(clk),
    .d(_003_),
    .z(bit_cnt[3])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _222_ (
    .cp(clk),
    .d(_004_),
    .z(bit_cnt[4])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _223_ (
    .cp(clk),
    .d(_005_),
    .z(bit_cnt[5])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _224_ (
    .cp(clk),
    .d(_006_),
    .z(bit_cnt[6])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _225_ (
    .cp(clk),
    .d(_007_),
    .z(bit_cnt[7])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _226_ (
    .cp(clk),
    .d(_008_),
    .z(bit_cnt[8])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _227_ (
    .cp(clk),
    .d(_009_),
    .z(bit_cnt[9])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _228_ (
    .cp(clk),
    .d(_010_),
    .z(bit_cnt[10])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _229_ (
    .cp(clk),
    .d(_011_),
    .z(bit_cnt[11])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _230_ (
    .cp(clk),
    .d(_012_),
    .z(bit_cnt[12])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _231_ (
    .cp(clk),
    .d(_013_),
    .z(bit_cnt[13])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _232_ (
    .cp(clk),
    .d(_014_),
    .z(bit_cnt[14])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _233_ (
    .cp(clk),
    .d(_015_),
    .z(bit_cnt[15])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _234_ (
    .cp(clk),
    .d(_016_),
    .z(bit_cnt[16])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _235_ (
    .cp(clk),
    .d(_017_),
    .z(bit_cnt[17])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _236_ (
    .cp(clk),
    .d(_018_),
    .z(bit_cnt[18])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _237_ (
    .cp(clk),
    .d(_019_),
    .z(bit_cnt[19])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _238_ (
    .cp(clk),
    .d(_020_),
    .z(bit_cnt[20])
  );
  (* src = "tx.v:62.1-80.4" *)
  dfnt1v0x2 _239_ (
    .cp(clk),
    .d(_021_),
    .z(tx)
  );
  (* src = "tx.v:51.1-60.4" *)
  dfnt1v0x2 _240_ (
    .cp(clk),
    .d(_022_),
    .z(cnt[0])
  );
  (* src = "tx.v:51.1-60.4" *)
  dfnt1v0x2 _241_ (
    .cp(clk),
    .d(_023_),
    .z(cnt[1])
  );
  (* src = "tx.v:51.1-60.4" *)
  dfnt1v0x2 _242_ (
    .cp(clk),
    .d(_024_),
    .z(cnt[2])
  );
  (* src = "tx.v:51.1-60.4" *)
  dfnt1v0x2 _243_ (
    .cp(clk),
    .d(_025_),
    .z(cnt[3])
  );
  (* src = "tx.v:51.1-60.4" *)
  dfnt1v0x2 _244_ (
    .cp(clk),
    .d(_026_),
    .z(cnt[4])
  );
  (* src = "tx.v:42.1-49.4" *)
  dfnt1v0x2 _245_ (
    .cp(clk),
    .d(_027_),
    .z(bit_flag)
  );
  (* src = "tx.v:19.1-28.4" *)
  dfnt1v0x2 _246_ (
    .cp(clk),
    .d(_028_),
    .z(start_en)
  );
endmodule

(* src = "rx.v:1.1-125.10" *)
module rx(clk, rstn, rx, rx_data, out_flag);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  (* src = "rx.v:19.18-19.25" *)
  wire [20:0] bit_cnt;
  (* src = "rx.v:21.17-21.25" *)
  wire bit_flag;
  (* src = "rx.v:4.29-4.32" *)
  input clk;
  wire clk;
  (* src = "rx.v:20.17-20.20" *)
  wire [4:0] cnt;
  (* src = "rx.v:12.12-12.20" *)
  wire d_flip_0;
  (* src = "rx.v:13.12-13.20" *)
  wire d_flip_1;
  (* src = "rx.v:14.10-14.18" *)
  wire d_flip_2;
  (* src = "rx.v:22.17-22.26" *)
  wire [7:0] d_rx_data;
  (* src = "rx.v:17.17-17.25" *)
  wire fin_flag;
  (* src = "rx.v:9.29-9.37" *)
  output out_flag;
  wire out_flag;
  (* src = "rx.v:5.29-5.33" *)
  input rstn;
  wire rstn;
  (* src = "rx.v:6.29-6.31" *)
  input rx;
  wire rx;
  (* src = "rx.v:8.29-8.36" *)
  output [7:0] rx_data;
  wire [7:0] rx_data;
  (* src = "rx.v:18.17-18.25" *)
  wire start_en;
  (* src = "rx.v:16.17-16.27" *)
  wire start_flag;
  iv1v0x05 _134_ (
    .a(bit_cnt[20]),
    .z(_050_)
  );
  iv1v0x05 _135_ (
    .a(bit_cnt[12]),
    .z(_051_)
  );
  iv1v0x05 _136_ (
    .a(bit_flag),
    .z(_052_)
  );
  an2v0x05 _137_ (
    .a(rstn),
    .b(d_flip_1),
    .z(_000_)
  );
  mxn2v0x05 _138_ (
    .a0(rx_data[0]),
    .a1(d_rx_data[0]),
    .s(fin_flag),
    .z(_053_)
  );
  an2v0x05 _139_ (
    .a(rstn),
    .b(_053_),
    .z(_001_)
  );
  mxn2v0x05 _140_ (
    .a0(rx_data[1]),
    .a1(d_rx_data[1]),
    .s(fin_flag),
    .z(_054_)
  );
  an2v0x05 _141_ (
    .a(rstn),
    .b(_054_),
    .z(_002_)
  );
  mxn2v0x05 _142_ (
    .a0(rx_data[2]),
    .a1(d_rx_data[2]),
    .s(fin_flag),
    .z(_055_)
  );
  an2v0x05 _143_ (
    .a(rstn),
    .b(_055_),
    .z(_003_)
  );
  mxn2v0x05 _144_ (
    .a0(rx_data[3]),
    .a1(d_rx_data[3]),
    .s(fin_flag),
    .z(_056_)
  );
  an2v0x05 _145_ (
    .a(rstn),
    .b(_056_),
    .z(_004_)
  );
  mxn2v0x05 _146_ (
    .a0(rx_data[4]),
    .a1(d_rx_data[4]),
    .s(fin_flag),
    .z(_057_)
  );
  an2v0x05 _147_ (
    .a(rstn),
    .b(_057_),
    .z(_005_)
  );
  mxn2v0x05 _148_ (
    .a0(rx_data[5]),
    .a1(d_rx_data[5]),
    .s(fin_flag),
    .z(_058_)
  );
  an2v0x05 _149_ (
    .a(rstn),
    .b(_058_),
    .z(_006_)
  );
  mxn2v0x05 _150_ (
    .a0(rx_data[6]),
    .a1(d_rx_data[6]),
    .s(fin_flag),
    .z(_059_)
  );
  an2v0x05 _151_ (
    .a(rstn),
    .b(_059_),
    .z(_007_)
  );
  mxn2v0x05 _152_ (
    .a0(rx_data[7]),
    .a1(d_rx_data[7]),
    .s(fin_flag),
    .z(_060_)
  );
  an2v0x05 _153_ (
    .a(rstn),
    .b(_060_),
    .z(_008_)
  );
  an2v0x05 _154_ (
    .a(fin_flag),
    .b(rstn),
    .z(_009_)
  );
  or2v0x05 _155_ (
    .a(cnt[4]),
    .b(cnt[3]),
    .z(_061_)
  );
  nr3av0x05 _156_ (
    .a(cnt[3]),
    .b(cnt[2]),
    .c(cnt[4]),
    .z(_062_)
  );
  nd3abv0x05 _157_ (
    .a(cnt[1]),
    .b(cnt[0]),
    .c(_062_),
    .z(_063_)
  );
  nr4v1x05 _158_ (
    .a(cnt[2]),
    .b(cnt[1]),
    .c(cnt[0]),
    .d(_061_),
    .z(_064_)
  );
  aoi112v0x05 _159_ (
    .a(_052_),
    .b(_064_),
    .c1(_063_),
    .c2(_061_),
    .z(_065_)
  );
  mxn2v0x05 _160_ (
    .a0(d_rx_data[0]),
    .a1(d_rx_data[1]),
    .s(_065_),
    .z(_066_)
  );
  an2v0x05 _161_ (
    .a(rstn),
    .b(_066_),
    .z(_010_)
  );
  mxn2v0x05 _162_ (
    .a0(d_rx_data[1]),
    .a1(d_rx_data[2]),
    .s(_065_),
    .z(_067_)
  );
  an2v0x05 _163_ (
    .a(rstn),
    .b(_067_),
    .z(_011_)
  );
  mxn2v0x05 _164_ (
    .a0(d_rx_data[2]),
    .a1(d_rx_data[3]),
    .s(_065_),
    .z(_068_)
  );
  an2v0x05 _165_ (
    .a(rstn),
    .b(_068_),
    .z(_012_)
  );
  mxn2v0x05 _166_ (
    .a0(d_rx_data[3]),
    .a1(d_rx_data[4]),
    .s(_065_),
    .z(_069_)
  );
  an2v0x05 _167_ (
    .a(rstn),
    .b(_069_),
    .z(_013_)
  );
  mxn2v0x05 _168_ (
    .a0(d_rx_data[4]),
    .a1(d_rx_data[5]),
    .s(_065_),
    .z(_070_)
  );
  an2v0x05 _169_ (
    .a(rstn),
    .b(_070_),
    .z(_014_)
  );
  mxn2v0x05 _170_ (
    .a0(d_rx_data[5]),
    .a1(d_rx_data[6]),
    .s(_065_),
    .z(_071_)
  );
  an2v0x05 _171_ (
    .a(rstn),
    .b(_071_),
    .z(_015_)
  );
  mxn2v0x05 _172_ (
    .a0(d_rx_data[6]),
    .a1(d_rx_data[7]),
    .s(_065_),
    .z(_072_)
  );
  an2v0x05 _173_ (
    .a(rstn),
    .b(_072_),
    .z(_016_)
  );
  mxn2v0x05 _174_ (
    .a0(d_rx_data[7]),
    .a1(d_flip_2),
    .s(_065_),
    .z(_073_)
  );
  an2v0x05 _175_ (
    .a(rstn),
    .b(_073_),
    .z(_017_)
  );
  oai21v0x05 _176_ (
    .a1(_052_),
    .a2(_063_),
    .b(rstn),
    .z(_074_)
  );
  or2v0x05 _177_ (
    .a(bit_flag),
    .b(cnt[0]),
    .z(_075_)
  );
  nd2v0x05 _178_ (
    .a(bit_flag),
    .b(cnt[0]),
    .z(_076_)
  );
  nr3abv0x05 _179_ (
    .a(_075_),
    .b(_076_),
    .c(_074_),
    .z(_018_)
  );
  xor2v0x05 _180_ (
    .a(cnt[1]),
    .b(_076_),
    .z(_077_)
  );
  nr2v0x05 _181_ (
    .a(_074_),
    .b(_077_),
    .z(_019_)
  );
  aoi31v0x05 _182_ (
    .a1(bit_flag),
    .a2(cnt[1]),
    .a3(cnt[0]),
    .b(cnt[2]),
    .z(_078_)
  );
  nr3abv0x05 _183_ (
    .a(cnt[2]),
    .b(cnt[1]),
    .c(_076_),
    .z(_079_)
  );
  nr3v0x05 _184_ (
    .a(_074_),
    .b(_078_),
    .c(_079_),
    .z(_020_)
  );
  xnr2v0x05 _185_ (
    .a(cnt[3]),
    .b(_079_),
    .z(_080_)
  );
  nr2v0x05 _186_ (
    .a(_074_),
    .b(_080_),
    .z(_021_)
  );
  xaoi21v0x05 _187_ (
    .a1(cnt[3]),
    .a2(_079_),
    .b(cnt[4]),
    .z(_081_)
  );
  nr2v0x05 _188_ (
    .a(_074_),
    .b(_081_),
    .z(_022_)
  );
  nr3abv0x05 _189_ (
    .a(bit_flag),
    .b(rstn),
    .c(_063_),
    .z(_023_)
  );
  nd3abv0x05 _190_ (
    .a(_076_),
    .b(cnt[1]),
    .c(_062_),
    .z(_082_)
  );
  nr4v1x05 _191_ (
    .a(bit_cnt[15]),
    .b(bit_cnt[14]),
    .c(bit_cnt[5]),
    .d(bit_cnt[4]),
    .z(_083_)
  );
  nd2v0x05 _192_ (
    .a(bit_cnt[1]),
    .b(bit_cnt[0]),
    .z(_084_)
  );
  nd3v0x05 _193_ (
    .a(bit_cnt[2]),
    .b(bit_cnt[1]),
    .c(bit_cnt[0]),
    .z(_085_)
  );
  nd3abv0x05 _194_ (
    .a(bit_cnt[6]),
    .b(bit_cnt[3]),
    .c(bit_cnt[7]),
    .z(_086_)
  );
  nr3v0x05 _195_ (
    .a(bit_cnt[18]),
    .b(bit_cnt[17]),
    .c(bit_cnt[16]),
    .z(_087_)
  );
  nr3abv0x05 _196_ (
    .a(_050_),
    .b(_087_),
    .c(bit_cnt[19]),
    .z(_088_)
  );
  an2v0x05 _197_ (
    .a(bit_cnt[9]),
    .b(bit_cnt[8]),
    .z(_089_)
  );
  or4v0x05 _198_ (
    .a(bit_cnt[13]),
    .b(_051_),
    .c(bit_cnt[11]),
    .d(bit_cnt[10]),
    .z(_090_)
  );
  nr3v0x05 _199_ (
    .a(_085_),
    .b(_086_),
    .c(_090_),
    .z(_091_)
  );
  nd4v0x05 _200_ (
    .a(_083_),
    .b(_088_),
    .c(_089_),
    .d(_091_),
    .z(_092_)
  );
  nd3v0x05 _201_ (
    .a(rstn),
    .b(_082_),
    .c(_092_),
    .z(_093_)
  );
  xnr2v0x05 _202_ (
    .a(start_en),
    .b(bit_cnt[0]),
    .z(_094_)
  );
  nr2v0x05 _203_ (
    .a(_093_),
    .b(_094_),
    .z(_024_)
  );
  aoi21v0x05 _204_ (
    .a1(start_en),
    .a2(bit_cnt[0]),
    .b(bit_cnt[1]),
    .z(_095_)
  );
  nd3v0x05 _205_ (
    .a(start_en),
    .b(bit_cnt[1]),
    .c(bit_cnt[0]),
    .z(_096_)
  );
  nr3av0x05 _206_ (
    .a(_096_),
    .b(_093_),
    .c(_095_),
    .z(_025_)
  );
  xor2v0x05 _207_ (
    .a(bit_cnt[2]),
    .b(_096_),
    .z(_097_)
  );
  nr2v0x05 _208_ (
    .a(_093_),
    .b(_097_),
    .z(_026_)
  );
  aoi21a2v0x05 _209_ (
    .a1(start_en),
    .a2(_085_),
    .b(bit_cnt[3]),
    .z(_098_)
  );
  nr3abv0x05 _210_ (
    .a(start_en),
    .b(bit_cnt[3]),
    .c(_085_),
    .z(_099_)
  );
  nr3v0x05 _211_ (
    .a(_093_),
    .b(_098_),
    .c(_099_),
    .z(_027_)
  );
  nr2v0x05 _212_ (
    .a(bit_cnt[4]),
    .b(_099_),
    .z(_100_)
  );
  nd2v0x05 _213_ (
    .a(bit_cnt[4]),
    .b(_099_),
    .z(_101_)
  );
  nr3av0x05 _214_ (
    .a(_101_),
    .b(_093_),
    .c(_100_),
    .z(_028_)
  );
  xor2v0x05 _215_ (
    .a(bit_cnt[5]),
    .b(_101_),
    .z(_102_)
  );
  nr2v0x05 _216_ (
    .a(_093_),
    .b(_102_),
    .z(_029_)
  );
  nd4v0x05 _217_ (
    .a(start_en),
    .b(bit_cnt[5]),
    .c(bit_cnt[4]),
    .d(bit_cnt[3]),
    .z(_103_)
  );
  nr2v0x05 _218_ (
    .a(_085_),
    .b(_103_),
    .z(_104_)
  );
  xnr2v0x05 _219_ (
    .a(bit_cnt[6]),
    .b(_104_),
    .z(_105_)
  );
  nr2v0x05 _220_ (
    .a(_093_),
    .b(_105_),
    .z(_030_)
  );
  xaoi21v0x05 _221_ (
    .a1(bit_cnt[6]),
    .a2(_104_),
    .b(bit_cnt[7]),
    .z(_106_)
  );
  nr2v0x05 _222_ (
    .a(_093_),
    .b(_106_),
    .z(_031_)
  );
  nd2v0x05 _223_ (
    .a(bit_cnt[7]),
    .b(bit_cnt[6]),
    .z(_107_)
  );
  nr3v0x05 _224_ (
    .a(_085_),
    .b(_103_),
    .c(_107_),
    .z(_108_)
  );
  xnr2v0x05 _225_ (
    .a(bit_cnt[8]),
    .b(_108_),
    .z(_109_)
  );
  nr2v0x05 _226_ (
    .a(_093_),
    .b(_109_),
    .z(_032_)
  );
  xaoi21v0x05 _227_ (
    .a1(bit_cnt[8]),
    .a2(_108_),
    .b(bit_cnt[9]),
    .z(_110_)
  );
  nr2v0x05 _228_ (
    .a(_093_),
    .b(_110_),
    .z(_033_)
  );
  an3v0x05 _229_ (
    .a(bit_cnt[10]),
    .b(_089_),
    .c(_108_),
    .z(_111_)
  );
  aoi21v0x05 _230_ (
    .a1(_089_),
    .a2(_108_),
    .b(bit_cnt[10]),
    .z(_112_)
  );
  nr3v0x05 _231_ (
    .a(_093_),
    .b(_111_),
    .c(_112_),
    .z(_034_)
  );
  an4v0x05 _232_ (
    .a(bit_cnt[11]),
    .b(bit_cnt[10]),
    .c(_089_),
    .d(_108_),
    .z(_113_)
  );
  nr2v0x05 _233_ (
    .a(bit_cnt[11]),
    .b(_111_),
    .z(_114_)
  );
  nr3v0x05 _234_ (
    .a(_093_),
    .b(_113_),
    .c(_114_),
    .z(_035_)
  );
  xnr2v0x05 _235_ (
    .a(bit_cnt[12]),
    .b(_113_),
    .z(_115_)
  );
  nr2v0x05 _236_ (
    .a(_093_),
    .b(_115_),
    .z(_036_)
  );
  xaoi21v0x05 _237_ (
    .a1(bit_cnt[12]),
    .a2(_113_),
    .b(bit_cnt[13]),
    .z(_116_)
  );
  nr2v0x05 _238_ (
    .a(_093_),
    .b(_116_),
    .z(_037_)
  );
  an4v0x05 _239_ (
    .a(bit_cnt[14]),
    .b(bit_cnt[13]),
    .c(bit_cnt[12]),
    .d(_113_),
    .z(_117_)
  );
  aoi31v0x05 _240_ (
    .a1(bit_cnt[13]),
    .a2(bit_cnt[12]),
    .a3(_113_),
    .b(bit_cnt[14]),
    .z(_118_)
  );
  nr3v0x05 _241_ (
    .a(_093_),
    .b(_117_),
    .c(_118_),
    .z(_038_)
  );
  an2v0x05 _242_ (
    .a(bit_cnt[15]),
    .b(_117_),
    .z(_119_)
  );
  nr2v0x05 _243_ (
    .a(bit_cnt[15]),
    .b(_117_),
    .z(_120_)
  );
  nr3v0x05 _244_ (
    .a(_093_),
    .b(_119_),
    .c(_120_),
    .z(_039_)
  );
  aoi21v0x05 _245_ (
    .a1(bit_cnt[16]),
    .a2(_119_),
    .b(_093_),
    .z(_121_)
  );
  oan21v0x05 _246_ (
    .a1(bit_cnt[16]),
    .a2(_119_),
    .b(_121_),
    .z(_040_)
  );
  an4v0x05 _247_ (
    .a(bit_cnt[17]),
    .b(bit_cnt[16]),
    .c(bit_cnt[15]),
    .d(_117_),
    .z(_122_)
  );
  aoi21v0x05 _248_ (
    .a1(bit_cnt[16]),
    .a2(_119_),
    .b(bit_cnt[17]),
    .z(_123_)
  );
  nr3v0x05 _249_ (
    .a(_093_),
    .b(_122_),
    .c(_123_),
    .z(_041_)
  );
  xnr2v0x05 _250_ (
    .a(bit_cnt[18]),
    .b(_122_),
    .z(_124_)
  );
  nr2v0x05 _251_ (
    .a(_093_),
    .b(_124_),
    .z(_042_)
  );
  nd3v0x05 _252_ (
    .a(bit_cnt[19]),
    .b(bit_cnt[18]),
    .c(_122_),
    .z(_125_)
  );
  aoi21v0x05 _253_ (
    .a1(bit_cnt[18]),
    .a2(_122_),
    .b(bit_cnt[19]),
    .z(_126_)
  );
  nr3av0x05 _254_ (
    .a(_125_),
    .b(_126_),
    .c(_093_),
    .z(_043_)
  );
  aoi31v0x05 _255_ (
    .a1(bit_cnt[19]),
    .a2(bit_cnt[18]),
    .a3(_122_),
    .b(_050_),
    .z(_127_)
  );
  an4v0x05 _256_ (
    .a(_050_),
    .b(bit_cnt[19]),
    .c(bit_cnt[18]),
    .d(_122_),
    .z(_128_)
  );
  oan21bv0x05 _257_ (
    .a1(_127_),
    .a2(_128_),
    .b(_093_),
    .z(_044_)
  );
  oan21bv0x05 _258_ (
    .a1(start_en),
    .a2(start_flag),
    .b(_074_),
    .z(_045_)
  );
  nd3abv0x05 _259_ (
    .a(bit_cnt[3]),
    .b(bit_cnt[2]),
    .c(rstn),
    .z(_129_)
  );
  nd2av0x05 _260_ (
    .a(bit_cnt[10]),
    .b(bit_cnt[11]),
    .z(_130_)
  );
  nd2av0x05 _261_ (
    .a(bit_cnt[9]),
    .b(bit_cnt[8]),
    .z(_131_)
  );
  nr3v0x05 _262_ (
    .a(_129_),
    .b(_130_),
    .c(_131_),
    .z(_132_)
  );
  nr4v1x05 _263_ (
    .a(bit_cnt[13]),
    .b(bit_cnt[12]),
    .c(_084_),
    .d(_107_),
    .z(_133_)
  );
  an4v0x05 _264_ (
    .a(_083_),
    .b(_088_),
    .c(_132_),
    .d(_133_),
    .z(_046_)
  );
  nr3abv0x05 _265_ (
    .a(d_flip_2),
    .b(rstn),
    .c(d_flip_1),
    .z(_047_)
  );
  an2v0x05 _266_ (
    .a(rstn),
    .b(rx),
    .z(_048_)
  );
  an2v0x05 _267_ (
    .a(rstn),
    .b(d_flip_0),
    .z(_049_)
  );
  (* src = "rx.v:27.1-40.4" *)
  dfnt1v0x2 _268_ (
    .cp(clk),
    .d(_000_),
    .z(d_flip_2)
  );
  (* src = "rx.v:108.1-113.4" *)
  dfnt1v0x2 _269_ (
    .cp(clk),
    .d(_001_),
    .z(rx_data[0])
  );
  (* src = "rx.v:108.1-113.4" *)
  dfnt1v0x2 _270_ (
    .cp(clk),
    .d(_002_),
    .z(rx_data[1])
  );
  (* src = "rx.v:108.1-113.4" *)
  dfnt1v0x2 _271_ (
    .cp(clk),
    .d(_003_),
    .z(rx_data[2])
  );
  (* src = "rx.v:108.1-113.4" *)
  dfnt1v0x2 _272_ (
    .cp(clk),
    .d(_004_),
    .z(rx_data[3])
  );
  (* src = "rx.v:108.1-113.4" *)
  dfnt1v0x2 _273_ (
    .cp(clk),
    .d(_005_),
    .z(rx_data[4])
  );
  (* src = "rx.v:108.1-113.4" *)
  dfnt1v0x2 _274_ (
    .cp(clk),
    .d(_006_),
    .z(rx_data[5])
  );
  (* src = "rx.v:108.1-113.4" *)
  dfnt1v0x2 _275_ (
    .cp(clk),
    .d(_007_),
    .z(rx_data[6])
  );
  (* src = "rx.v:108.1-113.4" *)
  dfnt1v0x2 _276_ (
    .cp(clk),
    .d(_008_),
    .z(rx_data[7])
  );
  (* src = "rx.v:117.1-124.4" *)
  dfnt1v0x2 _277_ (
    .cp(clk),
    .d(_009_),
    .z(out_flag)
  );
  (* src = "rx.v:90.1-97.4" *)
  dfnt1v0x2 _278_ (
    .cp(clk),
    .d(_010_),
    .z(d_rx_data[0])
  );
  (* src = "rx.v:90.1-97.4" *)
  dfnt1v0x2 _279_ (
    .cp(clk),
    .d(_011_),
    .z(d_rx_data[1])
  );
  (* src = "rx.v:90.1-97.4" *)
  dfnt1v0x2 _280_ (
    .cp(clk),
    .d(_012_),
    .z(d_rx_data[2])
  );
  (* src = "rx.v:90.1-97.4" *)
  dfnt1v0x2 _281_ (
    .cp(clk),
    .d(_013_),
    .z(d_rx_data[3])
  );
  (* src = "rx.v:90.1-97.4" *)
  dfnt1v0x2 _282_ (
    .cp(clk),
    .d(_014_),
    .z(d_rx_data[4])
  );
  (* src = "rx.v:90.1-97.4" *)
  dfnt1v0x2 _283_ (
    .cp(clk),
    .d(_015_),
    .z(d_rx_data[5])
  );
  (* src = "rx.v:90.1-97.4" *)
  dfnt1v0x2 _284_ (
    .cp(clk),
    .d(_016_),
    .z(d_rx_data[6])
  );
  (* src = "rx.v:90.1-97.4" *)
  dfnt1v0x2 _285_ (
    .cp(clk),
    .d(_017_),
    .z(d_rx_data[7])
  );
  (* src = "rx.v:79.1-88.4" *)
  dfnt1v0x2 _286_ (
    .cp(clk),
    .d(_018_),
    .z(cnt[0])
  );
  (* src = "rx.v:79.1-88.4" *)
  dfnt1v0x2 _287_ (
    .cp(clk),
    .d(_019_),
    .z(cnt[1])
  );
  (* src = "rx.v:79.1-88.4" *)
  dfnt1v0x2 _288_ (
    .cp(clk),
    .d(_020_),
    .z(cnt[2])
  );
  (* src = "rx.v:79.1-88.4" *)
  dfnt1v0x2 _289_ (
    .cp(clk),
    .d(_021_),
    .z(cnt[3])
  );
  (* src = "rx.v:79.1-88.4" *)
  dfnt1v0x2 _290_ (
    .cp(clk),
    .d(_022_),
    .z(cnt[4])
  );
  (* src = "rx.v:99.1-106.4" *)
  dfnt1v0x2 _291_ (
    .cp(clk),
    .d(_023_),
    .z(fin_flag)
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _292_ (
    .cp(clk),
    .d(_024_),
    .z(bit_cnt[0])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _293_ (
    .cp(clk),
    .d(_025_),
    .z(bit_cnt[1])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _294_ (
    .cp(clk),
    .d(_026_),
    .z(bit_cnt[2])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _295_ (
    .cp(clk),
    .d(_027_),
    .z(bit_cnt[3])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _296_ (
    .cp(clk),
    .d(_028_),
    .z(bit_cnt[4])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _297_ (
    .cp(clk),
    .d(_029_),
    .z(bit_cnt[5])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _298_ (
    .cp(clk),
    .d(_030_),
    .z(bit_cnt[6])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _299_ (
    .cp(clk),
    .d(_031_),
    .z(bit_cnt[7])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _300_ (
    .cp(clk),
    .d(_032_),
    .z(bit_cnt[8])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _301_ (
    .cp(clk),
    .d(_033_),
    .z(bit_cnt[9])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _302_ (
    .cp(clk),
    .d(_034_),
    .z(bit_cnt[10])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _303_ (
    .cp(clk),
    .d(_035_),
    .z(bit_cnt[11])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _304_ (
    .cp(clk),
    .d(_036_),
    .z(bit_cnt[12])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _305_ (
    .cp(clk),
    .d(_037_),
    .z(bit_cnt[13])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _306_ (
    .cp(clk),
    .d(_038_),
    .z(bit_cnt[14])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _307_ (
    .cp(clk),
    .d(_039_),
    .z(bit_cnt[15])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _308_ (
    .cp(clk),
    .d(_040_),
    .z(bit_cnt[16])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _309_ (
    .cp(clk),
    .d(_041_),
    .z(bit_cnt[17])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _310_ (
    .cp(clk),
    .d(_042_),
    .z(bit_cnt[18])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _311_ (
    .cp(clk),
    .d(_043_),
    .z(bit_cnt[19])
  );
  (* src = "rx.v:61.1-68.4" *)
  dfnt1v0x2 _312_ (
    .cp(clk),
    .d(_044_),
    .z(bit_cnt[20])
  );
  (* src = "rx.v:50.1-59.4" *)
  dfnt1v0x2 _313_ (
    .cp(clk),
    .d(_045_),
    .z(start_en)
  );
  (* src = "rx.v:70.1-77.4" *)
  dfnt1v0x2 _314_ (
    .cp(clk),
    .d(_046_),
    .z(bit_flag)
  );
  (* src = "rx.v:41.1-48.4" *)
  dfnt1v0x2 _315_ (
    .cp(clk),
    .d(_047_),
    .z(start_flag)
  );
  (* src = "rx.v:27.1-40.4" *)
  dfnt1v0x2 _316_ (
    .cp(clk),
    .d(_048_),
    .z(d_flip_0)
  );
  (* src = "rx.v:27.1-40.4" *)
  dfnt1v0x2 _317_ (
    .cp(clk),
    .d(_049_),
    .z(d_flip_1)
  );
endmodule

(* src = "top_rs232.v:1.1-35.10" *)
module top_rs232(clk, rstn, rx, tx);
  (* src = "top_rs232.v:2.29-2.32" *)
  input clk;
  wire clk;
  (* src = "top_rs232.v:9.17-9.24" *)
  wire [7:0] po_data;
  (* src = "top_rs232.v:10.17-10.24" *)
  wire po_flag;
  (* src = "top_rs232.v:3.29-3.33" *)
  input rstn;
  wire rstn;
  (* src = "top_rs232.v:4.29-4.31" *)
  input rx;
  wire rx;
  (* src = "top_rs232.v:6.29-6.31" *)
  output tx;
  wire tx;
  (* src = "top_rs232.v:14.1-22.2" *)
  \$paramod\rx\MAX_CNT=s32'00000000000000000001010001011000  rx_0 (
    .clk(clk),
    .out_flag(po_flag),
    .rstn(rstn),
    .rx(rx),
    .rx_data(po_data)
  );
  (* src = "top_rs232.v:26.1-33.2" *)
  \$paramod\tx\MAX_CNT=s32'00000000000000000001010001011000  tx_0 (
    .clk(clk),
    .data(po_data),
    .flag(po_flag),
    .rstn(rstn),
    .tx(tx)
  );
endmodule

(* src = "tx.v:1.1-81.10" *)
module tx(clk, rstn, data, flag, tx);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  (* src = "tx.v:14.13-14.20" *)
  wire [20:0] bit_cnt;
  (* src = "tx.v:15.13-15.21" *)
  wire bit_flag;
  (* src = "tx.v:4.25-4.28" *)
  input clk;
  wire clk;
  (* src = "tx.v:16.13-16.16" *)
  wire [4:0] cnt;
  (* src = "tx.v:6.25-6.29" *)
  input [7:0] data;
  wire [7:0] data;
  (* src = "tx.v:8.25-8.29" *)
  input flag;
  wire flag;
  (* src = "tx.v:5.25-5.29" *)
  input rstn;
  wire rstn;
  (* src = "tx.v:13.13-13.21" *)
  wire start_en;
  (* src = "tx.v:9.20-9.22" *)
  output tx;
  wire tx;
  iv1v0x05 _099_ (
    .a(tx),
    .z(_074_)
  );
  nr2v0x05 _100_ (
    .a(bit_cnt[9]),
    .b(bit_cnt[8]),
    .z(_075_)
  );
  nr4v1x05 _101_ (
    .a(bit_cnt[11]),
    .b(bit_cnt[10]),
    .c(bit_cnt[13]),
    .d(bit_cnt[12]),
    .z(_076_)
  );
  nr3v0x05 _102_ (
    .a(bit_cnt[16]),
    .b(bit_cnt[19]),
    .c(bit_cnt[18]),
    .z(_077_)
  );
  nr4v1x05 _103_ (
    .a(bit_cnt[15]),
    .b(bit_cnt[14]),
    .c(bit_cnt[20]),
    .d(bit_cnt[17]),
    .z(_078_)
  );
  an4v0x05 _104_ (
    .a(_075_),
    .b(_076_),
    .c(_077_),
    .d(_078_),
    .z(_079_)
  );
  nd2av0x05 _105_ (
    .a(bit_cnt[4]),
    .b(bit_cnt[5]),
    .z(_080_)
  );
  nd3abv0x05 _106_ (
    .a(_080_),
    .b(bit_cnt[7]),
    .c(bit_cnt[6]),
    .z(_081_)
  );
  nr3v0x05 _107_ (
    .a(bit_cnt[1]),
    .b(bit_cnt[0]),
    .c(bit_cnt[3]),
    .z(_082_)
  );
  nd3v0x05 _108_ (
    .a(bit_cnt[2]),
    .b(_079_),
    .c(_082_),
    .z(_083_)
  );
  oai211v0x05 _109_ (
    .a1(_081_),
    .a2(_083_),
    .b(start_en),
    .c(rstn),
    .z(_084_)
  );
  an4v0x05 _110_ (
    .a(bit_cnt[1]),
    .b(bit_cnt[0]),
    .c(bit_cnt[3]),
    .d(bit_cnt[2]),
    .z(_085_)
  );
  xnr2v0x05 _111_ (
    .a(bit_cnt[4]),
    .b(_085_),
    .z(_086_)
  );
  nr2v0x05 _112_ (
    .a(_084_),
    .b(_086_),
    .z(_000_)
  );
  xaoi21v0x05 _113_ (
    .a1(bit_cnt[4]),
    .a2(_085_),
    .b(bit_cnt[5]),
    .z(_087_)
  );
  nr2v0x05 _114_ (
    .a(_084_),
    .b(_087_),
    .z(_001_)
  );
  an2v0x05 _115_ (
    .a(bit_cnt[5]),
    .b(bit_cnt[4]),
    .z(_088_)
  );
  nd2v0x05 _116_ (
    .a(bit_cnt[5]),
    .b(bit_cnt[4]),
    .z(_089_)
  );
  aoi21v0x05 _117_ (
    .a1(_085_),
    .a2(_088_),
    .b(bit_cnt[6]),
    .z(_090_)
  );
  nr3abv0x05 _118_ (
    .a(bit_cnt[6]),
    .b(_085_),
    .c(_089_),
    .z(_091_)
  );
  nr3v0x05 _119_ (
    .a(_084_),
    .b(_090_),
    .c(_091_),
    .z(_002_)
  );
  an4v0x05 _120_ (
    .a(bit_cnt[7]),
    .b(bit_cnt[6]),
    .c(_085_),
    .d(_088_),
    .z(_092_)
  );
  nr2v0x05 _121_ (
    .a(bit_cnt[7]),
    .b(_091_),
    .z(_093_)
  );
  nr3v0x05 _122_ (
    .a(_084_),
    .b(_092_),
    .c(_093_),
    .z(_003_)
  );
  an2v0x05 _123_ (
    .a(bit_cnt[8]),
    .b(_092_),
    .z(_094_)
  );
  nr2v0x05 _124_ (
    .a(bit_cnt[8]),
    .b(_092_),
    .z(_095_)
  );
  nr3v0x05 _125_ (
    .a(_084_),
    .b(_094_),
    .c(_095_),
    .z(_004_)
  );
  aoi21v0x05 _126_ (
    .a1(bit_cnt[9]),
    .a2(_094_),
    .b(_084_),
    .z(_096_)
  );
  oan21v0x05 _127_ (
    .a1(bit_cnt[9]),
    .a2(_094_),
    .b(_096_),
    .z(_005_)
  );
  an4v0x05 _128_ (
    .a(bit_cnt[9]),
    .b(bit_cnt[8]),
    .c(bit_cnt[10]),
    .d(_092_),
    .z(_097_)
  );
  aoi21v0x05 _129_ (
    .a1(bit_cnt[9]),
    .a2(_094_),
    .b(bit_cnt[10]),
    .z(_098_)
  );
  nr3v0x05 _130_ (
    .a(_084_),
    .b(_097_),
    .c(_098_),
    .z(_006_)
  );
  an2v0x05 _131_ (
    .a(bit_cnt[11]),
    .b(_097_),
    .z(_029_)
  );
  nr2v0x05 _132_ (
    .a(bit_cnt[11]),
    .b(_097_),
    .z(_030_)
  );
  nr3v0x05 _133_ (
    .a(_084_),
    .b(_029_),
    .c(_030_),
    .z(_007_)
  );
  an2v0x05 _134_ (
    .a(bit_cnt[12]),
    .b(_029_),
    .z(_031_)
  );
  nr2v0x05 _135_ (
    .a(bit_cnt[12]),
    .b(_029_),
    .z(_032_)
  );
  nr3v0x05 _136_ (
    .a(_084_),
    .b(_031_),
    .c(_032_),
    .z(_008_)
  );
  an4v0x05 _137_ (
    .a(bit_cnt[11]),
    .b(bit_cnt[13]),
    .c(bit_cnt[12]),
    .d(_097_),
    .z(_033_)
  );
  nr2v0x05 _138_ (
    .a(bit_cnt[13]),
    .b(_031_),
    .z(_034_)
  );
  nr3v0x05 _139_ (
    .a(_084_),
    .b(_033_),
    .c(_034_),
    .z(_009_)
  );
  an2v0x05 _140_ (
    .a(bit_cnt[14]),
    .b(_033_),
    .z(_035_)
  );
  nr2v0x05 _141_ (
    .a(bit_cnt[14]),
    .b(_033_),
    .z(_036_)
  );
  nr3v0x05 _142_ (
    .a(_084_),
    .b(_035_),
    .c(_036_),
    .z(_010_)
  );
  aoi21v0x05 _143_ (
    .a1(bit_cnt[15]),
    .a2(_035_),
    .b(_084_),
    .z(_037_)
  );
  oan21v0x05 _144_ (
    .a1(bit_cnt[15]),
    .a2(_035_),
    .b(_037_),
    .z(_011_)
  );
  an4v0x05 _145_ (
    .a(bit_cnt[15]),
    .b(bit_cnt[14]),
    .c(bit_cnt[16]),
    .d(_033_),
    .z(_038_)
  );
  aoi21v0x05 _146_ (
    .a1(bit_cnt[15]),
    .a2(_035_),
    .b(bit_cnt[16]),
    .z(_039_)
  );
  nr3v0x05 _147_ (
    .a(_084_),
    .b(_038_),
    .c(_039_),
    .z(_012_)
  );
  an2v0x05 _148_ (
    .a(bit_cnt[17]),
    .b(_038_),
    .z(_040_)
  );
  nr2v0x05 _149_ (
    .a(bit_cnt[17]),
    .b(_038_),
    .z(_041_)
  );
  nr3v0x05 _150_ (
    .a(_084_),
    .b(_040_),
    .c(_041_),
    .z(_013_)
  );
  xnr2v0x05 _151_ (
    .a(bit_cnt[18]),
    .b(_040_),
    .z(_042_)
  );
  nr2v0x05 _152_ (
    .a(_084_),
    .b(_042_),
    .z(_014_)
  );
  nd4v0x05 _153_ (
    .a(bit_cnt[17]),
    .b(bit_cnt[19]),
    .c(bit_cnt[18]),
    .d(_038_),
    .z(_043_)
  );
  aoi21v0x05 _154_ (
    .a1(bit_cnt[18]),
    .a2(_040_),
    .b(bit_cnt[19]),
    .z(_044_)
  );
  nr3av0x05 _155_ (
    .a(_043_),
    .b(_044_),
    .c(_084_),
    .z(_015_)
  );
  xor2v0x05 _156_ (
    .a(bit_cnt[20]),
    .b(_043_),
    .z(_045_)
  );
  nr2v0x05 _157_ (
    .a(_084_),
    .b(_045_),
    .z(_016_)
  );
  nd2av0x05 _158_ (
    .a(cnt[2]),
    .b(cnt[3]),
    .z(_046_)
  );
  nr4v1x05 _159_ (
    .a(cnt[1]),
    .b(cnt[0]),
    .c(data[7]),
    .d(_046_),
    .z(_047_)
  );
  nr2av0x1 _160_ (
    .a(cnt[0]),
    .b(cnt[1]),
    .z(_048_)
  );
  an2v0x05 _161_ (
    .a(cnt[1]),
    .b(cnt[0]),
    .z(_049_)
  );
  nd3av0x05 _162_ (
    .a(cnt[0]),
    .b(data[5]),
    .c(cnt[1]),
    .z(_050_)
  );
  nd3abv0x05 _163_ (
    .a(cnt[1]),
    .b(cnt[0]),
    .c(data[3]),
    .z(_051_)
  );
  aoi22v0x05 _164_ (
    .a1(data[4]),
    .a2(_048_),
    .b1(_049_),
    .b2(data[6]),
    .z(_052_)
  );
  nd4v0x05 _165_ (
    .a(cnt[2]),
    .b(_050_),
    .c(_051_),
    .d(_052_),
    .z(_053_)
  );
  nr3abv0x05 _166_ (
    .a(cnt[1]),
    .b(data[1]),
    .c(cnt[0]),
    .z(_054_)
  );
  aoi22v0x05 _167_ (
    .a1(data[0]),
    .a2(_048_),
    .b1(_049_),
    .b2(data[2]),
    .z(_055_)
  );
  nd3abv0x05 _168_ (
    .a(cnt[2]),
    .b(_054_),
    .c(_055_),
    .z(_056_)
  );
  aoi21v0x05 _169_ (
    .a1(_053_),
    .a2(_056_),
    .b(cnt[3]),
    .z(_057_)
  );
  nr2v0x05 _170_ (
    .a(_047_),
    .b(_057_),
    .z(_058_)
  );
  oai21v0x05 _171_ (
    .a1(cnt[4]),
    .a2(_058_),
    .b(bit_flag),
    .z(_059_)
  );
  oai211v0x05 _172_ (
    .a1(bit_flag),
    .a2(_074_),
    .b(rstn),
    .c(_059_),
    .z(_017_)
  );
  nd2v0x05 _173_ (
    .a(bit_flag),
    .b(_048_),
    .z(_060_)
  );
  oai31v0x05 _174_ (
    .a1(cnt[4]),
    .a2(_046_),
    .a3(_060_),
    .b(rstn),
    .z(_061_)
  );
  xnr2v0x05 _175_ (
    .a(bit_flag),
    .b(cnt[0]),
    .z(_062_)
  );
  nr2v0x05 _176_ (
    .a(_061_),
    .b(_062_),
    .z(_018_)
  );
  xaoi21v0x05 _177_ (
    .a1(bit_flag),
    .a2(cnt[0]),
    .b(cnt[1]),
    .z(_063_)
  );
  nr2v0x05 _178_ (
    .a(_061_),
    .b(_063_),
    .z(_019_)
  );
  aoi21v0x05 _179_ (
    .a1(bit_flag),
    .a2(_049_),
    .b(cnt[2]),
    .z(_064_)
  );
  an3v0x05 _180_ (
    .a(bit_flag),
    .b(cnt[2]),
    .c(_049_),
    .z(_065_)
  );
  nr3v0x05 _181_ (
    .a(_061_),
    .b(_064_),
    .c(_065_),
    .z(_020_)
  );
  aoi21v0x05 _182_ (
    .a1(cnt[3]),
    .a2(_065_),
    .b(_061_),
    .z(_066_)
  );
  oan21v0x05 _183_ (
    .a1(cnt[3]),
    .a2(_065_),
    .b(_066_),
    .z(_021_)
  );
  xaoi21v0x05 _184_ (
    .a1(cnt[3]),
    .a2(_065_),
    .b(cnt[4]),
    .z(_067_)
  );
  nr2v0x05 _185_ (
    .a(_061_),
    .b(_067_),
    .z(_022_)
  );
  nr2v0x05 _186_ (
    .a(bit_cnt[7]),
    .b(bit_cnt[6]),
    .z(_068_)
  );
  nd2av0x05 _187_ (
    .a(bit_cnt[0]),
    .b(bit_cnt[1]),
    .z(_069_)
  );
  nr4v1x05 _188_ (
    .a(bit_cnt[3]),
    .b(bit_cnt[2]),
    .c(_089_),
    .d(_069_),
    .z(_070_)
  );
  an4v0x05 _189_ (
    .a(rstn),
    .b(_079_),
    .c(_068_),
    .d(_070_),
    .z(_023_)
  );
  oan21bv0x05 _190_ (
    .a1(start_en),
    .a2(flag),
    .b(_061_),
    .z(_024_)
  );
  nr2v0x05 _191_ (
    .a(bit_cnt[0]),
    .b(_084_),
    .z(_025_)
  );
  xnr2v0x05 _192_ (
    .a(bit_cnt[1]),
    .b(bit_cnt[0]),
    .z(_071_)
  );
  nr2v0x05 _193_ (
    .a(_084_),
    .b(_071_),
    .z(_026_)
  );
  xaoi21v0x05 _194_ (
    .a1(bit_cnt[1]),
    .a2(bit_cnt[0]),
    .b(bit_cnt[2]),
    .z(_072_)
  );
  nr2v0x05 _195_ (
    .a(_084_),
    .b(_072_),
    .z(_027_)
  );
  aoi31v0x05 _196_ (
    .a1(bit_cnt[1]),
    .a2(bit_cnt[0]),
    .a3(bit_cnt[2]),
    .b(bit_cnt[3]),
    .z(_073_)
  );
  nr3v0x05 _197_ (
    .a(_084_),
    .b(_085_),
    .c(_073_),
    .z(_028_)
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _198_ (
    .cp(clk),
    .d(_000_),
    .z(bit_cnt[4])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _199_ (
    .cp(clk),
    .d(_001_),
    .z(bit_cnt[5])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _200_ (
    .cp(clk),
    .d(_002_),
    .z(bit_cnt[6])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _201_ (
    .cp(clk),
    .d(_003_),
    .z(bit_cnt[7])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _202_ (
    .cp(clk),
    .d(_004_),
    .z(bit_cnt[8])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _203_ (
    .cp(clk),
    .d(_005_),
    .z(bit_cnt[9])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _204_ (
    .cp(clk),
    .d(_006_),
    .z(bit_cnt[10])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _205_ (
    .cp(clk),
    .d(_007_),
    .z(bit_cnt[11])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _206_ (
    .cp(clk),
    .d(_008_),
    .z(bit_cnt[12])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _207_ (
    .cp(clk),
    .d(_009_),
    .z(bit_cnt[13])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _208_ (
    .cp(clk),
    .d(_010_),
    .z(bit_cnt[14])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _209_ (
    .cp(clk),
    .d(_011_),
    .z(bit_cnt[15])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _210_ (
    .cp(clk),
    .d(_012_),
    .z(bit_cnt[16])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _211_ (
    .cp(clk),
    .d(_013_),
    .z(bit_cnt[17])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _212_ (
    .cp(clk),
    .d(_014_),
    .z(bit_cnt[18])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _213_ (
    .cp(clk),
    .d(_015_),
    .z(bit_cnt[19])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _214_ (
    .cp(clk),
    .d(_016_),
    .z(bit_cnt[20])
  );
  (* src = "tx.v:62.1-80.4" *)
  dfnt1v0x2 _215_ (
    .cp(clk),
    .d(_017_),
    .z(tx)
  );
  (* src = "tx.v:51.1-60.4" *)
  dfnt1v0x2 _216_ (
    .cp(clk),
    .d(_018_),
    .z(cnt[0])
  );
  (* src = "tx.v:51.1-60.4" *)
  dfnt1v0x2 _217_ (
    .cp(clk),
    .d(_019_),
    .z(cnt[1])
  );
  (* src = "tx.v:51.1-60.4" *)
  dfnt1v0x2 _218_ (
    .cp(clk),
    .d(_020_),
    .z(cnt[2])
  );
  (* src = "tx.v:51.1-60.4" *)
  dfnt1v0x2 _219_ (
    .cp(clk),
    .d(_021_),
    .z(cnt[3])
  );
  (* src = "tx.v:51.1-60.4" *)
  dfnt1v0x2 _220_ (
    .cp(clk),
    .d(_022_),
    .z(cnt[4])
  );
  (* src = "tx.v:42.1-49.4" *)
  dfnt1v0x2 _221_ (
    .cp(clk),
    .d(_023_),
    .z(bit_flag)
  );
  (* src = "tx.v:19.1-28.4" *)
  dfnt1v0x2 _222_ (
    .cp(clk),
    .d(_024_),
    .z(start_en)
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _223_ (
    .cp(clk),
    .d(_025_),
    .z(bit_cnt[0])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _224_ (
    .cp(clk),
    .d(_026_),
    .z(bit_cnt[1])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _225_ (
    .cp(clk),
    .d(_027_),
    .z(bit_cnt[2])
  );
  (* src = "tx.v:30.1-40.4" *)
  dfnt1v0x2 _226_ (
    .cp(clk),
    .d(_028_),
    .z(bit_cnt[3])
  );
endmodule
