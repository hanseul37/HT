/* Generated by Yosys 0.32+74 (git sha1 b739213d9, x86_64-w64-mingw32-g++ 9.2.1 -Os) */

(* hdlname = "\\uart_rx" *)
(* src = "uart_rx.v:1.1-128.10" *)
module \$paramod\uart_rx\BAUD_FLAG_MAX=13'1010001010111\BIT_CNT_MAX=4'1001 (sys_clk, sys_rst_n, rx, po_data, po_data_flag);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  (* src = "uart_rx.v:17.16-17.26" *)
  wire [12:0] baud_count;
  (* src = "uart_rx.v:19.15-19.22" *)
  wire [3:0] bit_cnt;
  (* src = "uart_rx.v:18.9-18.17" *)
  wire bit_flag;
  (* src = "uart_rx.v:15.9-15.19" *)
  wire nedge_flag;
  (* src = "uart_rx.v:8.22-8.29" *)
  output [7:0] po_data;
  wire [7:0] po_data;
  (* src = "uart_rx.v:9.16-9.28" *)
  output po_data_flag;
  wire po_data_flag;
  (* src = "uart_rx.v:7.16-7.18" *)
  input rx;
  wire rx;
  (* src = "uart_rx.v:20.15-20.22" *)
  wire [7:0] rx_data;
  (* src = "uart_rx.v:21.9-21.21" *)
  wire rx_data_flag;
  (* src = "uart_rx.v:12.9-12.15" *)
  wire rx_reg;
  (* src = "uart_rx.v:13.9-13.16" *)
  wire rx_reg2;
  (* src = "uart_rx.v:14.9-14.16" *)
  wire rx_reg3;
  (* src = "uart_rx.v:5.16-5.23" *)
  input sys_clk;
  wire sys_clk;
  (* src = "uart_rx.v:6.16-6.25" *)
  input sys_rst_n;
  wire sys_rst_n;
  (* src = "uart_rx.v:16.9-16.16" *)
  wire work_en;
  iv1v0x05 _107_ (
    .a(baud_count[11]),
    .z(_098_)
  );
  iv1v0x05 _108_ (
    .a(baud_count[10]),
    .z(_099_)
  );
  iv1v0x05 _109_ (
    .a(baud_count[6]),
    .z(_100_)
  );
  an2v0x05 _110_ (
    .a(rx),
    .b(sys_rst_n),
    .z(_000_)
  );
  mxn2v0x05 _111_ (
    .a0(po_data[0]),
    .a1(rx_data[0]),
    .s(rx_data_flag),
    .z(_101_)
  );
  an2v0x05 _112_ (
    .a(sys_rst_n),
    .b(_101_),
    .z(_001_)
  );
  mxn2v0x05 _113_ (
    .a0(po_data[1]),
    .a1(rx_data[1]),
    .s(rx_data_flag),
    .z(_102_)
  );
  an2v0x05 _114_ (
    .a(sys_rst_n),
    .b(_102_),
    .z(_002_)
  );
  mxn2v0x05 _115_ (
    .a0(po_data[2]),
    .a1(rx_data[2]),
    .s(rx_data_flag),
    .z(_103_)
  );
  an2v0x05 _116_ (
    .a(sys_rst_n),
    .b(_103_),
    .z(_003_)
  );
  mxn2v0x05 _117_ (
    .a0(po_data[3]),
    .a1(rx_data[3]),
    .s(rx_data_flag),
    .z(_104_)
  );
  an2v0x05 _118_ (
    .a(sys_rst_n),
    .b(_104_),
    .z(_004_)
  );
  mxn2v0x05 _119_ (
    .a0(po_data[4]),
    .a1(rx_data[4]),
    .s(rx_data_flag),
    .z(_105_)
  );
  an2v0x05 _120_ (
    .a(sys_rst_n),
    .b(_105_),
    .z(_005_)
  );
  mxn2v0x05 _121_ (
    .a0(po_data[5]),
    .a1(rx_data[5]),
    .s(rx_data_flag),
    .z(_106_)
  );
  an2v0x05 _122_ (
    .a(sys_rst_n),
    .b(_106_),
    .z(_006_)
  );
  mxn2v0x05 _123_ (
    .a0(po_data[6]),
    .a1(rx_data[6]),
    .s(rx_data_flag),
    .z(_041_)
  );
  an2v0x05 _124_ (
    .a(sys_rst_n),
    .b(_041_),
    .z(_007_)
  );
  mxn2v0x05 _125_ (
    .a0(po_data[7]),
    .a1(rx_data[7]),
    .s(rx_data_flag),
    .z(_042_)
  );
  an2v0x05 _126_ (
    .a(sys_rst_n),
    .b(_042_),
    .z(_008_)
  );
  an2v0x05 _127_ (
    .a(rx_data_flag),
    .b(sys_rst_n),
    .z(_009_)
  );
  nr2v0x05 _128_ (
    .a(bit_cnt[2]),
    .b(bit_cnt[1]),
    .z(_043_)
  );
  nr3v0x05 _129_ (
    .a(bit_cnt[2]),
    .b(bit_cnt[1]),
    .c(bit_cnt[0]),
    .z(_044_)
  );
  xnai21v2x05 _130_ (
    .a1(bit_cnt[3]),
    .a2(_044_),
    .b(bit_flag),
    .z(_045_)
  );
  mxn2v0x05 _131_ (
    .a0(rx_data[1]),
    .a1(rx_data[0]),
    .s(_045_),
    .z(_046_)
  );
  an2v0x05 _132_ (
    .a(sys_rst_n),
    .b(_046_),
    .z(_010_)
  );
  mxn2v0x05 _133_ (
    .a0(rx_data[2]),
    .a1(rx_data[1]),
    .s(_045_),
    .z(_047_)
  );
  an2v0x05 _134_ (
    .a(sys_rst_n),
    .b(_047_),
    .z(_011_)
  );
  mxn2v0x05 _135_ (
    .a0(rx_data[3]),
    .a1(rx_data[2]),
    .s(_045_),
    .z(_048_)
  );
  an2v0x05 _136_ (
    .a(sys_rst_n),
    .b(_048_),
    .z(_012_)
  );
  mxn2v0x05 _137_ (
    .a0(rx_data[4]),
    .a1(rx_data[3]),
    .s(_045_),
    .z(_049_)
  );
  an2v0x05 _138_ (
    .a(sys_rst_n),
    .b(_049_),
    .z(_013_)
  );
  mxn2v0x05 _139_ (
    .a0(rx_data[5]),
    .a1(rx_data[4]),
    .s(_045_),
    .z(_050_)
  );
  an2v0x05 _140_ (
    .a(sys_rst_n),
    .b(_050_),
    .z(_014_)
  );
  mxn2v0x05 _141_ (
    .a0(rx_data[6]),
    .a1(rx_data[5]),
    .s(_045_),
    .z(_051_)
  );
  an2v0x05 _142_ (
    .a(sys_rst_n),
    .b(_051_),
    .z(_015_)
  );
  mxn2v0x05 _143_ (
    .a0(rx_data[7]),
    .a1(rx_data[6]),
    .s(_045_),
    .z(_052_)
  );
  an2v0x05 _144_ (
    .a(sys_rst_n),
    .b(_052_),
    .z(_016_)
  );
  mxn2v0x05 _145_ (
    .a0(rx),
    .a1(rx_data[7]),
    .s(_045_),
    .z(_053_)
  );
  an2v0x05 _146_ (
    .a(sys_rst_n),
    .b(_053_),
    .z(_017_)
  );
  an2v0x05 _147_ (
    .a(bit_flag),
    .b(bit_cnt[0]),
    .z(_054_)
  );
  nd3v0x05 _148_ (
    .a(bit_cnt[3]),
    .b(_043_),
    .c(_054_),
    .z(_055_)
  );
  nd2v0x05 _149_ (
    .a(sys_rst_n),
    .b(_055_),
    .z(_056_)
  );
  nr2v0x05 _150_ (
    .a(bit_flag),
    .b(bit_cnt[0]),
    .z(_057_)
  );
  nr3v0x05 _151_ (
    .a(_054_),
    .b(_056_),
    .c(_057_),
    .z(_018_)
  );
  xnr2v0x05 _152_ (
    .a(bit_cnt[1]),
    .b(_054_),
    .z(_058_)
  );
  nr2v0x05 _153_ (
    .a(_056_),
    .b(_058_),
    .z(_019_)
  );
  aoi21v0x05 _154_ (
    .a1(bit_cnt[1]),
    .a2(_054_),
    .b(bit_cnt[2]),
    .z(_059_)
  );
  nd3v0x05 _155_ (
    .a(bit_cnt[2]),
    .b(bit_cnt[1]),
    .c(_054_),
    .z(_060_)
  );
  nr3av0x05 _156_ (
    .a(_060_),
    .b(_056_),
    .c(_059_),
    .z(_020_)
  );
  xor2v0x05 _157_ (
    .a(bit_cnt[3]),
    .b(_060_),
    .z(_061_)
  );
  nr2v0x05 _158_ (
    .a(_056_),
    .b(_061_),
    .z(_021_)
  );
  nr2av0x1 _159_ (
    .a(sys_rst_n),
    .b(_055_),
    .z(_022_)
  );
  nr2v0x05 _160_ (
    .a(baud_count[8]),
    .b(baud_count[7]),
    .z(_062_)
  );
  nd3v0x05 _161_ (
    .a(baud_count[2]),
    .b(baud_count[1]),
    .c(baud_count[0]),
    .z(_063_)
  );
  nd3abv0x05 _162_ (
    .a(baud_count[9]),
    .b(baud_count[5]),
    .c(baud_count[6]),
    .z(_064_)
  );
  nr3v0x05 _163_ (
    .a(baud_count[3]),
    .b(_063_),
    .c(_064_),
    .z(_065_)
  );
  nr3abv0x05 _164_ (
    .a(baud_count[10]),
    .b(_062_),
    .c(baud_count[11]),
    .z(_066_)
  );
  nd4v0x05 _165_ (
    .a(baud_count[12]),
    .b(baud_count[4]),
    .c(_065_),
    .d(_066_),
    .z(_067_)
  );
  nd3v0x05 _166_ (
    .a(work_en),
    .b(sys_rst_n),
    .c(_067_),
    .z(_068_)
  );
  nr2v0x05 _167_ (
    .a(baud_count[0]),
    .b(_068_),
    .z(_023_)
  );
  aoi21v0x05 _168_ (
    .a1(work_en),
    .a2(baud_count[0]),
    .b(baud_count[1]),
    .z(_069_)
  );
  nd3v0x05 _169_ (
    .a(work_en),
    .b(baud_count[1]),
    .c(baud_count[0]),
    .z(_070_)
  );
  nr3av0x05 _170_ (
    .a(_070_),
    .b(_068_),
    .c(_069_),
    .z(_024_)
  );
  xor2v0x05 _171_ (
    .a(baud_count[2]),
    .b(_070_),
    .z(_071_)
  );
  nr2v0x05 _172_ (
    .a(_068_),
    .b(_071_),
    .z(_025_)
  );
  an4v0x05 _173_ (
    .a(work_en),
    .b(baud_count[2]),
    .c(baud_count[1]),
    .d(baud_count[0]),
    .z(_072_)
  );
  nr2v0x05 _174_ (
    .a(baud_count[3]),
    .b(_072_),
    .z(_073_)
  );
  an2v0x05 _175_ (
    .a(baud_count[3]),
    .b(_072_),
    .z(_074_)
  );
  nr3v0x05 _176_ (
    .a(_068_),
    .b(_073_),
    .c(_074_),
    .z(_026_)
  );
  nd2v0x05 _177_ (
    .a(baud_count[4]),
    .b(_074_),
    .z(_075_)
  );
  nr2v0x05 _178_ (
    .a(baud_count[4]),
    .b(_074_),
    .z(_076_)
  );
  nr3av0x05 _179_ (
    .a(_075_),
    .b(_076_),
    .c(_068_),
    .z(_027_)
  );
  xor2v0x05 _180_ (
    .a(baud_count[5]),
    .b(_075_),
    .z(_077_)
  );
  nr2v0x05 _181_ (
    .a(_068_),
    .b(_077_),
    .z(_028_)
  );
  an2v0x05 _182_ (
    .a(baud_count[5]),
    .b(baud_count[4]),
    .z(_078_)
  );
  an4v0x05 _183_ (
    .a(baud_count[6]),
    .b(baud_count[3]),
    .c(_072_),
    .d(_078_),
    .z(_079_)
  );
  aoi21v0x05 _184_ (
    .a1(_074_),
    .a2(_078_),
    .b(baud_count[6]),
    .z(_080_)
  );
  nr3v0x05 _185_ (
    .a(_068_),
    .b(_079_),
    .c(_080_),
    .z(_029_)
  );
  an2v0x05 _186_ (
    .a(baud_count[7]),
    .b(_079_),
    .z(_081_)
  );
  nr2v0x05 _187_ (
    .a(baud_count[7]),
    .b(_079_),
    .z(_082_)
  );
  nr3v0x05 _188_ (
    .a(_068_),
    .b(_081_),
    .c(_082_),
    .z(_030_)
  );
  an2v0x05 _189_ (
    .a(baud_count[8]),
    .b(_081_),
    .z(_083_)
  );
  nr2v0x05 _190_ (
    .a(baud_count[8]),
    .b(_081_),
    .z(_084_)
  );
  nr3v0x05 _191_ (
    .a(_068_),
    .b(_083_),
    .c(_084_),
    .z(_031_)
  );
  nd4v0x05 _192_ (
    .a(baud_count[9]),
    .b(baud_count[8]),
    .c(baud_count[7]),
    .d(_079_),
    .z(_085_)
  );
  aoi21v0x05 _193_ (
    .a1(baud_count[8]),
    .a2(_081_),
    .b(baud_count[9]),
    .z(_086_)
  );
  nr3av0x05 _194_ (
    .a(_085_),
    .b(_086_),
    .c(_068_),
    .z(_032_)
  );
  xnr2v0x05 _195_ (
    .a(_099_),
    .b(_085_),
    .z(_087_)
  );
  nr2v0x05 _196_ (
    .a(_068_),
    .b(_087_),
    .z(_033_)
  );
  nr3v0x05 _197_ (
    .a(_098_),
    .b(_099_),
    .c(_085_),
    .z(_088_)
  );
  aoi21a2v0x05 _198_ (
    .a1(baud_count[10]),
    .a2(_085_),
    .b(baud_count[11]),
    .z(_089_)
  );
  nr3v0x05 _199_ (
    .a(_068_),
    .b(_088_),
    .c(_089_),
    .z(_034_)
  );
  oai31v0x05 _200_ (
    .a1(_098_),
    .a2(_099_),
    .a3(_085_),
    .b(baud_count[12]),
    .z(_090_)
  );
  nr4v1x05 _201_ (
    .a(baud_count[12]),
    .b(_098_),
    .c(_099_),
    .d(_085_),
    .z(_091_)
  );
  aoi21a2v0x05 _202_ (
    .a1(_090_),
    .a2(_091_),
    .b(_068_),
    .z(_035_)
  );
  aoi21v0x05 _203_ (
    .a1(work_en),
    .a2(_055_),
    .b(nedge_flag),
    .z(_092_)
  );
  nr2av0x1 _204_ (
    .a(sys_rst_n),
    .b(_092_),
    .z(_036_)
  );
  nd3v0x05 _205_ (
    .a(baud_count[11]),
    .b(baud_count[1]),
    .c(baud_count[0]),
    .z(_093_)
  );
  nd3abv0x05 _206_ (
    .a(_093_),
    .b(baud_count[12]),
    .c(_062_),
    .z(_094_)
  );
  nd2av0x05 _207_ (
    .a(baud_count[4]),
    .b(baud_count[3]),
    .z(_095_)
  );
  nd3abv0x05 _208_ (
    .a(_095_),
    .b(baud_count[2]),
    .c(sys_rst_n),
    .z(_096_)
  );
  nd4v0x05 _209_ (
    .a(_099_),
    .b(baud_count[9]),
    .c(_100_),
    .d(baud_count[5]),
    .z(_097_)
  );
  nr3v0x05 _210_ (
    .a(_094_),
    .b(_096_),
    .c(_097_),
    .z(_037_)
  );
  nr3abv0x05 _211_ (
    .a(sys_rst_n),
    .b(rx_reg3),
    .c(rx_reg2),
    .z(_038_)
  );
  an2v0x05 _212_ (
    .a(sys_rst_n),
    .b(rx_reg2),
    .z(_039_)
  );
  an2v0x05 _213_ (
    .a(sys_rst_n),
    .b(rx_reg),
    .z(_040_)
  );
  (* src = "uart_rx.v:23.5-28.8" *)
  dfnt1v0x2 _214_ (
    .cp(sys_clk),
    .d(_000_),
    .z(rx_reg)
  );
  (* src = "uart_rx.v:114.5-119.8" *)
  dfnt1v0x2 _215_ (
    .cp(sys_clk),
    .d(_001_),
    .z(po_data[0])
  );
  (* src = "uart_rx.v:114.5-119.8" *)
  dfnt1v0x2 _216_ (
    .cp(sys_clk),
    .d(_002_),
    .z(po_data[1])
  );
  (* src = "uart_rx.v:114.5-119.8" *)
  dfnt1v0x2 _217_ (
    .cp(sys_clk),
    .d(_003_),
    .z(po_data[2])
  );
  (* src = "uart_rx.v:114.5-119.8" *)
  dfnt1v0x2 _218_ (
    .cp(sys_clk),
    .d(_004_),
    .z(po_data[3])
  );
  (* src = "uart_rx.v:114.5-119.8" *)
  dfnt1v0x2 _219_ (
    .cp(sys_clk),
    .d(_005_),
    .z(po_data[4])
  );
  (* src = "uart_rx.v:114.5-119.8" *)
  dfnt1v0x2 _220_ (
    .cp(sys_clk),
    .d(_006_),
    .z(po_data[5])
  );
  (* src = "uart_rx.v:114.5-119.8" *)
  dfnt1v0x2 _221_ (
    .cp(sys_clk),
    .d(_007_),
    .z(po_data[6])
  );
  (* src = "uart_rx.v:114.5-119.8" *)
  dfnt1v0x2 _222_ (
    .cp(sys_clk),
    .d(_008_),
    .z(po_data[7])
  );
  (* src = "uart_rx.v:122.5-127.8" *)
  dfnt1v0x2 _223_ (
    .cp(sys_clk),
    .d(_009_),
    .z(po_data_flag)
  );
  (* src = "uart_rx.v:96.5-101.8" *)
  dfnt1v0x2 _224_ (
    .cp(sys_clk),
    .d(_010_),
    .z(rx_data[0])
  );
  (* src = "uart_rx.v:96.5-101.8" *)
  dfnt1v0x2 _225_ (
    .cp(sys_clk),
    .d(_011_),
    .z(rx_data[1])
  );
  (* src = "uart_rx.v:96.5-101.8" *)
  dfnt1v0x2 _226_ (
    .cp(sys_clk),
    .d(_012_),
    .z(rx_data[2])
  );
  (* src = "uart_rx.v:96.5-101.8" *)
  dfnt1v0x2 _227_ (
    .cp(sys_clk),
    .d(_013_),
    .z(rx_data[3])
  );
  (* src = "uart_rx.v:96.5-101.8" *)
  dfnt1v0x2 _228_ (
    .cp(sys_clk),
    .d(_014_),
    .z(rx_data[4])
  );
  (* src = "uart_rx.v:96.5-101.8" *)
  dfnt1v0x2 _229_ (
    .cp(sys_clk),
    .d(_015_),
    .z(rx_data[5])
  );
  (* src = "uart_rx.v:96.5-101.8" *)
  dfnt1v0x2 _230_ (
    .cp(sys_clk),
    .d(_016_),
    .z(rx_data[6])
  );
  (* src = "uart_rx.v:96.5-101.8" *)
  dfnt1v0x2 _231_ (
    .cp(sys_clk),
    .d(_017_),
    .z(rx_data[7])
  );
  (* src = "uart_rx.v:86.5-93.8" *)
  dfnt1v0x2 _232_ (
    .cp(sys_clk),
    .d(_018_),
    .z(bit_cnt[0])
  );
  (* src = "uart_rx.v:86.5-93.8" *)
  dfnt1v0x2 _233_ (
    .cp(sys_clk),
    .d(_019_),
    .z(bit_cnt[1])
  );
  (* src = "uart_rx.v:86.5-93.8" *)
  dfnt1v0x2 _234_ (
    .cp(sys_clk),
    .d(_020_),
    .z(bit_cnt[2])
  );
  (* src = "uart_rx.v:86.5-93.8" *)
  dfnt1v0x2 _235_ (
    .cp(sys_clk),
    .d(_021_),
    .z(bit_cnt[3])
  );
  (* src = "uart_rx.v:104.5-111.8" *)
  dfnt1v0x2 _236_ (
    .cp(sys_clk),
    .d(_022_),
    .z(rx_data_flag)
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _237_ (
    .cp(sys_clk),
    .d(_023_),
    .z(baud_count[0])
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _238_ (
    .cp(sys_clk),
    .d(_024_),
    .z(baud_count[1])
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _239_ (
    .cp(sys_clk),
    .d(_025_),
    .z(baud_count[2])
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _240_ (
    .cp(sys_clk),
    .d(_026_),
    .z(baud_count[3])
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _241_ (
    .cp(sys_clk),
    .d(_027_),
    .z(baud_count[4])
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _242_ (
    .cp(sys_clk),
    .d(_028_),
    .z(baud_count[5])
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _243_ (
    .cp(sys_clk),
    .d(_029_),
    .z(baud_count[6])
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _244_ (
    .cp(sys_clk),
    .d(_030_),
    .z(baud_count[7])
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _245_ (
    .cp(sys_clk),
    .d(_031_),
    .z(baud_count[8])
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _246_ (
    .cp(sys_clk),
    .d(_032_),
    .z(baud_count[9])
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _247_ (
    .cp(sys_clk),
    .d(_033_),
    .z(baud_count[10])
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _248_ (
    .cp(sys_clk),
    .d(_034_),
    .z(baud_count[11])
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _249_ (
    .cp(sys_clk),
    .d(_035_),
    .z(baud_count[12])
  );
  (* src = "uart_rx.v:56.5-63.8" *)
  dfnt1v0x2 _250_ (
    .cp(sys_clk),
    .d(_036_),
    .z(work_en)
  );
  (* src = "uart_rx.v:76.5-83.8" *)
  dfnt1v0x2 _251_ (
    .cp(sys_clk),
    .d(_037_),
    .z(bit_flag)
  );
  (* src = "uart_rx.v:46.5-53.8" *)
  dfnt1v0x2 _252_ (
    .cp(sys_clk),
    .d(_038_),
    .z(nedge_flag)
  );
  (* src = "uart_rx.v:38.5-43.8" *)
  dfnt1v0x2 _253_ (
    .cp(sys_clk),
    .d(_039_),
    .z(rx_reg3)
  );
  (* src = "uart_rx.v:31.5-36.8" *)
  dfnt1v0x2 _254_ (
    .cp(sys_clk),
    .d(_040_),
    .z(rx_reg2)
  );
endmodule

(* hdlname = "\\uart_tx" *)
(* src = "uart_tx.v:1.1-75.10" *)
module \$paramod\uart_tx\BAUD_CNT_MAX=13'1010001010111 (sys_clk, sys_rst_n, pi_data, pi_data_flag, tx);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  (* src = "uart_tx.v:12.16-12.24" *)
  wire [12:0] baud_cnt;
  (* src = "uart_tx.v:14.15-14.22" *)
  wire [3:0] bit_cnt;
  (* src = "uart_tx.v:13.9-13.17" *)
  wire bit_flag;
  (* src = "uart_tx.v:6.22-6.29" *)
  input [7:0] pi_data;
  wire [7:0] pi_data;
  (* src = "uart_tx.v:7.16-7.28" *)
  input pi_data_flag;
  wire pi_data_flag;
  (* src = "uart_tx.v:4.16-4.23" *)
  input sys_clk;
  wire sys_clk;
  (* src = "uart_tx.v:5.16-5.25" *)
  input sys_rst_n;
  wire sys_rst_n;
  (* src = "uart_tx.v:8.16-8.18" *)
  output tx;
  wire tx;
  (* src = "uart_tx.v:11.9-11.16" *)
  wire work_en;
  iv1v0x05 _077_ (
    .a(baud_cnt[11]),
    .z(_037_)
  );
  iv1v0x05 _078_ (
    .a(baud_cnt[10]),
    .z(_038_)
  );
  iv1v0x05 _079_ (
    .a(tx),
    .z(_039_)
  );
  or4v0x05 _080_ (
    .a(baud_cnt[12]),
    .b(baud_cnt[11]),
    .c(baud_cnt[10]),
    .d(baud_cnt[7]),
    .z(_040_)
  );
  nr2v0x05 _081_ (
    .a(baud_cnt[2]),
    .b(baud_cnt[1]),
    .z(_041_)
  );
  nr4v1x05 _082_ (
    .a(baud_cnt[6]),
    .b(baud_cnt[5]),
    .c(baud_cnt[4]),
    .d(baud_cnt[3]),
    .z(_042_)
  );
  nd4v0x05 _083_ (
    .a(baud_cnt[0]),
    .b(sys_rst_n),
    .c(_041_),
    .d(_042_),
    .z(_043_)
  );
  nr4v1x05 _084_ (
    .a(baud_cnt[9]),
    .b(baud_cnt[8]),
    .c(_040_),
    .d(_043_),
    .z(_000_)
  );
  an2v0x05 _085_ (
    .a(bit_cnt[1]),
    .b(bit_cnt[0]),
    .z(_044_)
  );
  nr3av0x05 _086_ (
    .a(pi_data[3]),
    .b(bit_cnt[0]),
    .c(bit_cnt[1]),
    .z(_045_)
  );
  nr3abv0x05 _087_ (
    .a(bit_cnt[0]),
    .b(pi_data[4]),
    .c(bit_cnt[1]),
    .z(_046_)
  );
  nr3abv0x05 _088_ (
    .a(bit_cnt[1]),
    .b(pi_data[5]),
    .c(bit_cnt[0]),
    .z(_047_)
  );
  nr2v0x05 _089_ (
    .a(bit_cnt[3]),
    .b(_046_),
    .z(_048_)
  );
  aoi112v0x05 _090_ (
    .a(_045_),
    .b(_047_),
    .c1(pi_data[6]),
    .c2(_044_),
    .z(_049_)
  );
  nd3v0x05 _091_ (
    .a(bit_cnt[2]),
    .b(_048_),
    .c(_049_),
    .z(_050_)
  );
  oai31v0x05 _092_ (
    .a1(bit_cnt[1]),
    .a2(bit_cnt[0]),
    .a3(pi_data[7]),
    .b(bit_cnt[3]),
    .z(_051_)
  );
  nd3av0x05 _093_ (
    .a(bit_cnt[1]),
    .b(bit_cnt[0]),
    .c(pi_data[0]),
    .z(_052_)
  );
  nr3abv0x05 _094_ (
    .a(bit_cnt[1]),
    .b(pi_data[1]),
    .c(bit_cnt[0]),
    .z(_053_)
  );
  aoi21v0x05 _095_ (
    .a1(pi_data[2]),
    .a2(_044_),
    .b(_053_),
    .z(_054_)
  );
  nd3v0x05 _096_ (
    .a(_051_),
    .b(_052_),
    .c(_054_),
    .z(_055_)
  );
  oai211v0x05 _097_ (
    .a1(bit_cnt[2]),
    .a2(_055_),
    .b(_050_),
    .c(bit_flag),
    .z(_056_)
  );
  oai211v0x05 _098_ (
    .a1(bit_flag),
    .a2(_039_),
    .b(sys_rst_n),
    .c(_056_),
    .z(_001_)
  );
  nr3av0x05 _099_ (
    .a(bit_cnt[0]),
    .b(bit_cnt[1]),
    .c(bit_cnt[2]),
    .z(_057_)
  );
  nd3v0x05 _100_ (
    .a(bit_cnt[3]),
    .b(bit_flag),
    .c(_057_),
    .z(_058_)
  );
  nd2v0x05 _101_ (
    .a(sys_rst_n),
    .b(_058_),
    .z(_059_)
  );
  xnr2v0x05 _102_ (
    .a(bit_flag),
    .b(bit_cnt[0]),
    .z(_060_)
  );
  nr2v0x05 _103_ (
    .a(_059_),
    .b(_060_),
    .z(_002_)
  );
  xaoi21v0x05 _104_ (
    .a1(bit_flag),
    .a2(bit_cnt[0]),
    .b(bit_cnt[1]),
    .z(_061_)
  );
  nr2v0x05 _105_ (
    .a(_059_),
    .b(_061_),
    .z(_003_)
  );
  aoi21v0x05 _106_ (
    .a1(bit_flag),
    .a2(_044_),
    .b(bit_cnt[2]),
    .z(_062_)
  );
  nd3v0x05 _107_ (
    .a(bit_flag),
    .b(bit_cnt[2]),
    .c(_044_),
    .z(_063_)
  );
  nr3av0x05 _108_ (
    .a(_063_),
    .b(_059_),
    .c(_062_),
    .z(_004_)
  );
  xor2v0x05 _109_ (
    .a(bit_cnt[3]),
    .b(_063_),
    .z(_064_)
  );
  nr2v0x05 _110_ (
    .a(_059_),
    .b(_064_),
    .z(_005_)
  );
  nd3v0x05 _111_ (
    .a(baud_cnt[2]),
    .b(baud_cnt[1]),
    .c(baud_cnt[0]),
    .z(_065_)
  );
  nr3abv0x05 _112_ (
    .a(baud_cnt[12]),
    .b(baud_cnt[6]),
    .c(baud_cnt[5]),
    .z(_066_)
  );
  nd3abv0x05 _113_ (
    .a(baud_cnt[3]),
    .b(_065_),
    .c(_066_),
    .z(_067_)
  );
  nr4v1x05 _114_ (
    .a(baud_cnt[11]),
    .b(baud_cnt[9]),
    .c(baud_cnt[8]),
    .d(baud_cnt[7]),
    .z(_068_)
  );
  nd3v0x05 _115_ (
    .a(baud_cnt[10]),
    .b(baud_cnt[4]),
    .c(_068_),
    .z(_069_)
  );
  oai211v0x05 _116_ (
    .a1(_067_),
    .a2(_069_),
    .b(work_en),
    .c(sys_rst_n),
    .z(_070_)
  );
  nr2v0x05 _117_ (
    .a(baud_cnt[0]),
    .b(_070_),
    .z(_006_)
  );
  aoi21v0x05 _118_ (
    .a1(work_en),
    .a2(baud_cnt[0]),
    .b(baud_cnt[1]),
    .z(_071_)
  );
  nd3v0x05 _119_ (
    .a(work_en),
    .b(baud_cnt[1]),
    .c(baud_cnt[0]),
    .z(_072_)
  );
  nr3av0x05 _120_ (
    .a(_072_),
    .b(_070_),
    .c(_071_),
    .z(_007_)
  );
  xor2v0x05 _121_ (
    .a(baud_cnt[2]),
    .b(_072_),
    .z(_073_)
  );
  nr2v0x05 _122_ (
    .a(_070_),
    .b(_073_),
    .z(_008_)
  );
  an4v0x05 _123_ (
    .a(work_en),
    .b(baud_cnt[2]),
    .c(baud_cnt[1]),
    .d(baud_cnt[0]),
    .z(_074_)
  );
  nr2v0x05 _124_ (
    .a(baud_cnt[3]),
    .b(_074_),
    .z(_075_)
  );
  an2v0x05 _125_ (
    .a(baud_cnt[3]),
    .b(_074_),
    .z(_076_)
  );
  nr3v0x05 _126_ (
    .a(_070_),
    .b(_075_),
    .c(_076_),
    .z(_009_)
  );
  nd2v0x05 _127_ (
    .a(baud_cnt[4]),
    .b(_076_),
    .z(_020_)
  );
  nr2v0x05 _128_ (
    .a(baud_cnt[4]),
    .b(_076_),
    .z(_021_)
  );
  nr3av0x05 _129_ (
    .a(_020_),
    .b(_021_),
    .c(_070_),
    .z(_010_)
  );
  xor2v0x05 _130_ (
    .a(baud_cnt[5]),
    .b(_020_),
    .z(_022_)
  );
  nr2v0x05 _131_ (
    .a(_070_),
    .b(_022_),
    .z(_011_)
  );
  an2v0x05 _132_ (
    .a(baud_cnt[5]),
    .b(baud_cnt[4]),
    .z(_023_)
  );
  an4v0x05 _133_ (
    .a(baud_cnt[6]),
    .b(baud_cnt[3]),
    .c(_074_),
    .d(_023_),
    .z(_024_)
  );
  aoi21v0x05 _134_ (
    .a1(_076_),
    .a2(_023_),
    .b(baud_cnt[6]),
    .z(_025_)
  );
  nr3v0x05 _135_ (
    .a(_070_),
    .b(_024_),
    .c(_025_),
    .z(_012_)
  );
  an2v0x05 _136_ (
    .a(baud_cnt[7]),
    .b(_024_),
    .z(_026_)
  );
  nr2v0x05 _137_ (
    .a(baud_cnt[7]),
    .b(_024_),
    .z(_027_)
  );
  nr3v0x05 _138_ (
    .a(_070_),
    .b(_026_),
    .c(_027_),
    .z(_013_)
  );
  aoi21v0x05 _139_ (
    .a1(baud_cnt[8]),
    .a2(_026_),
    .b(_070_),
    .z(_028_)
  );
  oan21v0x05 _140_ (
    .a1(baud_cnt[8]),
    .a2(_026_),
    .b(_028_),
    .z(_014_)
  );
  nd4v0x05 _141_ (
    .a(baud_cnt[9]),
    .b(baud_cnt[8]),
    .c(baud_cnt[7]),
    .d(_024_),
    .z(_029_)
  );
  aoi21v0x05 _142_ (
    .a1(baud_cnt[8]),
    .a2(_026_),
    .b(baud_cnt[9]),
    .z(_030_)
  );
  nr3av0x05 _143_ (
    .a(_029_),
    .b(_030_),
    .c(_070_),
    .z(_015_)
  );
  xnr2v0x05 _144_ (
    .a(_038_),
    .b(_029_),
    .z(_031_)
  );
  nr2v0x05 _145_ (
    .a(_070_),
    .b(_031_),
    .z(_016_)
  );
  nr3v0x05 _146_ (
    .a(_037_),
    .b(_038_),
    .c(_029_),
    .z(_032_)
  );
  aoi21a2v0x05 _147_ (
    .a1(baud_cnt[10]),
    .a2(_029_),
    .b(baud_cnt[11]),
    .z(_033_)
  );
  nr3v0x05 _148_ (
    .a(_070_),
    .b(_032_),
    .c(_033_),
    .z(_017_)
  );
  oai31v0x05 _149_ (
    .a1(_037_),
    .a2(_038_),
    .a3(_029_),
    .b(baud_cnt[12]),
    .z(_034_)
  );
  nr4v1x05 _150_ (
    .a(baud_cnt[12]),
    .b(_037_),
    .c(_038_),
    .d(_029_),
    .z(_035_)
  );
  aoi21a2v0x05 _151_ (
    .a1(_034_),
    .a2(_035_),
    .b(_070_),
    .z(_018_)
  );
  aoi21v0x05 _152_ (
    .a1(work_en),
    .a2(_058_),
    .b(pi_data_flag),
    .z(_036_)
  );
  nr2av0x1 _153_ (
    .a(sys_rst_n),
    .b(_036_),
    .z(_019_)
  );
  (* src = "uart_tx.v:37.5-44.8" *)
  dfnt1v0x2 _154_ (
    .cp(sys_clk),
    .d(_000_),
    .z(bit_flag)
  );
  (* src = "uart_tx.v:57.5-74.8" *)
  dfnt1v0x2 _155_ (
    .cp(sys_clk),
    .d(_001_),
    .z(tx)
  );
  (* src = "uart_tx.v:47.5-54.8" *)
  dfnt1v0x2 _156_ (
    .cp(sys_clk),
    .d(_002_),
    .z(bit_cnt[0])
  );
  (* src = "uart_tx.v:47.5-54.8" *)
  dfnt1v0x2 _157_ (
    .cp(sys_clk),
    .d(_003_),
    .z(bit_cnt[1])
  );
  (* src = "uart_tx.v:47.5-54.8" *)
  dfnt1v0x2 _158_ (
    .cp(sys_clk),
    .d(_004_),
    .z(bit_cnt[2])
  );
  (* src = "uart_tx.v:47.5-54.8" *)
  dfnt1v0x2 _159_ (
    .cp(sys_clk),
    .d(_005_),
    .z(bit_cnt[3])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _160_ (
    .cp(sys_clk),
    .d(_006_),
    .z(baud_cnt[0])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _161_ (
    .cp(sys_clk),
    .d(_007_),
    .z(baud_cnt[1])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _162_ (
    .cp(sys_clk),
    .d(_008_),
    .z(baud_cnt[2])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _163_ (
    .cp(sys_clk),
    .d(_009_),
    .z(baud_cnt[3])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _164_ (
    .cp(sys_clk),
    .d(_010_),
    .z(baud_cnt[4])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _165_ (
    .cp(sys_clk),
    .d(_011_),
    .z(baud_cnt[5])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _166_ (
    .cp(sys_clk),
    .d(_012_),
    .z(baud_cnt[6])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _167_ (
    .cp(sys_clk),
    .d(_013_),
    .z(baud_cnt[7])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _168_ (
    .cp(sys_clk),
    .d(_014_),
    .z(baud_cnt[8])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _169_ (
    .cp(sys_clk),
    .d(_015_),
    .z(baud_cnt[9])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _170_ (
    .cp(sys_clk),
    .d(_016_),
    .z(baud_cnt[10])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _171_ (
    .cp(sys_clk),
    .d(_017_),
    .z(baud_cnt[11])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _172_ (
    .cp(sys_clk),
    .d(_018_),
    .z(baud_cnt[12])
  );
  (* src = "uart_tx.v:17.5-24.8" *)
  dfnt1v0x2 _173_ (
    .cp(sys_clk),
    .d(_019_),
    .z(work_en)
  );
endmodule

(* src = "rs232.v:1.1-35.10" *)
module rs232(sys_clk, sys_rst_n, rx, tx);
  (* src = "rs232.v:11.16-11.22" *)
  wire [7:0] p_data;
  (* src = "rs232.v:12.10-12.21" *)
  wire p_data_flag;
  (* src = "rs232.v:4.16-4.18" *)
  input rx;
  wire rx;
  (* src = "rs232.v:2.16-2.23" *)
  input sys_clk;
  wire sys_clk;
  (* src = "rs232.v:3.16-3.25" *)
  input sys_rst_n;
  wire sys_rst_n;
  (* src = "rs232.v:5.17-5.19" *)
  output tx;
  wire tx;
  (* src = "rs232.v:17.7-23.6" *)
  \$paramod\uart_rx\BAUD_FLAG_MAX=13'1010001010111\BIT_CNT_MAX=4'1001  uart_rx_inst (
    .po_data(p_data),
    .po_data_flag(p_data_flag),
    .rx(rx),
    .sys_clk(sys_clk),
    .sys_rst_n(sys_rst_n)
  );
  (* src = "rs232.v:27.7-33.6" *)
  \$paramod\uart_tx\BAUD_CNT_MAX=13'1010001010111  uart_tx_inst (
    .pi_data(p_data),
    .pi_data_flag(p_data_flag),
    .sys_clk(sys_clk),
    .sys_rst_n(sys_rst_n),
    .tx(tx)
  );
endmodule

(* src = "uart_rx.v:1.1-128.10" *)
module uart_rx(sys_clk, sys_rst_n, rx, po_data, po_data_flag);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  (* src = "uart_rx.v:17.16-17.26" *)
  wire [12:0] baud_count;
  (* src = "uart_rx.v:19.15-19.22" *)
  wire [3:0] bit_cnt;
  (* src = "uart_rx.v:18.9-18.17" *)
  wire bit_flag;
  (* src = "uart_rx.v:15.9-15.19" *)
  wire nedge_flag;
  (* src = "uart_rx.v:8.22-8.29" *)
  output [7:0] po_data;
  wire [7:0] po_data;
  (* src = "uart_rx.v:9.16-9.28" *)
  output po_data_flag;
  wire po_data_flag;
  (* src = "uart_rx.v:7.16-7.18" *)
  input rx;
  wire rx;
  (* src = "uart_rx.v:20.15-20.22" *)
  wire [7:0] rx_data;
  (* src = "uart_rx.v:21.9-21.21" *)
  wire rx_data_flag;
  (* src = "uart_rx.v:12.9-12.15" *)
  wire rx_reg;
  (* src = "uart_rx.v:13.9-13.16" *)
  wire rx_reg2;
  (* src = "uart_rx.v:14.9-14.16" *)
  wire rx_reg3;
  (* src = "uart_rx.v:5.16-5.23" *)
  input sys_clk;
  wire sys_clk;
  (* src = "uart_rx.v:6.16-6.25" *)
  input sys_rst_n;
  wire sys_rst_n;
  (* src = "uart_rx.v:16.9-16.16" *)
  wire work_en;
  iv1v0x05 _107_ (
    .a(baud_count[11]),
    .z(_098_)
  );
  iv1v0x05 _108_ (
    .a(baud_count[10]),
    .z(_099_)
  );
  iv1v0x05 _109_ (
    .a(baud_count[6]),
    .z(_100_)
  );
  an2v0x05 _110_ (
    .a(rx),
    .b(sys_rst_n),
    .z(_000_)
  );
  mxn2v0x05 _111_ (
    .a0(po_data[0]),
    .a1(rx_data[0]),
    .s(rx_data_flag),
    .z(_101_)
  );
  an2v0x05 _112_ (
    .a(sys_rst_n),
    .b(_101_),
    .z(_001_)
  );
  mxn2v0x05 _113_ (
    .a0(po_data[1]),
    .a1(rx_data[1]),
    .s(rx_data_flag),
    .z(_102_)
  );
  an2v0x05 _114_ (
    .a(sys_rst_n),
    .b(_102_),
    .z(_002_)
  );
  mxn2v0x05 _115_ (
    .a0(po_data[2]),
    .a1(rx_data[2]),
    .s(rx_data_flag),
    .z(_103_)
  );
  an2v0x05 _116_ (
    .a(sys_rst_n),
    .b(_103_),
    .z(_003_)
  );
  mxn2v0x05 _117_ (
    .a0(po_data[3]),
    .a1(rx_data[3]),
    .s(rx_data_flag),
    .z(_104_)
  );
  an2v0x05 _118_ (
    .a(sys_rst_n),
    .b(_104_),
    .z(_004_)
  );
  mxn2v0x05 _119_ (
    .a0(po_data[4]),
    .a1(rx_data[4]),
    .s(rx_data_flag),
    .z(_105_)
  );
  an2v0x05 _120_ (
    .a(sys_rst_n),
    .b(_105_),
    .z(_005_)
  );
  mxn2v0x05 _121_ (
    .a0(po_data[5]),
    .a1(rx_data[5]),
    .s(rx_data_flag),
    .z(_106_)
  );
  an2v0x05 _122_ (
    .a(sys_rst_n),
    .b(_106_),
    .z(_006_)
  );
  mxn2v0x05 _123_ (
    .a0(po_data[6]),
    .a1(rx_data[6]),
    .s(rx_data_flag),
    .z(_041_)
  );
  an2v0x05 _124_ (
    .a(sys_rst_n),
    .b(_041_),
    .z(_007_)
  );
  mxn2v0x05 _125_ (
    .a0(po_data[7]),
    .a1(rx_data[7]),
    .s(rx_data_flag),
    .z(_042_)
  );
  an2v0x05 _126_ (
    .a(sys_rst_n),
    .b(_042_),
    .z(_008_)
  );
  an2v0x05 _127_ (
    .a(rx_data_flag),
    .b(sys_rst_n),
    .z(_009_)
  );
  nr2v0x05 _128_ (
    .a(bit_cnt[2]),
    .b(bit_cnt[1]),
    .z(_043_)
  );
  nr3v0x05 _129_ (
    .a(bit_cnt[2]),
    .b(bit_cnt[1]),
    .c(bit_cnt[0]),
    .z(_044_)
  );
  xnai21v2x05 _130_ (
    .a1(bit_cnt[3]),
    .a2(_044_),
    .b(bit_flag),
    .z(_045_)
  );
  mxn2v0x05 _131_ (
    .a0(rx_data[1]),
    .a1(rx_data[0]),
    .s(_045_),
    .z(_046_)
  );
  an2v0x05 _132_ (
    .a(sys_rst_n),
    .b(_046_),
    .z(_010_)
  );
  mxn2v0x05 _133_ (
    .a0(rx_data[2]),
    .a1(rx_data[1]),
    .s(_045_),
    .z(_047_)
  );
  an2v0x05 _134_ (
    .a(sys_rst_n),
    .b(_047_),
    .z(_011_)
  );
  mxn2v0x05 _135_ (
    .a0(rx_data[3]),
    .a1(rx_data[2]),
    .s(_045_),
    .z(_048_)
  );
  an2v0x05 _136_ (
    .a(sys_rst_n),
    .b(_048_),
    .z(_012_)
  );
  mxn2v0x05 _137_ (
    .a0(rx_data[4]),
    .a1(rx_data[3]),
    .s(_045_),
    .z(_049_)
  );
  an2v0x05 _138_ (
    .a(sys_rst_n),
    .b(_049_),
    .z(_013_)
  );
  mxn2v0x05 _139_ (
    .a0(rx_data[5]),
    .a1(rx_data[4]),
    .s(_045_),
    .z(_050_)
  );
  an2v0x05 _140_ (
    .a(sys_rst_n),
    .b(_050_),
    .z(_014_)
  );
  mxn2v0x05 _141_ (
    .a0(rx_data[6]),
    .a1(rx_data[5]),
    .s(_045_),
    .z(_051_)
  );
  an2v0x05 _142_ (
    .a(sys_rst_n),
    .b(_051_),
    .z(_015_)
  );
  mxn2v0x05 _143_ (
    .a0(rx_data[7]),
    .a1(rx_data[6]),
    .s(_045_),
    .z(_052_)
  );
  an2v0x05 _144_ (
    .a(sys_rst_n),
    .b(_052_),
    .z(_016_)
  );
  mxn2v0x05 _145_ (
    .a0(rx),
    .a1(rx_data[7]),
    .s(_045_),
    .z(_053_)
  );
  an2v0x05 _146_ (
    .a(sys_rst_n),
    .b(_053_),
    .z(_017_)
  );
  an2v0x05 _147_ (
    .a(bit_flag),
    .b(bit_cnt[0]),
    .z(_054_)
  );
  nd3v0x05 _148_ (
    .a(bit_cnt[3]),
    .b(_043_),
    .c(_054_),
    .z(_055_)
  );
  nd2v0x05 _149_ (
    .a(sys_rst_n),
    .b(_055_),
    .z(_056_)
  );
  nr2v0x05 _150_ (
    .a(bit_flag),
    .b(bit_cnt[0]),
    .z(_057_)
  );
  nr3v0x05 _151_ (
    .a(_054_),
    .b(_056_),
    .c(_057_),
    .z(_018_)
  );
  xnr2v0x05 _152_ (
    .a(bit_cnt[1]),
    .b(_054_),
    .z(_058_)
  );
  nr2v0x05 _153_ (
    .a(_056_),
    .b(_058_),
    .z(_019_)
  );
  aoi21v0x05 _154_ (
    .a1(bit_cnt[1]),
    .a2(_054_),
    .b(bit_cnt[2]),
    .z(_059_)
  );
  nd3v0x05 _155_ (
    .a(bit_cnt[2]),
    .b(bit_cnt[1]),
    .c(_054_),
    .z(_060_)
  );
  nr3av0x05 _156_ (
    .a(_060_),
    .b(_056_),
    .c(_059_),
    .z(_020_)
  );
  xor2v0x05 _157_ (
    .a(bit_cnt[3]),
    .b(_060_),
    .z(_061_)
  );
  nr2v0x05 _158_ (
    .a(_056_),
    .b(_061_),
    .z(_021_)
  );
  nr2av0x1 _159_ (
    .a(sys_rst_n),
    .b(_055_),
    .z(_022_)
  );
  nr2v0x05 _160_ (
    .a(baud_count[8]),
    .b(baud_count[7]),
    .z(_062_)
  );
  nd3v0x05 _161_ (
    .a(baud_count[2]),
    .b(baud_count[1]),
    .c(baud_count[0]),
    .z(_063_)
  );
  nd3abv0x05 _162_ (
    .a(baud_count[9]),
    .b(baud_count[5]),
    .c(baud_count[6]),
    .z(_064_)
  );
  nr3v0x05 _163_ (
    .a(baud_count[3]),
    .b(_063_),
    .c(_064_),
    .z(_065_)
  );
  nr3abv0x05 _164_ (
    .a(baud_count[10]),
    .b(_062_),
    .c(baud_count[11]),
    .z(_066_)
  );
  nd4v0x05 _165_ (
    .a(baud_count[12]),
    .b(baud_count[4]),
    .c(_065_),
    .d(_066_),
    .z(_067_)
  );
  nd3v0x05 _166_ (
    .a(work_en),
    .b(sys_rst_n),
    .c(_067_),
    .z(_068_)
  );
  nr2v0x05 _167_ (
    .a(baud_count[0]),
    .b(_068_),
    .z(_023_)
  );
  aoi21v0x05 _168_ (
    .a1(work_en),
    .a2(baud_count[0]),
    .b(baud_count[1]),
    .z(_069_)
  );
  nd3v0x05 _169_ (
    .a(work_en),
    .b(baud_count[1]),
    .c(baud_count[0]),
    .z(_070_)
  );
  nr3av0x05 _170_ (
    .a(_070_),
    .b(_068_),
    .c(_069_),
    .z(_024_)
  );
  xor2v0x05 _171_ (
    .a(baud_count[2]),
    .b(_070_),
    .z(_071_)
  );
  nr2v0x05 _172_ (
    .a(_068_),
    .b(_071_),
    .z(_025_)
  );
  an4v0x05 _173_ (
    .a(work_en),
    .b(baud_count[2]),
    .c(baud_count[1]),
    .d(baud_count[0]),
    .z(_072_)
  );
  nr2v0x05 _174_ (
    .a(baud_count[3]),
    .b(_072_),
    .z(_073_)
  );
  an2v0x05 _175_ (
    .a(baud_count[3]),
    .b(_072_),
    .z(_074_)
  );
  nr3v0x05 _176_ (
    .a(_068_),
    .b(_073_),
    .c(_074_),
    .z(_026_)
  );
  nd2v0x05 _177_ (
    .a(baud_count[4]),
    .b(_074_),
    .z(_075_)
  );
  nr2v0x05 _178_ (
    .a(baud_count[4]),
    .b(_074_),
    .z(_076_)
  );
  nr3av0x05 _179_ (
    .a(_075_),
    .b(_076_),
    .c(_068_),
    .z(_027_)
  );
  xor2v0x05 _180_ (
    .a(baud_count[5]),
    .b(_075_),
    .z(_077_)
  );
  nr2v0x05 _181_ (
    .a(_068_),
    .b(_077_),
    .z(_028_)
  );
  an2v0x05 _182_ (
    .a(baud_count[5]),
    .b(baud_count[4]),
    .z(_078_)
  );
  an4v0x05 _183_ (
    .a(baud_count[6]),
    .b(baud_count[3]),
    .c(_072_),
    .d(_078_),
    .z(_079_)
  );
  aoi21v0x05 _184_ (
    .a1(_074_),
    .a2(_078_),
    .b(baud_count[6]),
    .z(_080_)
  );
  nr3v0x05 _185_ (
    .a(_068_),
    .b(_079_),
    .c(_080_),
    .z(_029_)
  );
  an2v0x05 _186_ (
    .a(baud_count[7]),
    .b(_079_),
    .z(_081_)
  );
  nr2v0x05 _187_ (
    .a(baud_count[7]),
    .b(_079_),
    .z(_082_)
  );
  nr3v0x05 _188_ (
    .a(_068_),
    .b(_081_),
    .c(_082_),
    .z(_030_)
  );
  an2v0x05 _189_ (
    .a(baud_count[8]),
    .b(_081_),
    .z(_083_)
  );
  nr2v0x05 _190_ (
    .a(baud_count[8]),
    .b(_081_),
    .z(_084_)
  );
  nr3v0x05 _191_ (
    .a(_068_),
    .b(_083_),
    .c(_084_),
    .z(_031_)
  );
  nd4v0x05 _192_ (
    .a(baud_count[9]),
    .b(baud_count[8]),
    .c(baud_count[7]),
    .d(_079_),
    .z(_085_)
  );
  aoi21v0x05 _193_ (
    .a1(baud_count[8]),
    .a2(_081_),
    .b(baud_count[9]),
    .z(_086_)
  );
  nr3av0x05 _194_ (
    .a(_085_),
    .b(_086_),
    .c(_068_),
    .z(_032_)
  );
  xnr2v0x05 _195_ (
    .a(_099_),
    .b(_085_),
    .z(_087_)
  );
  nr2v0x05 _196_ (
    .a(_068_),
    .b(_087_),
    .z(_033_)
  );
  nr3v0x05 _197_ (
    .a(_098_),
    .b(_099_),
    .c(_085_),
    .z(_088_)
  );
  aoi21a2v0x05 _198_ (
    .a1(baud_count[10]),
    .a2(_085_),
    .b(baud_count[11]),
    .z(_089_)
  );
  nr3v0x05 _199_ (
    .a(_068_),
    .b(_088_),
    .c(_089_),
    .z(_034_)
  );
  oai31v0x05 _200_ (
    .a1(_098_),
    .a2(_099_),
    .a3(_085_),
    .b(baud_count[12]),
    .z(_090_)
  );
  nr4v1x05 _201_ (
    .a(baud_count[12]),
    .b(_098_),
    .c(_099_),
    .d(_085_),
    .z(_091_)
  );
  aoi21a2v0x05 _202_ (
    .a1(_090_),
    .a2(_091_),
    .b(_068_),
    .z(_035_)
  );
  aoi21v0x05 _203_ (
    .a1(work_en),
    .a2(_055_),
    .b(nedge_flag),
    .z(_092_)
  );
  nr2av0x1 _204_ (
    .a(sys_rst_n),
    .b(_092_),
    .z(_036_)
  );
  nd3v0x05 _205_ (
    .a(baud_count[11]),
    .b(baud_count[1]),
    .c(baud_count[0]),
    .z(_093_)
  );
  nd3abv0x05 _206_ (
    .a(_093_),
    .b(baud_count[12]),
    .c(_062_),
    .z(_094_)
  );
  nd2av0x05 _207_ (
    .a(baud_count[4]),
    .b(baud_count[3]),
    .z(_095_)
  );
  nd3abv0x05 _208_ (
    .a(_095_),
    .b(baud_count[2]),
    .c(sys_rst_n),
    .z(_096_)
  );
  nd4v0x05 _209_ (
    .a(_099_),
    .b(baud_count[9]),
    .c(_100_),
    .d(baud_count[5]),
    .z(_097_)
  );
  nr3v0x05 _210_ (
    .a(_094_),
    .b(_096_),
    .c(_097_),
    .z(_037_)
  );
  nr3abv0x05 _211_ (
    .a(sys_rst_n),
    .b(rx_reg3),
    .c(rx_reg2),
    .z(_038_)
  );
  an2v0x05 _212_ (
    .a(sys_rst_n),
    .b(rx_reg2),
    .z(_039_)
  );
  an2v0x05 _213_ (
    .a(sys_rst_n),
    .b(rx_reg),
    .z(_040_)
  );
  (* src = "uart_rx.v:23.5-28.8" *)
  dfnt1v0x2 _214_ (
    .cp(sys_clk),
    .d(_000_),
    .z(rx_reg)
  );
  (* src = "uart_rx.v:114.5-119.8" *)
  dfnt1v0x2 _215_ (
    .cp(sys_clk),
    .d(_001_),
    .z(po_data[0])
  );
  (* src = "uart_rx.v:114.5-119.8" *)
  dfnt1v0x2 _216_ (
    .cp(sys_clk),
    .d(_002_),
    .z(po_data[1])
  );
  (* src = "uart_rx.v:114.5-119.8" *)
  dfnt1v0x2 _217_ (
    .cp(sys_clk),
    .d(_003_),
    .z(po_data[2])
  );
  (* src = "uart_rx.v:114.5-119.8" *)
  dfnt1v0x2 _218_ (
    .cp(sys_clk),
    .d(_004_),
    .z(po_data[3])
  );
  (* src = "uart_rx.v:114.5-119.8" *)
  dfnt1v0x2 _219_ (
    .cp(sys_clk),
    .d(_005_),
    .z(po_data[4])
  );
  (* src = "uart_rx.v:114.5-119.8" *)
  dfnt1v0x2 _220_ (
    .cp(sys_clk),
    .d(_006_),
    .z(po_data[5])
  );
  (* src = "uart_rx.v:114.5-119.8" *)
  dfnt1v0x2 _221_ (
    .cp(sys_clk),
    .d(_007_),
    .z(po_data[6])
  );
  (* src = "uart_rx.v:114.5-119.8" *)
  dfnt1v0x2 _222_ (
    .cp(sys_clk),
    .d(_008_),
    .z(po_data[7])
  );
  (* src = "uart_rx.v:122.5-127.8" *)
  dfnt1v0x2 _223_ (
    .cp(sys_clk),
    .d(_009_),
    .z(po_data_flag)
  );
  (* src = "uart_rx.v:96.5-101.8" *)
  dfnt1v0x2 _224_ (
    .cp(sys_clk),
    .d(_010_),
    .z(rx_data[0])
  );
  (* src = "uart_rx.v:96.5-101.8" *)
  dfnt1v0x2 _225_ (
    .cp(sys_clk),
    .d(_011_),
    .z(rx_data[1])
  );
  (* src = "uart_rx.v:96.5-101.8" *)
  dfnt1v0x2 _226_ (
    .cp(sys_clk),
    .d(_012_),
    .z(rx_data[2])
  );
  (* src = "uart_rx.v:96.5-101.8" *)
  dfnt1v0x2 _227_ (
    .cp(sys_clk),
    .d(_013_),
    .z(rx_data[3])
  );
  (* src = "uart_rx.v:96.5-101.8" *)
  dfnt1v0x2 _228_ (
    .cp(sys_clk),
    .d(_014_),
    .z(rx_data[4])
  );
  (* src = "uart_rx.v:96.5-101.8" *)
  dfnt1v0x2 _229_ (
    .cp(sys_clk),
    .d(_015_),
    .z(rx_data[5])
  );
  (* src = "uart_rx.v:96.5-101.8" *)
  dfnt1v0x2 _230_ (
    .cp(sys_clk),
    .d(_016_),
    .z(rx_data[6])
  );
  (* src = "uart_rx.v:96.5-101.8" *)
  dfnt1v0x2 _231_ (
    .cp(sys_clk),
    .d(_017_),
    .z(rx_data[7])
  );
  (* src = "uart_rx.v:86.5-93.8" *)
  dfnt1v0x2 _232_ (
    .cp(sys_clk),
    .d(_018_),
    .z(bit_cnt[0])
  );
  (* src = "uart_rx.v:86.5-93.8" *)
  dfnt1v0x2 _233_ (
    .cp(sys_clk),
    .d(_019_),
    .z(bit_cnt[1])
  );
  (* src = "uart_rx.v:86.5-93.8" *)
  dfnt1v0x2 _234_ (
    .cp(sys_clk),
    .d(_020_),
    .z(bit_cnt[2])
  );
  (* src = "uart_rx.v:86.5-93.8" *)
  dfnt1v0x2 _235_ (
    .cp(sys_clk),
    .d(_021_),
    .z(bit_cnt[3])
  );
  (* src = "uart_rx.v:104.5-111.8" *)
  dfnt1v0x2 _236_ (
    .cp(sys_clk),
    .d(_022_),
    .z(rx_data_flag)
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _237_ (
    .cp(sys_clk),
    .d(_023_),
    .z(baud_count[0])
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _238_ (
    .cp(sys_clk),
    .d(_024_),
    .z(baud_count[1])
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _239_ (
    .cp(sys_clk),
    .d(_025_),
    .z(baud_count[2])
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _240_ (
    .cp(sys_clk),
    .d(_026_),
    .z(baud_count[3])
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _241_ (
    .cp(sys_clk),
    .d(_027_),
    .z(baud_count[4])
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _242_ (
    .cp(sys_clk),
    .d(_028_),
    .z(baud_count[5])
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _243_ (
    .cp(sys_clk),
    .d(_029_),
    .z(baud_count[6])
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _244_ (
    .cp(sys_clk),
    .d(_030_),
    .z(baud_count[7])
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _245_ (
    .cp(sys_clk),
    .d(_031_),
    .z(baud_count[8])
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _246_ (
    .cp(sys_clk),
    .d(_032_),
    .z(baud_count[9])
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _247_ (
    .cp(sys_clk),
    .d(_033_),
    .z(baud_count[10])
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _248_ (
    .cp(sys_clk),
    .d(_034_),
    .z(baud_count[11])
  );
  (* src = "uart_rx.v:66.5-73.8" *)
  dfnt1v0x2 _249_ (
    .cp(sys_clk),
    .d(_035_),
    .z(baud_count[12])
  );
  (* src = "uart_rx.v:56.5-63.8" *)
  dfnt1v0x2 _250_ (
    .cp(sys_clk),
    .d(_036_),
    .z(work_en)
  );
  (* src = "uart_rx.v:76.5-83.8" *)
  dfnt1v0x2 _251_ (
    .cp(sys_clk),
    .d(_037_),
    .z(bit_flag)
  );
  (* src = "uart_rx.v:46.5-53.8" *)
  dfnt1v0x2 _252_ (
    .cp(sys_clk),
    .d(_038_),
    .z(nedge_flag)
  );
  (* src = "uart_rx.v:38.5-43.8" *)
  dfnt1v0x2 _253_ (
    .cp(sys_clk),
    .d(_039_),
    .z(rx_reg3)
  );
  (* src = "uart_rx.v:31.5-36.8" *)
  dfnt1v0x2 _254_ (
    .cp(sys_clk),
    .d(_040_),
    .z(rx_reg2)
  );
endmodule

(* src = "uart_tx.v:1.1-75.10" *)
module uart_tx(sys_clk, sys_rst_n, pi_data, pi_data_flag, tx);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  (* src = "uart_tx.v:12.16-12.24" *)
  wire [12:0] baud_cnt;
  (* src = "uart_tx.v:14.15-14.22" *)
  wire [3:0] bit_cnt;
  (* src = "uart_tx.v:13.9-13.17" *)
  wire bit_flag;
  (* src = "uart_tx.v:6.22-6.29" *)
  input [7:0] pi_data;
  wire [7:0] pi_data;
  (* src = "uart_tx.v:7.16-7.28" *)
  input pi_data_flag;
  wire pi_data_flag;
  (* src = "uart_tx.v:4.16-4.23" *)
  input sys_clk;
  wire sys_clk;
  (* src = "uart_tx.v:5.16-5.25" *)
  input sys_rst_n;
  wire sys_rst_n;
  (* src = "uart_tx.v:8.16-8.18" *)
  output tx;
  wire tx;
  (* src = "uart_tx.v:11.9-11.16" *)
  wire work_en;
  iv1v0x05 _077_ (
    .a(baud_cnt[11]),
    .z(_038_)
  );
  iv1v0x05 _078_ (
    .a(baud_cnt[10]),
    .z(_039_)
  );
  iv1v0x05 _079_ (
    .a(tx),
    .z(_040_)
  );
  an2v0x05 _080_ (
    .a(bit_cnt[1]),
    .b(bit_cnt[0]),
    .z(_041_)
  );
  nr3av0x05 _081_ (
    .a(pi_data[3]),
    .b(bit_cnt[0]),
    .c(bit_cnt[1]),
    .z(_042_)
  );
  nr3abv0x05 _082_ (
    .a(bit_cnt[0]),
    .b(pi_data[4]),
    .c(bit_cnt[1]),
    .z(_043_)
  );
  nr3abv0x05 _083_ (
    .a(bit_cnt[1]),
    .b(pi_data[5]),
    .c(bit_cnt[0]),
    .z(_044_)
  );
  nr2v0x05 _084_ (
    .a(bit_cnt[3]),
    .b(_043_),
    .z(_045_)
  );
  aoi112v0x05 _085_ (
    .a(_042_),
    .b(_044_),
    .c1(pi_data[6]),
    .c2(_041_),
    .z(_046_)
  );
  nd3v0x05 _086_ (
    .a(bit_cnt[2]),
    .b(_045_),
    .c(_046_),
    .z(_047_)
  );
  oai31v0x05 _087_ (
    .a1(bit_cnt[1]),
    .a2(bit_cnt[0]),
    .a3(pi_data[7]),
    .b(bit_cnt[3]),
    .z(_048_)
  );
  nd3av0x05 _088_ (
    .a(bit_cnt[1]),
    .b(bit_cnt[0]),
    .c(pi_data[0]),
    .z(_049_)
  );
  nr3abv0x05 _089_ (
    .a(bit_cnt[1]),
    .b(pi_data[1]),
    .c(bit_cnt[0]),
    .z(_050_)
  );
  aoi21v0x05 _090_ (
    .a1(pi_data[2]),
    .a2(_041_),
    .b(_050_),
    .z(_051_)
  );
  nd3v0x05 _091_ (
    .a(_048_),
    .b(_049_),
    .c(_051_),
    .z(_052_)
  );
  oai211v0x05 _092_ (
    .a1(bit_cnt[2]),
    .a2(_052_),
    .b(_047_),
    .c(bit_flag),
    .z(_053_)
  );
  oai211v0x05 _093_ (
    .a1(bit_flag),
    .a2(_040_),
    .b(sys_rst_n),
    .c(_053_),
    .z(_000_)
  );
  nr3av0x05 _094_ (
    .a(bit_cnt[0]),
    .b(bit_cnt[1]),
    .c(bit_cnt[2]),
    .z(_054_)
  );
  nd3v0x05 _095_ (
    .a(bit_cnt[3]),
    .b(bit_flag),
    .c(_054_),
    .z(_055_)
  );
  nd2v0x05 _096_ (
    .a(sys_rst_n),
    .b(_055_),
    .z(_056_)
  );
  xnr2v0x05 _097_ (
    .a(bit_flag),
    .b(bit_cnt[0]),
    .z(_057_)
  );
  nr2v0x05 _098_ (
    .a(_056_),
    .b(_057_),
    .z(_001_)
  );
  xaoi21v0x05 _099_ (
    .a1(bit_flag),
    .a2(bit_cnt[0]),
    .b(bit_cnt[1]),
    .z(_058_)
  );
  nr2v0x05 _100_ (
    .a(_056_),
    .b(_058_),
    .z(_002_)
  );
  aoi21v0x05 _101_ (
    .a1(bit_flag),
    .a2(_041_),
    .b(bit_cnt[2]),
    .z(_059_)
  );
  nd3v0x05 _102_ (
    .a(bit_flag),
    .b(bit_cnt[2]),
    .c(_041_),
    .z(_060_)
  );
  nr3av0x05 _103_ (
    .a(_060_),
    .b(_056_),
    .c(_059_),
    .z(_003_)
  );
  xor2v0x05 _104_ (
    .a(bit_cnt[3]),
    .b(_060_),
    .z(_061_)
  );
  nr2v0x05 _105_ (
    .a(_056_),
    .b(_061_),
    .z(_004_)
  );
  nd3v0x05 _106_ (
    .a(baud_cnt[2]),
    .b(baud_cnt[1]),
    .c(baud_cnt[0]),
    .z(_062_)
  );
  nr3abv0x05 _107_ (
    .a(baud_cnt[12]),
    .b(baud_cnt[6]),
    .c(baud_cnt[5]),
    .z(_063_)
  );
  nd3abv0x05 _108_ (
    .a(baud_cnt[3]),
    .b(_062_),
    .c(_063_),
    .z(_064_)
  );
  nr4v1x05 _109_ (
    .a(baud_cnt[11]),
    .b(baud_cnt[9]),
    .c(baud_cnt[8]),
    .d(baud_cnt[7]),
    .z(_065_)
  );
  nd3v0x05 _110_ (
    .a(baud_cnt[10]),
    .b(baud_cnt[4]),
    .c(_065_),
    .z(_066_)
  );
  oai211v0x05 _111_ (
    .a1(_064_),
    .a2(_066_),
    .b(work_en),
    .c(sys_rst_n),
    .z(_067_)
  );
  nr2v0x05 _112_ (
    .a(baud_cnt[0]),
    .b(_067_),
    .z(_005_)
  );
  aoi21v0x05 _113_ (
    .a1(work_en),
    .a2(baud_cnt[0]),
    .b(baud_cnt[1]),
    .z(_068_)
  );
  nd3v0x05 _114_ (
    .a(work_en),
    .b(baud_cnt[1]),
    .c(baud_cnt[0]),
    .z(_069_)
  );
  nr3av0x05 _115_ (
    .a(_069_),
    .b(_067_),
    .c(_068_),
    .z(_006_)
  );
  xor2v0x05 _116_ (
    .a(baud_cnt[2]),
    .b(_069_),
    .z(_070_)
  );
  nr2v0x05 _117_ (
    .a(_067_),
    .b(_070_),
    .z(_007_)
  );
  an4v0x05 _118_ (
    .a(work_en),
    .b(baud_cnt[2]),
    .c(baud_cnt[1]),
    .d(baud_cnt[0]),
    .z(_071_)
  );
  nr2v0x05 _119_ (
    .a(baud_cnt[3]),
    .b(_071_),
    .z(_072_)
  );
  an2v0x05 _120_ (
    .a(baud_cnt[3]),
    .b(_071_),
    .z(_073_)
  );
  nr3v0x05 _121_ (
    .a(_067_),
    .b(_072_),
    .c(_073_),
    .z(_008_)
  );
  nd2v0x05 _122_ (
    .a(baud_cnt[4]),
    .b(_073_),
    .z(_074_)
  );
  nr2v0x05 _123_ (
    .a(baud_cnt[4]),
    .b(_073_),
    .z(_075_)
  );
  nr3av0x05 _124_ (
    .a(_074_),
    .b(_075_),
    .c(_067_),
    .z(_009_)
  );
  xor2v0x05 _125_ (
    .a(baud_cnt[5]),
    .b(_074_),
    .z(_076_)
  );
  nr2v0x05 _126_ (
    .a(_067_),
    .b(_076_),
    .z(_010_)
  );
  an2v0x05 _127_ (
    .a(baud_cnt[5]),
    .b(baud_cnt[4]),
    .z(_020_)
  );
  an4v0x05 _128_ (
    .a(baud_cnt[6]),
    .b(baud_cnt[3]),
    .c(_071_),
    .d(_020_),
    .z(_021_)
  );
  aoi21v0x05 _129_ (
    .a1(_073_),
    .a2(_020_),
    .b(baud_cnt[6]),
    .z(_022_)
  );
  nr3v0x05 _130_ (
    .a(_067_),
    .b(_021_),
    .c(_022_),
    .z(_011_)
  );
  an2v0x05 _131_ (
    .a(baud_cnt[7]),
    .b(_021_),
    .z(_023_)
  );
  nr2v0x05 _132_ (
    .a(baud_cnt[7]),
    .b(_021_),
    .z(_024_)
  );
  nr3v0x05 _133_ (
    .a(_067_),
    .b(_023_),
    .c(_024_),
    .z(_012_)
  );
  aoi21v0x05 _134_ (
    .a1(baud_cnt[8]),
    .a2(_023_),
    .b(_067_),
    .z(_025_)
  );
  oan21v0x05 _135_ (
    .a1(baud_cnt[8]),
    .a2(_023_),
    .b(_025_),
    .z(_013_)
  );
  nd4v0x05 _136_ (
    .a(baud_cnt[9]),
    .b(baud_cnt[8]),
    .c(baud_cnt[7]),
    .d(_021_),
    .z(_026_)
  );
  aoi21v0x05 _137_ (
    .a1(baud_cnt[8]),
    .a2(_023_),
    .b(baud_cnt[9]),
    .z(_027_)
  );
  nr3av0x05 _138_ (
    .a(_026_),
    .b(_027_),
    .c(_067_),
    .z(_014_)
  );
  xnr2v0x05 _139_ (
    .a(_039_),
    .b(_026_),
    .z(_028_)
  );
  nr2v0x05 _140_ (
    .a(_067_),
    .b(_028_),
    .z(_015_)
  );
  nr3v0x05 _141_ (
    .a(_038_),
    .b(_039_),
    .c(_026_),
    .z(_029_)
  );
  aoi21a2v0x05 _142_ (
    .a1(baud_cnt[10]),
    .a2(_026_),
    .b(baud_cnt[11]),
    .z(_030_)
  );
  nr3v0x05 _143_ (
    .a(_067_),
    .b(_029_),
    .c(_030_),
    .z(_016_)
  );
  oai31v0x05 _144_ (
    .a1(_038_),
    .a2(_039_),
    .a3(_026_),
    .b(baud_cnt[12]),
    .z(_031_)
  );
  nr4v1x05 _145_ (
    .a(baud_cnt[12]),
    .b(_038_),
    .c(_039_),
    .d(_026_),
    .z(_032_)
  );
  aoi21a2v0x05 _146_ (
    .a1(_031_),
    .a2(_032_),
    .b(_067_),
    .z(_017_)
  );
  aoi21v0x05 _147_ (
    .a1(work_en),
    .a2(_055_),
    .b(pi_data_flag),
    .z(_033_)
  );
  nr2av0x1 _148_ (
    .a(sys_rst_n),
    .b(_033_),
    .z(_018_)
  );
  or4v0x05 _149_ (
    .a(baud_cnt[12]),
    .b(baud_cnt[11]),
    .c(baud_cnt[10]),
    .d(baud_cnt[7]),
    .z(_034_)
  );
  nr2v0x05 _150_ (
    .a(baud_cnt[2]),
    .b(baud_cnt[1]),
    .z(_035_)
  );
  nr4v1x05 _151_ (
    .a(baud_cnt[6]),
    .b(baud_cnt[5]),
    .c(baud_cnt[4]),
    .d(baud_cnt[3]),
    .z(_036_)
  );
  nd4v0x05 _152_ (
    .a(baud_cnt[0]),
    .b(sys_rst_n),
    .c(_035_),
    .d(_036_),
    .z(_037_)
  );
  nr4v1x05 _153_ (
    .a(baud_cnt[9]),
    .b(baud_cnt[8]),
    .c(_034_),
    .d(_037_),
    .z(_019_)
  );
  (* src = "uart_tx.v:57.5-74.8" *)
  dfnt1v0x2 _154_ (
    .cp(sys_clk),
    .d(_000_),
    .z(tx)
  );
  (* src = "uart_tx.v:47.5-54.8" *)
  dfnt1v0x2 _155_ (
    .cp(sys_clk),
    .d(_001_),
    .z(bit_cnt[0])
  );
  (* src = "uart_tx.v:47.5-54.8" *)
  dfnt1v0x2 _156_ (
    .cp(sys_clk),
    .d(_002_),
    .z(bit_cnt[1])
  );
  (* src = "uart_tx.v:47.5-54.8" *)
  dfnt1v0x2 _157_ (
    .cp(sys_clk),
    .d(_003_),
    .z(bit_cnt[2])
  );
  (* src = "uart_tx.v:47.5-54.8" *)
  dfnt1v0x2 _158_ (
    .cp(sys_clk),
    .d(_004_),
    .z(bit_cnt[3])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _159_ (
    .cp(sys_clk),
    .d(_005_),
    .z(baud_cnt[0])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _160_ (
    .cp(sys_clk),
    .d(_006_),
    .z(baud_cnt[1])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _161_ (
    .cp(sys_clk),
    .d(_007_),
    .z(baud_cnt[2])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _162_ (
    .cp(sys_clk),
    .d(_008_),
    .z(baud_cnt[3])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _163_ (
    .cp(sys_clk),
    .d(_009_),
    .z(baud_cnt[4])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _164_ (
    .cp(sys_clk),
    .d(_010_),
    .z(baud_cnt[5])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _165_ (
    .cp(sys_clk),
    .d(_011_),
    .z(baud_cnt[6])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _166_ (
    .cp(sys_clk),
    .d(_012_),
    .z(baud_cnt[7])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _167_ (
    .cp(sys_clk),
    .d(_013_),
    .z(baud_cnt[8])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _168_ (
    .cp(sys_clk),
    .d(_014_),
    .z(baud_cnt[9])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _169_ (
    .cp(sys_clk),
    .d(_015_),
    .z(baud_cnt[10])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _170_ (
    .cp(sys_clk),
    .d(_016_),
    .z(baud_cnt[11])
  );
  (* src = "uart_tx.v:27.5-34.8" *)
  dfnt1v0x2 _171_ (
    .cp(sys_clk),
    .d(_017_),
    .z(baud_cnt[12])
  );
  (* src = "uart_tx.v:17.5-24.8" *)
  dfnt1v0x2 _172_ (
    .cp(sys_clk),
    .d(_018_),
    .z(work_en)
  );
  (* src = "uart_tx.v:37.5-44.8" *)
  dfnt1v0x2 _173_ (
    .cp(sys_clk),
    .d(_019_),
    .z(bit_flag)
  );
endmodule
