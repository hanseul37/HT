/* Generated by Yosys 0.32+74 (git sha1 b739213d9, x86_64-w64-mingw32-g++ 9.2.1 -Os) */

(* src = "clock_divider.v:1.1-13.10" *)
module clock_divider(in, out);
  (* src = "clock_divider.v:6.3-12.8" *)
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  (* init = 4'h0 *)
  (* src = "clock_divider.v:4.13-4.20" *)
  wire [3:0] counter;
  (* src = "clock_divider.v:2.9-2.11" *)
  input in;
  wire in;
  (* src = "clock_divider.v:3.14-3.17" *)
  output out;
  wire out;
  nr2v0x05 _07_ (
    .a(counter[3]),
    .b(counter[2]),
    .z(_04_)
  );
  nr4v1x05 _08_ (
    .a(counter[3]),
    .b(counter[1]),
    .c(counter[0]),
    .d(counter[2]),
    .z(_00_)
  );
  aoi21v0x05 _09_ (
    .a1(counter[1]),
    .a2(counter[0]),
    .b(counter[3]),
    .z(_05_)
  );
  nr2v0x05 _10_ (
    .a(counter[3]),
    .b(counter[0]),
    .z(_01_)
  );
  oan21v0x05 _11_ (
    .a1(counter[1]),
    .a2(counter[0]),
    .b(_05_),
    .z(_02_)
  );
  aoi21v0x05 _12_ (
    .a1(counter[1]),
    .a2(counter[0]),
    .b(counter[2]),
    .z(_06_)
  );
  oan21bv0x05 _13_ (
    .a1(_04_),
    .a2(_05_),
    .b(_06_),
    .z(_03_)
  );
  (* src = "clock_divider.v:6.3-12.8" *)
  dfnt1v0x2 _14_ (
    .cp(in),
    .d(_01_),
    .z(counter[0])
  );
  (* src = "clock_divider.v:6.3-12.8" *)
  dfnt1v0x2 _15_ (
    .cp(in),
    .d(_02_),
    .z(counter[1])
  );
  (* src = "clock_divider.v:6.3-12.8" *)
  dfnt1v0x2 _16_ (
    .cp(in),
    .d(_03_),
    .z(counter[2])
  );
  (* src = "clock_divider.v:6.3-12.8" *)
  dfnt1v0x2 _17_ (
    .cp(in),
    .d(1'h0),
    .z(counter[3])
  );
  (* src = "clock_divider.v:6.3-12.8" *)
  dfnt1v0x2 _18_ (
    .cp(in),
    .d(_00_),
    .z(out)
  );
endmodule

(* src = "spi_main.v:2.1-8.10" *)
module spi_main(t_start, sys_clk, d_in_m, d_in_s, d_out_m, d_out_s, rstn, miso, mosi);
  (* src = "spi_main.v:7.63-7.66" *)
  wire _0_;
  (* src = "spi_main.v:5.6-5.8" *)
  wire cs;
  (* src = "spi_main.v:2.58-2.64" *)
  input [7:0] d_in_m;
  wire [7:0] d_in_m;
  (* src = "spi_main.v:2.77-2.83" *)
  input [7:0] d_in_s;
  wire [7:0] d_in_s;
  (* src = "spi_main.v:2.97-2.104" *)
  output [7:0] d_out_m;
  wire [7:0] d_out_m;
  (* src = "spi_main.v:2.118-2.125" *)
  output [7:0] d_out_s;
  wire [7:0] d_out_s;
  (* src = "spi_main.v:2.146-2.150" *)
  output miso;
  wire miso;
  (* src = "spi_main.v:2.159-2.163" *)
  output mosi;
  wire mosi;
  (* src = "spi_main.v:2.133-2.137" *)
  input rstn;
  wire rstn;
  (* src = "spi_main.v:3.6-3.15" *)
  (* unused_bits = "0" *)
  wire spi_clk_m;
  (* src = "spi_main.v:4.6-4.15" *)
  (* unused_bits = "0" *)
  wire spi_clk_s;
  (* src = "spi_main.v:2.38-2.45" *)
  input sys_clk;
  wire sys_clk;
  (* src = "spi_main.v:2.23-2.30" *)
  input t_start;
  wire t_start;
  iv1v0x05 _1_ (
    .a(cs),
    .z(_0_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "spi_main.v:6.12-6.172" *)
  spi_master master (
    .cs(cs),
    .d_in_m(d_in_m),
    .d_out_m(d_out_m),
    .miso(miso),
    .mosi(mosi),
    .rstn(rstn),
    .spi_clk(spi_clk_m),
    .sys_clk(sys_clk),
    .t_size(4'h8),
    .t_start(t_start)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "spi_main.v:7.11-7.161" *)
  spi_slave slave (
    .d_in_s(d_in_s),
    .d_out_s(d_out_s),
    .miso(miso),
    .mosi(mosi),
    .rstn(_0_),
    .slave_clk(sys_clk),
    .spi_clk(spi_clk_s),
    .t_size(4'h8),
    .t_start(t_start)
  );
endmodule

(* dynports =  1  *)
(* src = "spi_master.v:2.1-124.10" *)
module spi_master(rstn, sys_clk, t_start, d_in_m, t_size, d_out_m, miso, mosi, spi_clk, cs);
  (* src = "spi_master.v:19.16-19.18" *)
  output cs;
  wire cs;
  (* src = "spi_master.v:11.27-11.33" *)
  input [7:0] d_in_m;
  wire [7:0] d_in_m;
  (* src = "spi_master.v:13.32-13.39" *)
  output [7:0] d_out_m;
  wire [7:0] d_out_m;
  (* src = "spi_master.v:16.11-16.15" *)
  input miso;
  wire miso;
  (* src = "spi_master.v:22.25-22.31" *)
  wire [7:0] miso_d;
  (* src = "spi_master.v:17.16-17.20" *)
  output mosi;
  wire mosi;
  (* src = "spi_master.v:21.25-21.31" *)
  wire [7:0] mosi_d;
  (* src = "spi_master.v:8.11-8.15" *)
  input rstn;
  wire rstn;
  (* src = "spi_master.v:18.16-18.23" *)
  output spi_clk;
  wire spi_clk;
  (* src = "spi_master.v:24.15-24.20" *)
  wire [2:0] state;
  (* src = "spi_master.v:9.11-9.18" *)
  input sys_clk;
  wire sys_clk;
  (* src = "spi_master.v:12.29-12.35" *)
  input [3:0] t_size;
  wire [3:0] t_size;
  (* src = "spi_master.v:10.11-10.18" *)
  input t_start;
  wire t_start;
  assign cs = 1'h1;
  assign d_out_m = 8'h00;
  assign miso_d = 8'h00;
  assign mosi = 1'hx;
  assign mosi_d = 8'h00;
  assign spi_clk = 1'h0;
  assign state = 3'h0;
endmodule

(* dynports =  1  *)
(* src = "spi_slave.v:2.1-121.10" *)
module spi_slave(rstn, slave_clk, t_start, d_in_s, t_size, d_out_s, spi_clk, mosi, miso);
  (* src = "spi_slave.v:9.27-9.33" *)
  input [7:0] d_in_s;
  wire [7:0] d_in_s;
  (* src = "spi_slave.v:11.32-11.39" *)
  output [7:0] d_out_s;
  wire [7:0] d_out_s;
  (* src = "spi_slave.v:16.16-16.20" *)
  output miso;
  wire miso;
  (* src = "spi_slave.v:18.25-18.31" *)
  wire [7:0] miso_d;
  (* src = "spi_slave.v:15.11-15.15" *)
  input mosi;
  wire mosi;
  (* src = "spi_slave.v:17.25-17.31" *)
  wire [7:0] mosi_d;
  (* src = "spi_slave.v:6.11-6.15" *)
  input rstn;
  wire rstn;
  (* src = "spi_slave.v:7.11-7.20" *)
  input slave_clk;
  wire slave_clk;
  (* src = "spi_slave.v:12.16-12.23" *)
  output spi_clk;
  wire spi_clk;
  (* src = "spi_slave.v:20.15-20.20" *)
  wire [2:0] state;
  (* src = "spi_slave.v:10.29-10.35" *)
  input [3:0] t_size;
  wire [3:0] t_size;
  (* src = "spi_slave.v:8.11-8.18" *)
  input t_start;
  wire t_start;
  assign d_out_s = 8'h00;
  assign miso = 1'hx;
  assign miso_d = 8'h00;
  assign mosi_d = 8'h00;
  assign spi_clk = 1'h0;
  assign state = 3'h0;
endmodule
