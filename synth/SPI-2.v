/* Generated by Yosys 0.32+74 (git sha1 b739213d9, x86_64-w64-mingw32-g++ 9.2.1 -Os) */

(* dynports =  1  *)
(* hdlname = "\\SPI_Slave" *)
(* src = "SPI_Slave.v:16.1-144.10" *)
module \$paramod$edee9027fc73b27c93ba6efadc4faa1987d2455b\SPI_Slave (clk, rst_n, data_in, sclk, cs_n, mosi, miso, data_valid, data_out);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  (* src = "SPI_Slave.v:25.15-25.18" *)
  input clk;
  wire clk;
  (* src = "SPI_Slave.v:29.15-29.19" *)
  input cs_n;
  wire cs_n;
  (* src = "SPI_Slave.v:44.11-44.17" *)
  wire cs_n_a;
  (* src = "SPI_Slave.v:45.11-45.17" *)
  wire cs_n_b;
  (* src = "SPI_Slave.v:27.27-27.34" *)
  input [7:0] data_in;
  wire [7:0] data_in;
  (* src = "SPI_Slave.v:33.31-33.39" *)
  output [7:0] data_out;
  wire [7:0] data_out;
  (* src = "SPI_Slave.v:38.23-38.31" *)
  wire [7:0] data_reg;
  (* src = "SPI_Slave.v:32.16-32.26" *)
  output data_valid;
  wire data_valid;
  (* src = "SPI_Slave.v:31.16-31.20" *)
  output miso;
  wire miso;
  (* src = "SPI_Slave.v:30.15-30.19" *)
  input mosi;
  wire mosi;
  (* src = "SPI_Slave.v:26.15-26.20" *)
  input rst_n;
  wire rst_n;
  (* src = "SPI_Slave.v:39.23-39.32" *)
  wire [3:0] sampl_num;
  (* src = "SPI_Slave.v:28.15-28.19" *)
  input sclk;
  wire sclk;
  (* src = "SPI_Slave.v:40.11-40.17" *)
  wire sclk_a;
  (* src = "SPI_Slave.v:41.11-41.17" *)
  wire sclk_b;
  iv1v0x05 _079_ (
    .a(rst_n),
    .z(_058_)
  );
  nd3abv0x05 _080_ (
    .a(sampl_num[1]),
    .b(sampl_num[0]),
    .c(sampl_num[3]),
    .z(_059_)
  );
  nr2v0x05 _081_ (
    .a(sampl_num[2]),
    .b(_059_),
    .z(data_valid)
  );
  nr2av0x1 _082_ (
    .a(data_reg[7]),
    .b(cs_n),
    .z(miso)
  );
  nd2av0x05 _083_ (
    .a(cs_n_a),
    .b(rst_n),
    .z(_000_)
  );
  nd2av0x05 _084_ (
    .a(cs_n),
    .b(rst_n),
    .z(_021_)
  );
  nr3av0x05 _085_ (
    .a(sclk_a),
    .b(sclk_b),
    .c(cs_n),
    .z(_060_)
  );
  xnr2v0x05 _086_ (
    .a(sampl_num[0]),
    .b(_060_),
    .z(_061_)
  );
  nr2v0x05 _087_ (
    .a(_021_),
    .b(_061_),
    .z(_001_)
  );
  an2v0x05 _088_ (
    .a(sampl_num[1]),
    .b(sampl_num[0]),
    .z(_062_)
  );
  xaoi21v0x05 _089_ (
    .a1(sampl_num[0]),
    .a2(_060_),
    .b(sampl_num[1]),
    .z(_063_)
  );
  nr2v0x05 _090_ (
    .a(_021_),
    .b(_063_),
    .z(_002_)
  );
  nd3v0x05 _091_ (
    .a(sampl_num[2]),
    .b(_060_),
    .c(_062_),
    .z(_064_)
  );
  aoi21v0x05 _092_ (
    .a1(_060_),
    .a2(_062_),
    .b(sampl_num[2]),
    .z(_065_)
  );
  nr3av0x05 _093_ (
    .a(_064_),
    .b(_065_),
    .c(_021_),
    .z(_003_)
  );
  an4v0x05 _094_ (
    .a(sampl_num[3]),
    .b(sampl_num[2]),
    .c(_060_),
    .d(_062_),
    .z(_066_)
  );
  aoi31v0x05 _095_ (
    .a1(sampl_num[2]),
    .a2(_060_),
    .a3(_062_),
    .b(sampl_num[3]),
    .z(_067_)
  );
  nr3av0x05 _096_ (
    .a(_060_),
    .b(sampl_num[2]),
    .c(_059_),
    .z(_068_)
  );
  nr4v1x05 _097_ (
    .a(_021_),
    .b(_066_),
    .c(_067_),
    .d(_068_),
    .z(_004_)
  );
  mxi2v0x05 _098_ (
    .a0(data_out[0]),
    .a1(mosi),
    .s(_060_),
    .z(_069_)
  );
  nr2v0x05 _099_ (
    .a(_058_),
    .b(_069_),
    .z(_005_)
  );
  mxi2v0x05 _100_ (
    .a0(data_out[1]),
    .a1(data_out[0]),
    .s(_060_),
    .z(_070_)
  );
  nr2v0x05 _101_ (
    .a(_058_),
    .b(_070_),
    .z(_006_)
  );
  mxi2v0x05 _102_ (
    .a0(data_out[2]),
    .a1(data_out[1]),
    .s(_060_),
    .z(_071_)
  );
  nr2v0x05 _103_ (
    .a(_058_),
    .b(_071_),
    .z(_007_)
  );
  mxi2v0x05 _104_ (
    .a0(data_out[3]),
    .a1(data_out[2]),
    .s(_060_),
    .z(_072_)
  );
  nr2v0x05 _105_ (
    .a(_058_),
    .b(_072_),
    .z(_008_)
  );
  mxi2v0x05 _106_ (
    .a0(data_out[4]),
    .a1(data_out[3]),
    .s(_060_),
    .z(_073_)
  );
  nr2v0x05 _107_ (
    .a(_058_),
    .b(_073_),
    .z(_009_)
  );
  mxi2v0x05 _108_ (
    .a0(data_out[5]),
    .a1(data_out[4]),
    .s(_060_),
    .z(_074_)
  );
  nr2v0x05 _109_ (
    .a(_058_),
    .b(_074_),
    .z(_010_)
  );
  mxi2v0x05 _110_ (
    .a0(data_out[6]),
    .a1(data_out[5]),
    .s(_060_),
    .z(_075_)
  );
  nr2v0x05 _111_ (
    .a(_058_),
    .b(_075_),
    .z(_011_)
  );
  mxi2v0x05 _112_ (
    .a0(data_out[7]),
    .a1(data_out[6]),
    .s(_060_),
    .z(_076_)
  );
  nr2v0x05 _113_ (
    .a(_058_),
    .b(_076_),
    .z(_012_)
  );
  nr2av0x1 _114_ (
    .a(cs_n_b),
    .b(cs_n_a),
    .z(_077_)
  );
  nd2av0x05 _115_ (
    .a(cs_n_a),
    .b(cs_n_b),
    .z(_078_)
  );
  nr3av0x05 _116_ (
    .a(sclk_b),
    .b(cs_n),
    .c(sclk_a),
    .z(_024_)
  );
  nd3abv0x05 _117_ (
    .a(sclk_a),
    .b(cs_n),
    .c(sclk_b),
    .z(_025_)
  );
  nd3v0x05 _118_ (
    .a(data_reg[0]),
    .b(_078_),
    .c(_025_),
    .z(_026_)
  );
  nd2v0x05 _119_ (
    .a(data_in[0]),
    .b(_077_),
    .z(_027_)
  );
  aoi21v0x05 _120_ (
    .a1(_026_),
    .a2(_027_),
    .b(_058_),
    .z(_013_)
  );
  aoi21a2bv0x05 _121_ (
    .a1(cs_n_b),
    .a2(cs_n_a),
    .b(data_reg[0]),
    .z(_028_)
  );
  nr3abv0x05 _122_ (
    .a(cs_n_b),
    .b(data_in[1]),
    .c(cs_n_a),
    .z(_029_)
  );
  oai22v0x05 _123_ (
    .a1(_077_),
    .a2(_024_),
    .b1(_028_),
    .b2(_029_),
    .z(_030_)
  );
  nd3v0x05 _124_ (
    .a(data_reg[1]),
    .b(_078_),
    .c(_025_),
    .z(_031_)
  );
  aoi21v0x05 _125_ (
    .a1(_030_),
    .a2(_031_),
    .b(_058_),
    .z(_014_)
  );
  aoi21a2bv0x05 _126_ (
    .a1(cs_n_b),
    .a2(cs_n_a),
    .b(data_reg[1]),
    .z(_032_)
  );
  nr3abv0x05 _127_ (
    .a(cs_n_b),
    .b(data_in[2]),
    .c(cs_n_a),
    .z(_033_)
  );
  oai22v0x05 _128_ (
    .a1(_077_),
    .a2(_024_),
    .b1(_032_),
    .b2(_033_),
    .z(_034_)
  );
  nd3v0x05 _129_ (
    .a(data_reg[2]),
    .b(_078_),
    .c(_025_),
    .z(_035_)
  );
  aoi21v0x05 _130_ (
    .a1(_034_),
    .a2(_035_),
    .b(_058_),
    .z(_015_)
  );
  aoi21a2bv0x05 _131_ (
    .a1(cs_n_b),
    .a2(cs_n_a),
    .b(data_reg[2]),
    .z(_036_)
  );
  nr3abv0x05 _132_ (
    .a(cs_n_b),
    .b(data_in[3]),
    .c(cs_n_a),
    .z(_037_)
  );
  oai22v0x05 _133_ (
    .a1(_077_),
    .a2(_024_),
    .b1(_036_),
    .b2(_037_),
    .z(_038_)
  );
  nd3v0x05 _134_ (
    .a(data_reg[3]),
    .b(_078_),
    .c(_025_),
    .z(_039_)
  );
  aoi21v0x05 _135_ (
    .a1(_038_),
    .a2(_039_),
    .b(_058_),
    .z(_016_)
  );
  aoi21a2bv0x05 _136_ (
    .a1(cs_n_b),
    .a2(cs_n_a),
    .b(data_reg[3]),
    .z(_040_)
  );
  nr3abv0x05 _137_ (
    .a(cs_n_b),
    .b(data_in[4]),
    .c(cs_n_a),
    .z(_041_)
  );
  oai22v0x05 _138_ (
    .a1(_077_),
    .a2(_024_),
    .b1(_040_),
    .b2(_041_),
    .z(_042_)
  );
  nd3v0x05 _139_ (
    .a(data_reg[4]),
    .b(_078_),
    .c(_025_),
    .z(_043_)
  );
  aoi21v0x05 _140_ (
    .a1(_042_),
    .a2(_043_),
    .b(_058_),
    .z(_017_)
  );
  aoi21a2bv0x05 _141_ (
    .a1(cs_n_b),
    .a2(cs_n_a),
    .b(data_reg[4]),
    .z(_044_)
  );
  nr3abv0x05 _142_ (
    .a(cs_n_b),
    .b(data_in[5]),
    .c(cs_n_a),
    .z(_045_)
  );
  oai22v0x05 _143_ (
    .a1(_077_),
    .a2(_024_),
    .b1(_044_),
    .b2(_045_),
    .z(_046_)
  );
  nd3v0x05 _144_ (
    .a(data_reg[5]),
    .b(_078_),
    .c(_025_),
    .z(_047_)
  );
  aoi21v0x05 _145_ (
    .a1(_046_),
    .a2(_047_),
    .b(_058_),
    .z(_018_)
  );
  aoi21a2bv0x05 _146_ (
    .a1(cs_n_b),
    .a2(cs_n_a),
    .b(data_reg[5]),
    .z(_048_)
  );
  nr3abv0x05 _147_ (
    .a(cs_n_b),
    .b(data_in[6]),
    .c(cs_n_a),
    .z(_049_)
  );
  oai22v0x05 _148_ (
    .a1(_077_),
    .a2(_024_),
    .b1(_048_),
    .b2(_049_),
    .z(_050_)
  );
  nd3v0x05 _149_ (
    .a(data_reg[6]),
    .b(_078_),
    .c(_025_),
    .z(_051_)
  );
  aoi21v0x05 _150_ (
    .a1(_050_),
    .a2(_051_),
    .b(_058_),
    .z(_019_)
  );
  aoi21a2bv0x05 _151_ (
    .a1(cs_n_b),
    .a2(cs_n_a),
    .b(data_reg[6]),
    .z(_052_)
  );
  nr3abv0x05 _152_ (
    .a(cs_n_b),
    .b(data_in[7]),
    .c(cs_n_a),
    .z(_053_)
  );
  oai22v0x05 _153_ (
    .a1(_077_),
    .a2(_024_),
    .b1(_052_),
    .b2(_053_),
    .z(_054_)
  );
  nd3v0x05 _154_ (
    .a(data_reg[7]),
    .b(_078_),
    .c(_025_),
    .z(_055_)
  );
  aoi21v0x05 _155_ (
    .a1(_054_),
    .a2(_055_),
    .b(_058_),
    .z(_020_)
  );
  mxi2v0x05 _156_ (
    .a0(sclk),
    .a1(sclk_a),
    .s(cs_n),
    .z(_056_)
  );
  nr2v0x05 _157_ (
    .a(_058_),
    .b(_056_),
    .z(_022_)
  );
  mxi2v0x05 _158_ (
    .a0(sclk_a),
    .a1(sclk_b),
    .s(cs_n),
    .z(_057_)
  );
  nr2v0x05 _159_ (
    .a(_058_),
    .b(_057_),
    .z(_023_)
  );
  (* src = "SPI_Slave.v:65.1-73.4" *)
  dfnt1v0x2 _160_ (
    .cp(clk),
    .d(_000_),
    .z(cs_n_b)
  );
  (* src = "SPI_Slave.v:120.1-132.4" *)
  dfnt1v0x2 _161_ (
    .cp(clk),
    .d(_001_),
    .z(sampl_num[0])
  );
  (* src = "SPI_Slave.v:120.1-132.4" *)
  dfnt1v0x2 _162_ (
    .cp(clk),
    .d(_002_),
    .z(sampl_num[1])
  );
  (* src = "SPI_Slave.v:120.1-132.4" *)
  dfnt1v0x2 _163_ (
    .cp(clk),
    .d(_003_),
    .z(sampl_num[2])
  );
  (* src = "SPI_Slave.v:120.1-132.4" *)
  dfnt1v0x2 _164_ (
    .cp(clk),
    .d(_004_),
    .z(sampl_num[3])
  );
  (* src = "SPI_Slave.v:111.1-118.4" *)
  dfnt1v0x2 _165_ (
    .cp(clk),
    .d(_005_),
    .z(data_out[0])
  );
  (* src = "SPI_Slave.v:111.1-118.4" *)
  dfnt1v0x2 _166_ (
    .cp(clk),
    .d(_006_),
    .z(data_out[1])
  );
  (* src = "SPI_Slave.v:111.1-118.4" *)
  dfnt1v0x2 _167_ (
    .cp(clk),
    .d(_007_),
    .z(data_out[2])
  );
  (* src = "SPI_Slave.v:111.1-118.4" *)
  dfnt1v0x2 _168_ (
    .cp(clk),
    .d(_008_),
    .z(data_out[3])
  );
  (* src = "SPI_Slave.v:111.1-118.4" *)
  dfnt1v0x2 _169_ (
    .cp(clk),
    .d(_009_),
    .z(data_out[4])
  );
  (* src = "SPI_Slave.v:111.1-118.4" *)
  dfnt1v0x2 _170_ (
    .cp(clk),
    .d(_010_),
    .z(data_out[5])
  );
  (* src = "SPI_Slave.v:111.1-118.4" *)
  dfnt1v0x2 _171_ (
    .cp(clk),
    .d(_011_),
    .z(data_out[6])
  );
  (* src = "SPI_Slave.v:111.1-118.4" *)
  dfnt1v0x2 _172_ (
    .cp(clk),
    .d(_012_),
    .z(data_out[7])
  );
  (* src = "SPI_Slave.v:97.1-106.4" *)
  dfnt1v0x2 _173_ (
    .cp(clk),
    .d(_013_),
    .z(data_reg[0])
  );
  (* src = "SPI_Slave.v:97.1-106.4" *)
  dfnt1v0x2 _174_ (
    .cp(clk),
    .d(_014_),
    .z(data_reg[1])
  );
  (* src = "SPI_Slave.v:97.1-106.4" *)
  dfnt1v0x2 _175_ (
    .cp(clk),
    .d(_015_),
    .z(data_reg[2])
  );
  (* src = "SPI_Slave.v:97.1-106.4" *)
  dfnt1v0x2 _176_ (
    .cp(clk),
    .d(_016_),
    .z(data_reg[3])
  );
  (* src = "SPI_Slave.v:97.1-106.4" *)
  dfnt1v0x2 _177_ (
    .cp(clk),
    .d(_017_),
    .z(data_reg[4])
  );
  (* src = "SPI_Slave.v:97.1-106.4" *)
  dfnt1v0x2 _178_ (
    .cp(clk),
    .d(_018_),
    .z(data_reg[5])
  );
  (* src = "SPI_Slave.v:97.1-106.4" *)
  dfnt1v0x2 _179_ (
    .cp(clk),
    .d(_019_),
    .z(data_reg[6])
  );
  (* src = "SPI_Slave.v:97.1-106.4" *)
  dfnt1v0x2 _180_ (
    .cp(clk),
    .d(_020_),
    .z(data_reg[7])
  );
  (* src = "SPI_Slave.v:65.1-73.4" *)
  dfnt1v0x2 _181_ (
    .cp(clk),
    .d(_021_),
    .z(cs_n_a)
  );
  (* src = "SPI_Slave.v:51.1-59.4" *)
  dfnt1v0x2 _182_ (
    .cp(clk),
    .d(_022_),
    .z(sclk_a)
  );
  (* src = "SPI_Slave.v:51.1-59.4" *)
  dfnt1v0x2 _183_ (
    .cp(clk),
    .d(_023_),
    .z(sclk_b)
  );
endmodule

(* dynports =  1  *)
(* hdlname = "\\spi_master" *)
(* src = "SPI_Master.v:16.1-205.10" *)
module \$paramod$edee9027fc73b27c93ba6efadc4faa1987d2455b\spi_master (clk, rst_n, data_in, start, miso, sclk, cs_n, mosi, finish, data_out);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  (* src = "SPI_Master.v:25.15-25.18" *)
  input clk;
  wire clk;
  (* src = "SPI_Master.v:55.23-55.30" *)
  wire [3:0] clk_cnt;
  (* src = "SPI_Master.v:48.11-48.21" *)
  wire clk_cnt_en;
  (* src = "SPI_Master.v:31.19-31.23" *)
  output cs_n;
  wire cs_n;
  (* onehot = 32'd1 *)
  wire [3:0] cstate;
  (* src = "SPI_Master.v:27.27-27.34" *)
  input [7:0] data_in;
  wire [7:0] data_in;
  (* src = "SPI_Master.v:34.31-34.39" *)
  output [7:0] data_out;
  wire [7:0] data_out;
  (* src = "SPI_Master.v:57.23-57.31" *)
  wire [7:0] data_reg;
  (* src = "SPI_Master.v:33.19-33.25" *)
  output finish;
  wire finish;
  (* src = "SPI_Master.v:29.15-29.19" *)
  input miso;
  wire miso;
  (* src = "SPI_Master.v:32.16-32.20" *)
  output mosi;
  wire mosi;
  (* src = "SPI_Master.v:26.15-26.20" *)
  input rst_n;
  wire rst_n;
  (* src = "SPI_Master.v:30.19-30.23" *)
  output sclk;
  wire sclk;
  (* src = "SPI_Master.v:49.11-49.17" *)
  wire sclk_a;
  (* src = "SPI_Master.v:50.11-50.17" *)
  wire sclk_b;
  (* src = "SPI_Master.v:56.24-56.33" *)
  wire [3:0] shift_cnt;
  (* src = "SPI_Master.v:28.15-28.20" *)
  input start;
  wire start;
  iv1v0x05 _096_ (
    .a(shift_cnt[2]),
    .z(_081_)
  );
  iv1v0x05 _097_ (
    .a(shift_cnt[0]),
    .z(_082_)
  );
  iv1v0x05 _098_ (
    .a(rst_n),
    .z(_083_)
  );
  or2v0x05 _099_ (
    .a(shift_cnt[1]),
    .b(shift_cnt[0]),
    .z(_084_)
  );
  nr3av0x05 _100_ (
    .a(shift_cnt[3]),
    .b(shift_cnt[1]),
    .c(shift_cnt[0]),
    .z(_085_)
  );
  aoi21bv0x05 _101_ (
    .a1(_081_),
    .a2(_085_),
    .b(cstate[2]),
    .z(_086_)
  );
  or2v0x05 _102_ (
    .a(cstate[3]),
    .b(_086_),
    .z(_087_)
  );
  an2v0x05 _103_ (
    .a(rst_n),
    .b(_087_),
    .z(_003_)
  );
  aoi21a2v0x05 _104_ (
    .a1(cstate[0]),
    .a2(start),
    .b(cstate[1]),
    .z(_088_)
  );
  nd2v0x05 _105_ (
    .a(rst_n),
    .b(_088_),
    .z(_002_)
  );
  an2v0x05 _106_ (
    .a(cstate[0]),
    .b(start),
    .z(_089_)
  );
  nd2v0x05 _107_ (
    .a(cstate[0]),
    .b(start),
    .z(_090_)
  );
  nr2v0x05 _108_ (
    .a(_083_),
    .b(_090_),
    .z(_001_)
  );
  an4v0x05 _109_ (
    .a(_081_),
    .b(rst_n),
    .c(cstate[2]),
    .d(_085_),
    .z(_000_)
  );
  nd2av0x05 _110_ (
    .a(sclk_b),
    .b(sclk_a),
    .z(_091_)
  );
  mxi2v0x05 _111_ (
    .a0(miso),
    .a1(data_out[0]),
    .s(_091_),
    .z(_092_)
  );
  nr2v0x05 _112_ (
    .a(_083_),
    .b(_092_),
    .z(_004_)
  );
  mxi2v0x05 _113_ (
    .a0(data_out[0]),
    .a1(data_out[1]),
    .s(_091_),
    .z(_093_)
  );
  nr2v0x05 _114_ (
    .a(_083_),
    .b(_093_),
    .z(_005_)
  );
  mxi2v0x05 _115_ (
    .a0(data_out[1]),
    .a1(data_out[2]),
    .s(_091_),
    .z(_094_)
  );
  nr2v0x05 _116_ (
    .a(_083_),
    .b(_094_),
    .z(_006_)
  );
  mxi2v0x05 _117_ (
    .a0(data_out[2]),
    .a1(data_out[3]),
    .s(_091_),
    .z(_095_)
  );
  nr2v0x05 _118_ (
    .a(_083_),
    .b(_095_),
    .z(_007_)
  );
  mxi2v0x05 _119_ (
    .a0(data_out[3]),
    .a1(data_out[4]),
    .s(_091_),
    .z(_034_)
  );
  nr2v0x05 _120_ (
    .a(_083_),
    .b(_034_),
    .z(_008_)
  );
  mxi2v0x05 _121_ (
    .a0(data_out[4]),
    .a1(data_out[5]),
    .s(_091_),
    .z(_035_)
  );
  nr2v0x05 _122_ (
    .a(_083_),
    .b(_035_),
    .z(_009_)
  );
  mxi2v0x05 _123_ (
    .a0(data_out[5]),
    .a1(data_out[6]),
    .s(_091_),
    .z(_036_)
  );
  nr2v0x05 _124_ (
    .a(_083_),
    .b(_036_),
    .z(_010_)
  );
  mxi2v0x05 _125_ (
    .a0(data_out[6]),
    .a1(data_out[7]),
    .s(_091_),
    .z(_037_)
  );
  nr2v0x05 _126_ (
    .a(_083_),
    .b(_037_),
    .z(_011_)
  );
  or2v0x05 _127_ (
    .a(cstate[3]),
    .b(cstate[2]),
    .z(_038_)
  );
  nr2v0x05 _128_ (
    .a(_090_),
    .b(_038_),
    .z(_039_)
  );
  aoi31v0x05 _129_ (
    .a1(_081_),
    .a2(cstate[2]),
    .a3(_085_),
    .b(_089_),
    .z(_040_)
  );
  oan21v0x05 _130_ (
    .a1(cstate[3]),
    .a2(_086_),
    .b(_040_),
    .z(_041_)
  );
  oan21bv0x05 _131_ (
    .a1(_039_),
    .a2(_041_),
    .b(_083_),
    .z(_029_)
  );
  iv1v0x05 _132_ (
    .a(_029_),
    .z(_012_)
  );
  nr3abv0x05 _133_ (
    .a(_090_),
    .b(_000_),
    .c(_087_),
    .z(_013_)
  );
  nr2av0x1 _134_ (
    .a(sclk_b),
    .b(sclk_a),
    .z(_042_)
  );
  nd2av0x05 _135_ (
    .a(sclk_a),
    .b(sclk_b),
    .z(_043_)
  );
  oai211v0x05 _136_ (
    .a1(cstate[3]),
    .a2(_086_),
    .b(_040_),
    .c(_042_),
    .z(_044_)
  );
  aoi21v0x05 _137_ (
    .a1(_038_),
    .a2(_044_),
    .b(_082_),
    .z(_045_)
  );
  aoi112v0x05 _138_ (
    .a(_083_),
    .b(_045_),
    .c1(_044_),
    .c2(_082_),
    .z(_014_)
  );
  nd3v0x05 _139_ (
    .a(shift_cnt[1]),
    .b(_038_),
    .c(_044_),
    .z(_046_)
  );
  an2v0x05 _140_ (
    .a(shift_cnt[1]),
    .b(shift_cnt[0]),
    .z(_047_)
  );
  nd3abv0x05 _141_ (
    .a(_044_),
    .b(_047_),
    .c(_084_),
    .z(_048_)
  );
  aoi21v0x05 _142_ (
    .a1(_046_),
    .a2(_048_),
    .b(_083_),
    .z(_015_)
  );
  aon21bv0x05 _143_ (
    .a1(_038_),
    .a2(_044_),
    .b(_047_),
    .z(_049_)
  );
  nd2v0x05 _144_ (
    .a(shift_cnt[2]),
    .b(_047_),
    .z(_050_)
  );
  aoi22v0x05 _145_ (
    .a1(_038_),
    .a2(_044_),
    .b1(_050_),
    .b2(_041_),
    .z(_051_)
  );
  aoi112v0x05 _146_ (
    .a(_083_),
    .b(_051_),
    .c1(_049_),
    .c2(_081_),
    .z(_016_)
  );
  oan21bv0x05 _147_ (
    .a1(_044_),
    .a2(_050_),
    .b(shift_cnt[3]),
    .z(_052_)
  );
  aoi112v0x05 _148_ (
    .a(_083_),
    .b(_052_),
    .c1(_051_),
    .c2(shift_cnt[3]),
    .z(_017_)
  );
  oai211v0x05 _149_ (
    .a1(cstate[3]),
    .a2(_086_),
    .b(_040_),
    .c(_043_),
    .z(_053_)
  );
  nd3v0x05 _150_ (
    .a(data_reg[0]),
    .b(_041_),
    .c(_043_),
    .z(_054_)
  );
  nd2v0x05 _151_ (
    .a(data_in[0]),
    .b(_039_),
    .z(_055_)
  );
  aoi21v0x05 _152_ (
    .a1(_054_),
    .a2(_055_),
    .b(_083_),
    .z(_018_)
  );
  aoi22v0x05 _153_ (
    .a1(data_in[1]),
    .a2(_039_),
    .b1(_041_),
    .b2(data_reg[0]),
    .z(_056_)
  );
  oai21v0x05 _154_ (
    .a1(data_reg[1]),
    .a2(_053_),
    .b(rst_n),
    .z(_057_)
  );
  aoi21v0x05 _155_ (
    .a1(_053_),
    .a2(_056_),
    .b(_057_),
    .z(_019_)
  );
  aoi22v0x05 _156_ (
    .a1(data_in[2]),
    .a2(_039_),
    .b1(_041_),
    .b2(data_reg[1]),
    .z(_058_)
  );
  oai21v0x05 _157_ (
    .a1(data_reg[2]),
    .a2(_053_),
    .b(rst_n),
    .z(_059_)
  );
  aoi21v0x05 _158_ (
    .a1(_053_),
    .a2(_058_),
    .b(_059_),
    .z(_020_)
  );
  aoi22v0x05 _159_ (
    .a1(data_in[3]),
    .a2(_039_),
    .b1(_041_),
    .b2(data_reg[2]),
    .z(_060_)
  );
  oai21v0x05 _160_ (
    .a1(data_reg[3]),
    .a2(_053_),
    .b(rst_n),
    .z(_061_)
  );
  aoi21v0x05 _161_ (
    .a1(_053_),
    .a2(_060_),
    .b(_061_),
    .z(_021_)
  );
  aoi22v0x05 _162_ (
    .a1(data_in[4]),
    .a2(_039_),
    .b1(_041_),
    .b2(data_reg[3]),
    .z(_062_)
  );
  oai21v0x05 _163_ (
    .a1(data_reg[4]),
    .a2(_053_),
    .b(rst_n),
    .z(_063_)
  );
  aoi21v0x05 _164_ (
    .a1(_053_),
    .a2(_062_),
    .b(_063_),
    .z(_022_)
  );
  aoi22v0x05 _165_ (
    .a1(data_in[5]),
    .a2(_039_),
    .b1(_041_),
    .b2(data_reg[4]),
    .z(_064_)
  );
  oai21v0x05 _166_ (
    .a1(data_reg[5]),
    .a2(_053_),
    .b(rst_n),
    .z(_065_)
  );
  aoi21v0x05 _167_ (
    .a1(_053_),
    .a2(_064_),
    .b(_065_),
    .z(_023_)
  );
  aoi22v0x05 _168_ (
    .a1(data_in[6]),
    .a2(_039_),
    .b1(_041_),
    .b2(data_reg[5]),
    .z(_066_)
  );
  oai21v0x05 _169_ (
    .a1(data_reg[6]),
    .a2(_053_),
    .b(rst_n),
    .z(_067_)
  );
  aoi21v0x05 _170_ (
    .a1(_053_),
    .a2(_066_),
    .b(_067_),
    .z(_024_)
  );
  aoi22v0x05 _171_ (
    .a1(data_in[7]),
    .a2(_039_),
    .b1(_041_),
    .b2(data_reg[6]),
    .z(_068_)
  );
  oai21v0x05 _172_ (
    .a1(data_reg[7]),
    .a2(_053_),
    .b(rst_n),
    .z(_069_)
  );
  aoi21v0x05 _173_ (
    .a1(_053_),
    .a2(_068_),
    .b(_069_),
    .z(_025_)
  );
  mxi2v0x05 _174_ (
    .a0(sclk_a),
    .a1(sclk),
    .s(clk_cnt_en),
    .z(_070_)
  );
  nr2v0x05 _175_ (
    .a(_083_),
    .b(_070_),
    .z(_026_)
  );
  mxi2v0x05 _176_ (
    .a0(sclk_b),
    .a1(sclk_a),
    .s(clk_cnt_en),
    .z(_071_)
  );
  nr2v0x05 _177_ (
    .a(_083_),
    .b(_071_),
    .z(_027_)
  );
  nd2v0x05 _178_ (
    .a(clk_cnt_en),
    .b(rst_n),
    .z(_072_)
  );
  nd2av0x05 _179_ (
    .a(clk_cnt[1]),
    .b(clk_cnt[0]),
    .z(_073_)
  );
  nd3abv0x05 _180_ (
    .a(_073_),
    .b(clk_cnt[2]),
    .c(clk_cnt[3]),
    .z(_074_)
  );
  xor2v0x05 _181_ (
    .a(sclk),
    .b(_074_),
    .z(_075_)
  );
  nr2v0x05 _182_ (
    .a(_072_),
    .b(_075_),
    .z(_028_)
  );
  nd2av0x05 _183_ (
    .a(_072_),
    .b(_074_),
    .z(_076_)
  );
  nr2v0x05 _184_ (
    .a(clk_cnt[0]),
    .b(_072_),
    .z(_030_)
  );
  nd2av0x05 _185_ (
    .a(clk_cnt[0]),
    .b(clk_cnt[1]),
    .z(_077_)
  );
  aoi21v0x05 _186_ (
    .a1(_073_),
    .a2(_077_),
    .b(_076_),
    .z(_031_)
  );
  aoi21v0x05 _187_ (
    .a1(clk_cnt[0]),
    .a2(clk_cnt[1]),
    .b(clk_cnt[2]),
    .z(_078_)
  );
  nd3v0x05 _188_ (
    .a(clk_cnt[0]),
    .b(clk_cnt[1]),
    .c(clk_cnt[2]),
    .z(_079_)
  );
  nr3av0x05 _189_ (
    .a(_079_),
    .b(_076_),
    .c(_078_),
    .z(_032_)
  );
  xor2v0x05 _190_ (
    .a(clk_cnt[3]),
    .b(_079_),
    .z(_080_)
  );
  nr2v0x05 _191_ (
    .a(_076_),
    .b(_080_),
    .z(_033_)
  );
  dfnt1v0x2 _192_ (
    .cp(clk),
    .d(_002_),
    .z(cstate[0])
  );
  dfnt1v0x2 _193_ (
    .cp(clk),
    .d(_000_),
    .z(cstate[1])
  );
  dfnt1v0x2 _194_ (
    .cp(clk),
    .d(_003_),
    .z(cstate[2])
  );
  dfnt1v0x2 _195_ (
    .cp(clk),
    .d(_001_),
    .z(cstate[3])
  );
  (* src = "SPI_Master.v:188.1-195.4" *)
  dfnt1v0x2 _196_ (
    .cp(clk),
    .d(_004_),
    .z(data_out[0])
  );
  (* src = "SPI_Master.v:188.1-195.4" *)
  dfnt1v0x2 _197_ (
    .cp(clk),
    .d(_005_),
    .z(data_out[1])
  );
  (* src = "SPI_Master.v:188.1-195.4" *)
  dfnt1v0x2 _198_ (
    .cp(clk),
    .d(_006_),
    .z(data_out[2])
  );
  (* src = "SPI_Master.v:188.1-195.4" *)
  dfnt1v0x2 _199_ (
    .cp(clk),
    .d(_007_),
    .z(data_out[3])
  );
  (* src = "SPI_Master.v:188.1-195.4" *)
  dfnt1v0x2 _200_ (
    .cp(clk),
    .d(_008_),
    .z(data_out[4])
  );
  (* src = "SPI_Master.v:188.1-195.4" *)
  dfnt1v0x2 _201_ (
    .cp(clk),
    .d(_009_),
    .z(data_out[5])
  );
  (* src = "SPI_Master.v:188.1-195.4" *)
  dfnt1v0x2 _202_ (
    .cp(clk),
    .d(_010_),
    .z(data_out[6])
  );
  (* src = "SPI_Master.v:188.1-195.4" *)
  dfnt1v0x2 _203_ (
    .cp(clk),
    .d(_011_),
    .z(data_out[7])
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _204_ (
    .cp(clk),
    .d(_012_),
    .z(cs_n)
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _205_ (
    .cp(clk),
    .d(_013_),
    .z(finish)
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _206_ (
    .cp(clk),
    .d(_014_),
    .z(shift_cnt[0])
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _207_ (
    .cp(clk),
    .d(_015_),
    .z(shift_cnt[1])
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _208_ (
    .cp(clk),
    .d(_016_),
    .z(shift_cnt[2])
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _209_ (
    .cp(clk),
    .d(_017_),
    .z(shift_cnt[3])
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _210_ (
    .cp(clk),
    .d(_018_),
    .z(data_reg[0])
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _211_ (
    .cp(clk),
    .d(_019_),
    .z(data_reg[1])
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _212_ (
    .cp(clk),
    .d(_020_),
    .z(data_reg[2])
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _213_ (
    .cp(clk),
    .d(_021_),
    .z(data_reg[3])
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _214_ (
    .cp(clk),
    .d(_022_),
    .z(data_reg[4])
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _215_ (
    .cp(clk),
    .d(_023_),
    .z(data_reg[5])
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _216_ (
    .cp(clk),
    .d(_024_),
    .z(data_reg[6])
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _217_ (
    .cp(clk),
    .d(_025_),
    .z(data_reg[7])
  );
  (* src = "SPI_Master.v:84.1-92.4" *)
  dfnt1v0x2 _218_ (
    .cp(clk),
    .d(_026_),
    .z(sclk_a)
  );
  (* src = "SPI_Master.v:84.1-92.4" *)
  dfnt1v0x2 _219_ (
    .cp(clk),
    .d(_027_),
    .z(sclk_b)
  );
  (* src = "SPI_Master.v:71.1-81.4" *)
  dfnt1v0x2 _220_ (
    .cp(clk),
    .d(_028_),
    .z(sclk)
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _221_ (
    .cp(clk),
    .d(_029_),
    .z(clk_cnt_en)
  );
  (* src = "SPI_Master.v:59.1-69.4" *)
  dfnt1v0x2 _222_ (
    .cp(clk),
    .d(_030_),
    .z(clk_cnt[0])
  );
  (* src = "SPI_Master.v:59.1-69.4" *)
  dfnt1v0x2 _223_ (
    .cp(clk),
    .d(_031_),
    .z(clk_cnt[1])
  );
  (* src = "SPI_Master.v:59.1-69.4" *)
  dfnt1v0x2 _224_ (
    .cp(clk),
    .d(_032_),
    .z(clk_cnt[2])
  );
  (* src = "SPI_Master.v:59.1-69.4" *)
  dfnt1v0x2 _225_ (
    .cp(clk),
    .d(_033_),
    .z(clk_cnt[3])
  );
  assign mosi = data_reg[7];
endmodule

(* dynports =  1  *)
(* src = "SPI_Slave.v:16.1-144.10" *)
module SPI_Slave(clk, rst_n, data_in, sclk, cs_n, mosi, miso, data_valid, data_out);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  (* src = "SPI_Slave.v:25.15-25.18" *)
  input clk;
  wire clk;
  (* src = "SPI_Slave.v:29.15-29.19" *)
  input cs_n;
  wire cs_n;
  (* src = "SPI_Slave.v:44.11-44.17" *)
  wire cs_n_a;
  (* src = "SPI_Slave.v:45.11-45.17" *)
  wire cs_n_b;
  (* src = "SPI_Slave.v:27.27-27.34" *)
  input [7:0] data_in;
  wire [7:0] data_in;
  (* src = "SPI_Slave.v:33.31-33.39" *)
  output [7:0] data_out;
  wire [7:0] data_out;
  (* src = "SPI_Slave.v:38.23-38.31" *)
  wire [7:0] data_reg;
  (* src = "SPI_Slave.v:32.16-32.26" *)
  output data_valid;
  wire data_valid;
  (* src = "SPI_Slave.v:31.16-31.20" *)
  output miso;
  wire miso;
  (* src = "SPI_Slave.v:30.15-30.19" *)
  input mosi;
  wire mosi;
  (* src = "SPI_Slave.v:26.15-26.20" *)
  input rst_n;
  wire rst_n;
  (* src = "SPI_Slave.v:39.23-39.32" *)
  wire [3:0] sampl_num;
  (* src = "SPI_Slave.v:28.15-28.19" *)
  input sclk;
  wire sclk;
  (* src = "SPI_Slave.v:40.11-40.17" *)
  wire sclk_a;
  (* src = "SPI_Slave.v:41.11-41.17" *)
  wire sclk_b;
  iv1v0x05 _079_ (
    .a(rst_n),
    .z(_058_)
  );
  nd3abv0x05 _080_ (
    .a(sampl_num[1]),
    .b(sampl_num[0]),
    .c(sampl_num[3]),
    .z(_059_)
  );
  nr2v0x05 _081_ (
    .a(sampl_num[2]),
    .b(_059_),
    .z(data_valid)
  );
  nr2av0x1 _082_ (
    .a(data_reg[7]),
    .b(cs_n),
    .z(miso)
  );
  nd2av0x05 _083_ (
    .a(cs_n_a),
    .b(rst_n),
    .z(_000_)
  );
  nd2av0x05 _084_ (
    .a(cs_n),
    .b(rst_n),
    .z(_021_)
  );
  nr3av0x05 _085_ (
    .a(sclk_b),
    .b(cs_n),
    .c(sclk_a),
    .z(_060_)
  );
  xnr2v0x05 _086_ (
    .a(sampl_num[0]),
    .b(_060_),
    .z(_061_)
  );
  nr2v0x05 _087_ (
    .a(_021_),
    .b(_061_),
    .z(_001_)
  );
  an2v0x05 _088_ (
    .a(sampl_num[1]),
    .b(sampl_num[0]),
    .z(_062_)
  );
  xaoi21v0x05 _089_ (
    .a1(sampl_num[0]),
    .a2(_060_),
    .b(sampl_num[1]),
    .z(_063_)
  );
  nr2v0x05 _090_ (
    .a(_021_),
    .b(_063_),
    .z(_002_)
  );
  nd3v0x05 _091_ (
    .a(sampl_num[2]),
    .b(_060_),
    .c(_062_),
    .z(_064_)
  );
  aoi21v0x05 _092_ (
    .a1(_060_),
    .a2(_062_),
    .b(sampl_num[2]),
    .z(_065_)
  );
  nr3av0x05 _093_ (
    .a(_064_),
    .b(_065_),
    .c(_021_),
    .z(_003_)
  );
  an4v0x05 _094_ (
    .a(sampl_num[3]),
    .b(sampl_num[2]),
    .c(_060_),
    .d(_062_),
    .z(_066_)
  );
  aoi31v0x05 _095_ (
    .a1(sampl_num[2]),
    .a2(_060_),
    .a3(_062_),
    .b(sampl_num[3]),
    .z(_067_)
  );
  nr3av0x05 _096_ (
    .a(_060_),
    .b(sampl_num[2]),
    .c(_059_),
    .z(_068_)
  );
  nr4v1x05 _097_ (
    .a(_021_),
    .b(_066_),
    .c(_067_),
    .d(_068_),
    .z(_004_)
  );
  mxi2v0x05 _098_ (
    .a0(data_out[0]),
    .a1(mosi),
    .s(_060_),
    .z(_069_)
  );
  nr2v0x05 _099_ (
    .a(_058_),
    .b(_069_),
    .z(_005_)
  );
  mxi2v0x05 _100_ (
    .a0(data_out[1]),
    .a1(data_out[0]),
    .s(_060_),
    .z(_070_)
  );
  nr2v0x05 _101_ (
    .a(_058_),
    .b(_070_),
    .z(_006_)
  );
  mxi2v0x05 _102_ (
    .a0(data_out[2]),
    .a1(data_out[1]),
    .s(_060_),
    .z(_071_)
  );
  nr2v0x05 _103_ (
    .a(_058_),
    .b(_071_),
    .z(_007_)
  );
  mxi2v0x05 _104_ (
    .a0(data_out[3]),
    .a1(data_out[2]),
    .s(_060_),
    .z(_072_)
  );
  nr2v0x05 _105_ (
    .a(_058_),
    .b(_072_),
    .z(_008_)
  );
  mxi2v0x05 _106_ (
    .a0(data_out[4]),
    .a1(data_out[3]),
    .s(_060_),
    .z(_073_)
  );
  nr2v0x05 _107_ (
    .a(_058_),
    .b(_073_),
    .z(_009_)
  );
  mxi2v0x05 _108_ (
    .a0(data_out[5]),
    .a1(data_out[4]),
    .s(_060_),
    .z(_074_)
  );
  nr2v0x05 _109_ (
    .a(_058_),
    .b(_074_),
    .z(_010_)
  );
  mxi2v0x05 _110_ (
    .a0(data_out[6]),
    .a1(data_out[5]),
    .s(_060_),
    .z(_075_)
  );
  nr2v0x05 _111_ (
    .a(_058_),
    .b(_075_),
    .z(_011_)
  );
  mxi2v0x05 _112_ (
    .a0(data_out[7]),
    .a1(data_out[6]),
    .s(_060_),
    .z(_076_)
  );
  nr2v0x05 _113_ (
    .a(_058_),
    .b(_076_),
    .z(_012_)
  );
  nr2av0x1 _114_ (
    .a(cs_n_b),
    .b(cs_n_a),
    .z(_077_)
  );
  nd2av0x05 _115_ (
    .a(cs_n_a),
    .b(cs_n_b),
    .z(_078_)
  );
  nr3av0x05 _116_ (
    .a(sclk_a),
    .b(sclk_b),
    .c(cs_n),
    .z(_024_)
  );
  nd3abv0x05 _117_ (
    .a(sclk_b),
    .b(cs_n),
    .c(sclk_a),
    .z(_025_)
  );
  nd3v0x05 _118_ (
    .a(data_reg[0]),
    .b(_078_),
    .c(_025_),
    .z(_026_)
  );
  nd2v0x05 _119_ (
    .a(data_in[0]),
    .b(_077_),
    .z(_027_)
  );
  aoi21v0x05 _120_ (
    .a1(_026_),
    .a2(_027_),
    .b(_058_),
    .z(_013_)
  );
  aoi21a2bv0x05 _121_ (
    .a1(cs_n_b),
    .a2(cs_n_a),
    .b(data_reg[0]),
    .z(_028_)
  );
  nr3abv0x05 _122_ (
    .a(cs_n_b),
    .b(data_in[1]),
    .c(cs_n_a),
    .z(_029_)
  );
  oai22v0x05 _123_ (
    .a1(_077_),
    .a2(_024_),
    .b1(_028_),
    .b2(_029_),
    .z(_030_)
  );
  nd3v0x05 _124_ (
    .a(data_reg[1]),
    .b(_078_),
    .c(_025_),
    .z(_031_)
  );
  aoi21v0x05 _125_ (
    .a1(_030_),
    .a2(_031_),
    .b(_058_),
    .z(_014_)
  );
  aoi21a2bv0x05 _126_ (
    .a1(cs_n_b),
    .a2(cs_n_a),
    .b(data_reg[1]),
    .z(_032_)
  );
  nr3abv0x05 _127_ (
    .a(cs_n_b),
    .b(data_in[2]),
    .c(cs_n_a),
    .z(_033_)
  );
  oai22v0x05 _128_ (
    .a1(_077_),
    .a2(_024_),
    .b1(_032_),
    .b2(_033_),
    .z(_034_)
  );
  nd3v0x05 _129_ (
    .a(data_reg[2]),
    .b(_078_),
    .c(_025_),
    .z(_035_)
  );
  aoi21v0x05 _130_ (
    .a1(_034_),
    .a2(_035_),
    .b(_058_),
    .z(_015_)
  );
  aoi21a2bv0x05 _131_ (
    .a1(cs_n_b),
    .a2(cs_n_a),
    .b(data_reg[2]),
    .z(_036_)
  );
  nr3abv0x05 _132_ (
    .a(cs_n_b),
    .b(data_in[3]),
    .c(cs_n_a),
    .z(_037_)
  );
  oai22v0x05 _133_ (
    .a1(_077_),
    .a2(_024_),
    .b1(_036_),
    .b2(_037_),
    .z(_038_)
  );
  nd3v0x05 _134_ (
    .a(data_reg[3]),
    .b(_078_),
    .c(_025_),
    .z(_039_)
  );
  aoi21v0x05 _135_ (
    .a1(_038_),
    .a2(_039_),
    .b(_058_),
    .z(_016_)
  );
  aoi21a2bv0x05 _136_ (
    .a1(cs_n_b),
    .a2(cs_n_a),
    .b(data_reg[3]),
    .z(_040_)
  );
  nr3abv0x05 _137_ (
    .a(cs_n_b),
    .b(data_in[4]),
    .c(cs_n_a),
    .z(_041_)
  );
  oai22v0x05 _138_ (
    .a1(_077_),
    .a2(_024_),
    .b1(_040_),
    .b2(_041_),
    .z(_042_)
  );
  nd3v0x05 _139_ (
    .a(data_reg[4]),
    .b(_078_),
    .c(_025_),
    .z(_043_)
  );
  aoi21v0x05 _140_ (
    .a1(_042_),
    .a2(_043_),
    .b(_058_),
    .z(_017_)
  );
  aoi21a2bv0x05 _141_ (
    .a1(cs_n_b),
    .a2(cs_n_a),
    .b(data_reg[4]),
    .z(_044_)
  );
  nr3abv0x05 _142_ (
    .a(cs_n_b),
    .b(data_in[5]),
    .c(cs_n_a),
    .z(_045_)
  );
  oai22v0x05 _143_ (
    .a1(_077_),
    .a2(_024_),
    .b1(_044_),
    .b2(_045_),
    .z(_046_)
  );
  nd3v0x05 _144_ (
    .a(data_reg[5]),
    .b(_078_),
    .c(_025_),
    .z(_047_)
  );
  aoi21v0x05 _145_ (
    .a1(_046_),
    .a2(_047_),
    .b(_058_),
    .z(_018_)
  );
  aoi21a2bv0x05 _146_ (
    .a1(cs_n_b),
    .a2(cs_n_a),
    .b(data_reg[5]),
    .z(_048_)
  );
  nr3abv0x05 _147_ (
    .a(cs_n_b),
    .b(data_in[6]),
    .c(cs_n_a),
    .z(_049_)
  );
  oai22v0x05 _148_ (
    .a1(_077_),
    .a2(_024_),
    .b1(_048_),
    .b2(_049_),
    .z(_050_)
  );
  nd3v0x05 _149_ (
    .a(data_reg[6]),
    .b(_078_),
    .c(_025_),
    .z(_051_)
  );
  aoi21v0x05 _150_ (
    .a1(_050_),
    .a2(_051_),
    .b(_058_),
    .z(_019_)
  );
  aoi21a2bv0x05 _151_ (
    .a1(cs_n_b),
    .a2(cs_n_a),
    .b(data_reg[6]),
    .z(_052_)
  );
  nr3abv0x05 _152_ (
    .a(cs_n_b),
    .b(data_in[7]),
    .c(cs_n_a),
    .z(_053_)
  );
  oai22v0x05 _153_ (
    .a1(_077_),
    .a2(_024_),
    .b1(_052_),
    .b2(_053_),
    .z(_054_)
  );
  nd3v0x05 _154_ (
    .a(data_reg[7]),
    .b(_078_),
    .c(_025_),
    .z(_055_)
  );
  aoi21v0x05 _155_ (
    .a1(_054_),
    .a2(_055_),
    .b(_058_),
    .z(_020_)
  );
  mxi2v0x05 _156_ (
    .a0(sclk),
    .a1(sclk_a),
    .s(cs_n),
    .z(_056_)
  );
  nd2v0x05 _157_ (
    .a(rst_n),
    .b(_056_),
    .z(_022_)
  );
  mxi2v0x05 _158_ (
    .a0(sclk_a),
    .a1(sclk_b),
    .s(cs_n),
    .z(_057_)
  );
  nd2v0x05 _159_ (
    .a(rst_n),
    .b(_057_),
    .z(_023_)
  );
  (* src = "SPI_Slave.v:65.1-73.4" *)
  dfnt1v0x2 _160_ (
    .cp(clk),
    .d(_000_),
    .z(cs_n_b)
  );
  (* src = "SPI_Slave.v:120.1-132.4" *)
  dfnt1v0x2 _161_ (
    .cp(clk),
    .d(_001_),
    .z(sampl_num[0])
  );
  (* src = "SPI_Slave.v:120.1-132.4" *)
  dfnt1v0x2 _162_ (
    .cp(clk),
    .d(_002_),
    .z(sampl_num[1])
  );
  (* src = "SPI_Slave.v:120.1-132.4" *)
  dfnt1v0x2 _163_ (
    .cp(clk),
    .d(_003_),
    .z(sampl_num[2])
  );
  (* src = "SPI_Slave.v:120.1-132.4" *)
  dfnt1v0x2 _164_ (
    .cp(clk),
    .d(_004_),
    .z(sampl_num[3])
  );
  (* src = "SPI_Slave.v:111.1-118.4" *)
  dfnt1v0x2 _165_ (
    .cp(clk),
    .d(_005_),
    .z(data_out[0])
  );
  (* src = "SPI_Slave.v:111.1-118.4" *)
  dfnt1v0x2 _166_ (
    .cp(clk),
    .d(_006_),
    .z(data_out[1])
  );
  (* src = "SPI_Slave.v:111.1-118.4" *)
  dfnt1v0x2 _167_ (
    .cp(clk),
    .d(_007_),
    .z(data_out[2])
  );
  (* src = "SPI_Slave.v:111.1-118.4" *)
  dfnt1v0x2 _168_ (
    .cp(clk),
    .d(_008_),
    .z(data_out[3])
  );
  (* src = "SPI_Slave.v:111.1-118.4" *)
  dfnt1v0x2 _169_ (
    .cp(clk),
    .d(_009_),
    .z(data_out[4])
  );
  (* src = "SPI_Slave.v:111.1-118.4" *)
  dfnt1v0x2 _170_ (
    .cp(clk),
    .d(_010_),
    .z(data_out[5])
  );
  (* src = "SPI_Slave.v:111.1-118.4" *)
  dfnt1v0x2 _171_ (
    .cp(clk),
    .d(_011_),
    .z(data_out[6])
  );
  (* src = "SPI_Slave.v:111.1-118.4" *)
  dfnt1v0x2 _172_ (
    .cp(clk),
    .d(_012_),
    .z(data_out[7])
  );
  (* src = "SPI_Slave.v:97.1-106.4" *)
  dfnt1v0x2 _173_ (
    .cp(clk),
    .d(_013_),
    .z(data_reg[0])
  );
  (* src = "SPI_Slave.v:97.1-106.4" *)
  dfnt1v0x2 _174_ (
    .cp(clk),
    .d(_014_),
    .z(data_reg[1])
  );
  (* src = "SPI_Slave.v:97.1-106.4" *)
  dfnt1v0x2 _175_ (
    .cp(clk),
    .d(_015_),
    .z(data_reg[2])
  );
  (* src = "SPI_Slave.v:97.1-106.4" *)
  dfnt1v0x2 _176_ (
    .cp(clk),
    .d(_016_),
    .z(data_reg[3])
  );
  (* src = "SPI_Slave.v:97.1-106.4" *)
  dfnt1v0x2 _177_ (
    .cp(clk),
    .d(_017_),
    .z(data_reg[4])
  );
  (* src = "SPI_Slave.v:97.1-106.4" *)
  dfnt1v0x2 _178_ (
    .cp(clk),
    .d(_018_),
    .z(data_reg[5])
  );
  (* src = "SPI_Slave.v:97.1-106.4" *)
  dfnt1v0x2 _179_ (
    .cp(clk),
    .d(_019_),
    .z(data_reg[6])
  );
  (* src = "SPI_Slave.v:97.1-106.4" *)
  dfnt1v0x2 _180_ (
    .cp(clk),
    .d(_020_),
    .z(data_reg[7])
  );
  (* src = "SPI_Slave.v:65.1-73.4" *)
  dfnt1v0x2 _181_ (
    .cp(clk),
    .d(_021_),
    .z(cs_n_a)
  );
  (* src = "SPI_Slave.v:51.1-59.4" *)
  dfnt1v0x2 _182_ (
    .cp(clk),
    .d(_022_),
    .z(sclk_a)
  );
  (* src = "SPI_Slave.v:51.1-59.4" *)
  dfnt1v0x2 _183_ (
    .cp(clk),
    .d(_023_),
    .z(sclk_b)
  );
endmodule

(* dynports =  1  *)
(* src = "SPI_loopback.v:16.1-82.10" *)
module SPI_loopback(clk, rst_n, data_m_in, data_s_in, start_m, finish_m, data_m_out, data_s_out, data_valid_s);
  (* src = "SPI_loopback.v:25.14-25.17" *)
  input clk;
  wire clk;
  (* src = "SPI_loopback.v:38.9-38.13" *)
  wire cs_n;
  (* src = "SPI_loopback.v:27.26-27.35" *)
  input [7:0] data_m_in;
  wire [7:0] data_m_in;
  (* src = "SPI_loopback.v:31.27-31.37" *)
  output [7:0] data_m_out;
  wire [7:0] data_m_out;
  (* src = "SPI_loopback.v:28.26-28.35" *)
  input [7:0] data_s_in;
  wire [7:0] data_s_in;
  (* src = "SPI_loopback.v:32.27-32.37" *)
  output [7:0] data_s_out;
  wire [7:0] data_s_out;
  (* src = "SPI_loopback.v:33.15-33.27" *)
  output data_valid_s;
  wire data_valid_s;
  (* src = "SPI_loopback.v:30.15-30.23" *)
  output finish_m;
  wire finish_m;
  (* src = "SPI_loopback.v:36.9-36.13" *)
  wire miso;
  (* src = "SPI_loopback.v:37.9-37.13" *)
  wire mosi;
  (* src = "SPI_loopback.v:26.14-26.19" *)
  input rst_n;
  wire rst_n;
  (* src = "SPI_loopback.v:39.9-39.13" *)
  wire sclk;
  (* src = "SPI_loopback.v:29.14-29.21" *)
  input start_m;
  wire start_m;
  (* src = "SPI_loopback.v:70.1-80.2" *)
  \$paramod$edee9027fc73b27c93ba6efadc4faa1987d2455b\SPI_Slave  u_SPI_Slave (
    .clk(clk),
    .cs_n(cs_n),
    .data_in(data_s_in),
    .data_out(data_s_out),
    .data_valid(data_valid_s),
    .miso(miso),
    .mosi(mosi),
    .rst_n(rst_n),
    .sclk(sclk)
  );
  (* src = "SPI_loopback.v:49.1-60.2" *)
  \$paramod$edee9027fc73b27c93ba6efadc4faa1987d2455b\spi_master  u_spi_master (
    .clk(clk),
    .cs_n(cs_n),
    .data_in(data_m_in),
    .data_out(data_m_out),
    .finish(finish_m),
    .miso(miso),
    .mosi(mosi),
    .rst_n(rst_n),
    .sclk(sclk),
    .start(start_m)
  );
endmodule

(* dynports =  1  *)
(* src = "SPI_Master.v:16.1-205.10" *)
module spi_master(clk, rst_n, data_in, start, miso, sclk, cs_n, mosi, finish, data_out);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  (* src = "SPI_Master.v:25.15-25.18" *)
  input clk;
  wire clk;
  (* src = "SPI_Master.v:55.23-55.30" *)
  wire [3:0] clk_cnt;
  (* src = "SPI_Master.v:48.11-48.21" *)
  wire clk_cnt_en;
  (* src = "SPI_Master.v:31.19-31.23" *)
  output cs_n;
  wire cs_n;
  (* onehot = 32'd1 *)
  wire [3:0] cstate;
  (* src = "SPI_Master.v:27.27-27.34" *)
  input [7:0] data_in;
  wire [7:0] data_in;
  (* src = "SPI_Master.v:34.31-34.39" *)
  output [7:0] data_out;
  wire [7:0] data_out;
  (* src = "SPI_Master.v:57.23-57.31" *)
  wire [7:0] data_reg;
  (* src = "SPI_Master.v:33.19-33.25" *)
  output finish;
  wire finish;
  (* src = "SPI_Master.v:29.15-29.19" *)
  input miso;
  wire miso;
  (* src = "SPI_Master.v:32.16-32.20" *)
  output mosi;
  wire mosi;
  (* src = "SPI_Master.v:26.15-26.20" *)
  input rst_n;
  wire rst_n;
  (* src = "SPI_Master.v:30.19-30.23" *)
  output sclk;
  wire sclk;
  (* src = "SPI_Master.v:49.11-49.17" *)
  wire sclk_a;
  (* src = "SPI_Master.v:50.11-50.17" *)
  wire sclk_b;
  (* src = "SPI_Master.v:56.24-56.33" *)
  wire [3:0] shift_cnt;
  (* src = "SPI_Master.v:28.15-28.20" *)
  input start;
  wire start;
  iv1v0x05 _096_ (
    .a(shift_cnt[2]),
    .z(_080_)
  );
  iv1v0x05 _097_ (
    .a(shift_cnt[0]),
    .z(_081_)
  );
  iv1v0x05 _098_ (
    .a(rst_n),
    .z(_082_)
  );
  aoi21a2v0x05 _099_ (
    .a1(cstate[0]),
    .a2(start),
    .b(cstate[1]),
    .z(_083_)
  );
  nd2v0x05 _100_ (
    .a(rst_n),
    .b(_083_),
    .z(_002_)
  );
  or2v0x05 _101_ (
    .a(shift_cnt[1]),
    .b(shift_cnt[0]),
    .z(_084_)
  );
  nr3av0x05 _102_ (
    .a(shift_cnt[3]),
    .b(shift_cnt[1]),
    .c(shift_cnt[0]),
    .z(_085_)
  );
  aoi21bv0x05 _103_ (
    .a1(_080_),
    .a2(_085_),
    .b(cstate[2]),
    .z(_086_)
  );
  or2v0x05 _104_ (
    .a(cstate[3]),
    .b(_086_),
    .z(_087_)
  );
  an2v0x05 _105_ (
    .a(rst_n),
    .b(_087_),
    .z(_003_)
  );
  an4v0x05 _106_ (
    .a(_080_),
    .b(cstate[2]),
    .c(rst_n),
    .d(_085_),
    .z(_000_)
  );
  an2v0x05 _107_ (
    .a(cstate[0]),
    .b(start),
    .z(_088_)
  );
  nd2v0x05 _108_ (
    .a(cstate[0]),
    .b(start),
    .z(_089_)
  );
  nr2v0x05 _109_ (
    .a(_082_),
    .b(_089_),
    .z(_001_)
  );
  nd2av0x05 _110_ (
    .a(clk_cnt[1]),
    .b(clk_cnt[0]),
    .z(_090_)
  );
  nd3abv0x05 _111_ (
    .a(_090_),
    .b(clk_cnt[2]),
    .c(clk_cnt[3]),
    .z(_091_)
  );
  nd2v0x05 _112_ (
    .a(clk_cnt_en),
    .b(rst_n),
    .z(_092_)
  );
  nd2av0x05 _113_ (
    .a(_092_),
    .b(_091_),
    .z(_093_)
  );
  nr2v0x05 _114_ (
    .a(clk_cnt[0]),
    .b(_092_),
    .z(_004_)
  );
  nd2av0x05 _115_ (
    .a(clk_cnt[0]),
    .b(clk_cnt[1]),
    .z(_094_)
  );
  aoi21v0x05 _116_ (
    .a1(_090_),
    .a2(_094_),
    .b(_093_),
    .z(_005_)
  );
  aoi21v0x05 _117_ (
    .a1(clk_cnt[0]),
    .a2(clk_cnt[1]),
    .b(clk_cnt[2]),
    .z(_095_)
  );
  nd3v0x05 _118_ (
    .a(clk_cnt[0]),
    .b(clk_cnt[1]),
    .c(clk_cnt[2]),
    .z(_034_)
  );
  nr3av0x05 _119_ (
    .a(_034_),
    .b(_093_),
    .c(_095_),
    .z(_006_)
  );
  xor2v0x05 _120_ (
    .a(clk_cnt[3]),
    .b(_034_),
    .z(_035_)
  );
  nr2v0x05 _121_ (
    .a(_093_),
    .b(_035_),
    .z(_007_)
  );
  nd2av0x05 _122_ (
    .a(sclk_b),
    .b(sclk_a),
    .z(_036_)
  );
  mxi2v0x05 _123_ (
    .a0(miso),
    .a1(data_out[0]),
    .s(_036_),
    .z(_037_)
  );
  nr2v0x05 _124_ (
    .a(_082_),
    .b(_037_),
    .z(_008_)
  );
  mxi2v0x05 _125_ (
    .a0(data_out[0]),
    .a1(data_out[1]),
    .s(_036_),
    .z(_038_)
  );
  nr2v0x05 _126_ (
    .a(_082_),
    .b(_038_),
    .z(_009_)
  );
  mxi2v0x05 _127_ (
    .a0(data_out[1]),
    .a1(data_out[2]),
    .s(_036_),
    .z(_039_)
  );
  nr2v0x05 _128_ (
    .a(_082_),
    .b(_039_),
    .z(_010_)
  );
  mxi2v0x05 _129_ (
    .a0(data_out[2]),
    .a1(data_out[3]),
    .s(_036_),
    .z(_040_)
  );
  nr2v0x05 _130_ (
    .a(_082_),
    .b(_040_),
    .z(_011_)
  );
  mxi2v0x05 _131_ (
    .a0(data_out[3]),
    .a1(data_out[4]),
    .s(_036_),
    .z(_041_)
  );
  nr2v0x05 _132_ (
    .a(_082_),
    .b(_041_),
    .z(_012_)
  );
  mxi2v0x05 _133_ (
    .a0(data_out[4]),
    .a1(data_out[5]),
    .s(_036_),
    .z(_042_)
  );
  nr2v0x05 _134_ (
    .a(_082_),
    .b(_042_),
    .z(_013_)
  );
  mxi2v0x05 _135_ (
    .a0(data_out[5]),
    .a1(data_out[6]),
    .s(_036_),
    .z(_043_)
  );
  nr2v0x05 _136_ (
    .a(_082_),
    .b(_043_),
    .z(_014_)
  );
  mxi2v0x05 _137_ (
    .a0(data_out[6]),
    .a1(data_out[7]),
    .s(_036_),
    .z(_044_)
  );
  nr2v0x05 _138_ (
    .a(_082_),
    .b(_044_),
    .z(_015_)
  );
  or2v0x05 _139_ (
    .a(cstate[2]),
    .b(cstate[3]),
    .z(_045_)
  );
  nr2v0x05 _140_ (
    .a(_089_),
    .b(_045_),
    .z(_046_)
  );
  aoi31v0x05 _141_ (
    .a1(_080_),
    .a2(cstate[2]),
    .a3(_085_),
    .b(_088_),
    .z(_047_)
  );
  oan21v0x05 _142_ (
    .a1(cstate[3]),
    .a2(_086_),
    .b(_047_),
    .z(_048_)
  );
  oan21bv0x05 _143_ (
    .a1(_046_),
    .a2(_048_),
    .b(_082_),
    .z(_033_)
  );
  iv1v0x05 _144_ (
    .a(_033_),
    .z(_016_)
  );
  nr3abv0x05 _145_ (
    .a(_089_),
    .b(_000_),
    .c(_087_),
    .z(_017_)
  );
  nr2av0x1 _146_ (
    .a(sclk_b),
    .b(sclk_a),
    .z(_049_)
  );
  nd2av0x05 _147_ (
    .a(sclk_a),
    .b(sclk_b),
    .z(_050_)
  );
  oai211v0x05 _148_ (
    .a1(cstate[3]),
    .a2(_086_),
    .b(_047_),
    .c(_049_),
    .z(_051_)
  );
  aoi21v0x05 _149_ (
    .a1(_045_),
    .a2(_051_),
    .b(_081_),
    .z(_052_)
  );
  aoi112v0x05 _150_ (
    .a(_082_),
    .b(_052_),
    .c1(_051_),
    .c2(_081_),
    .z(_018_)
  );
  nd3v0x05 _151_ (
    .a(shift_cnt[1]),
    .b(_045_),
    .c(_051_),
    .z(_053_)
  );
  an2v0x05 _152_ (
    .a(shift_cnt[1]),
    .b(shift_cnt[0]),
    .z(_054_)
  );
  nd3abv0x05 _153_ (
    .a(_051_),
    .b(_054_),
    .c(_084_),
    .z(_055_)
  );
  aoi21v0x05 _154_ (
    .a1(_053_),
    .a2(_055_),
    .b(_082_),
    .z(_019_)
  );
  aon21bv0x05 _155_ (
    .a1(_045_),
    .a2(_051_),
    .b(_054_),
    .z(_056_)
  );
  nd2v0x05 _156_ (
    .a(shift_cnt[2]),
    .b(_054_),
    .z(_057_)
  );
  aoi22v0x05 _157_ (
    .a1(_045_),
    .a2(_051_),
    .b1(_057_),
    .b2(_048_),
    .z(_058_)
  );
  aoi112v0x05 _158_ (
    .a(_082_),
    .b(_058_),
    .c1(_056_),
    .c2(_080_),
    .z(_020_)
  );
  oan21bv0x05 _159_ (
    .a1(_051_),
    .a2(_057_),
    .b(shift_cnt[3]),
    .z(_059_)
  );
  aoi112v0x05 _160_ (
    .a(_082_),
    .b(_059_),
    .c1(_058_),
    .c2(shift_cnt[3]),
    .z(_021_)
  );
  oai211v0x05 _161_ (
    .a1(cstate[3]),
    .a2(_086_),
    .b(_047_),
    .c(_050_),
    .z(_060_)
  );
  nd3v0x05 _162_ (
    .a(data_reg[0]),
    .b(_048_),
    .c(_050_),
    .z(_061_)
  );
  nd2v0x05 _163_ (
    .a(data_in[0]),
    .b(_046_),
    .z(_062_)
  );
  aoi21v0x05 _164_ (
    .a1(_061_),
    .a2(_062_),
    .b(_082_),
    .z(_022_)
  );
  aoi22v0x05 _165_ (
    .a1(data_in[1]),
    .a2(_046_),
    .b1(_048_),
    .b2(data_reg[0]),
    .z(_063_)
  );
  oai21v0x05 _166_ (
    .a1(data_reg[1]),
    .a2(_060_),
    .b(rst_n),
    .z(_064_)
  );
  aoi21v0x05 _167_ (
    .a1(_060_),
    .a2(_063_),
    .b(_064_),
    .z(_023_)
  );
  aoi22v0x05 _168_ (
    .a1(data_in[2]),
    .a2(_046_),
    .b1(_048_),
    .b2(data_reg[1]),
    .z(_065_)
  );
  oai21v0x05 _169_ (
    .a1(data_reg[2]),
    .a2(_060_),
    .b(rst_n),
    .z(_066_)
  );
  aoi21v0x05 _170_ (
    .a1(_060_),
    .a2(_065_),
    .b(_066_),
    .z(_024_)
  );
  aoi22v0x05 _171_ (
    .a1(data_in[3]),
    .a2(_046_),
    .b1(_048_),
    .b2(data_reg[2]),
    .z(_067_)
  );
  oai21v0x05 _172_ (
    .a1(data_reg[3]),
    .a2(_060_),
    .b(rst_n),
    .z(_068_)
  );
  aoi21v0x05 _173_ (
    .a1(_060_),
    .a2(_067_),
    .b(_068_),
    .z(_025_)
  );
  aoi22v0x05 _174_ (
    .a1(data_in[4]),
    .a2(_046_),
    .b1(_048_),
    .b2(data_reg[3]),
    .z(_069_)
  );
  oai21v0x05 _175_ (
    .a1(data_reg[4]),
    .a2(_060_),
    .b(rst_n),
    .z(_070_)
  );
  aoi21v0x05 _176_ (
    .a1(_060_),
    .a2(_069_),
    .b(_070_),
    .z(_026_)
  );
  aoi22v0x05 _177_ (
    .a1(data_in[5]),
    .a2(_046_),
    .b1(_048_),
    .b2(data_reg[4]),
    .z(_071_)
  );
  oai21v0x05 _178_ (
    .a1(data_reg[5]),
    .a2(_060_),
    .b(rst_n),
    .z(_072_)
  );
  aoi21v0x05 _179_ (
    .a1(_060_),
    .a2(_071_),
    .b(_072_),
    .z(_027_)
  );
  aoi22v0x05 _180_ (
    .a1(data_in[6]),
    .a2(_046_),
    .b1(_048_),
    .b2(data_reg[5]),
    .z(_073_)
  );
  oai21v0x05 _181_ (
    .a1(data_reg[6]),
    .a2(_060_),
    .b(rst_n),
    .z(_074_)
  );
  aoi21v0x05 _182_ (
    .a1(_060_),
    .a2(_073_),
    .b(_074_),
    .z(_028_)
  );
  aoi22v0x05 _183_ (
    .a1(data_in[7]),
    .a2(_046_),
    .b1(_048_),
    .b2(data_reg[6]),
    .z(_075_)
  );
  oai21v0x05 _184_ (
    .a1(data_reg[7]),
    .a2(_060_),
    .b(rst_n),
    .z(_076_)
  );
  aoi21v0x05 _185_ (
    .a1(_060_),
    .a2(_075_),
    .b(_076_),
    .z(_029_)
  );
  mxi2v0x05 _186_ (
    .a0(sclk_a),
    .a1(sclk),
    .s(clk_cnt_en),
    .z(_077_)
  );
  nr2v0x05 _187_ (
    .a(_082_),
    .b(_077_),
    .z(_030_)
  );
  mxi2v0x05 _188_ (
    .a0(sclk_b),
    .a1(sclk_a),
    .s(clk_cnt_en),
    .z(_078_)
  );
  nr2v0x05 _189_ (
    .a(_082_),
    .b(_078_),
    .z(_031_)
  );
  xor2v0x05 _190_ (
    .a(sclk),
    .b(_091_),
    .z(_079_)
  );
  nr2v0x05 _191_ (
    .a(_092_),
    .b(_079_),
    .z(_032_)
  );
  dfnt1v0x2 _192_ (
    .cp(clk),
    .d(_002_),
    .z(cstate[0])
  );
  dfnt1v0x2 _193_ (
    .cp(clk),
    .d(_000_),
    .z(cstate[1])
  );
  dfnt1v0x2 _194_ (
    .cp(clk),
    .d(_003_),
    .z(cstate[2])
  );
  dfnt1v0x2 _195_ (
    .cp(clk),
    .d(_001_),
    .z(cstate[3])
  );
  (* src = "SPI_Master.v:59.1-69.4" *)
  dfnt1v0x2 _196_ (
    .cp(clk),
    .d(_004_),
    .z(clk_cnt[0])
  );
  (* src = "SPI_Master.v:59.1-69.4" *)
  dfnt1v0x2 _197_ (
    .cp(clk),
    .d(_005_),
    .z(clk_cnt[1])
  );
  (* src = "SPI_Master.v:59.1-69.4" *)
  dfnt1v0x2 _198_ (
    .cp(clk),
    .d(_006_),
    .z(clk_cnt[2])
  );
  (* src = "SPI_Master.v:59.1-69.4" *)
  dfnt1v0x2 _199_ (
    .cp(clk),
    .d(_007_),
    .z(clk_cnt[3])
  );
  (* src = "SPI_Master.v:188.1-195.4" *)
  dfnt1v0x2 _200_ (
    .cp(clk),
    .d(_008_),
    .z(data_out[0])
  );
  (* src = "SPI_Master.v:188.1-195.4" *)
  dfnt1v0x2 _201_ (
    .cp(clk),
    .d(_009_),
    .z(data_out[1])
  );
  (* src = "SPI_Master.v:188.1-195.4" *)
  dfnt1v0x2 _202_ (
    .cp(clk),
    .d(_010_),
    .z(data_out[2])
  );
  (* src = "SPI_Master.v:188.1-195.4" *)
  dfnt1v0x2 _203_ (
    .cp(clk),
    .d(_011_),
    .z(data_out[3])
  );
  (* src = "SPI_Master.v:188.1-195.4" *)
  dfnt1v0x2 _204_ (
    .cp(clk),
    .d(_012_),
    .z(data_out[4])
  );
  (* src = "SPI_Master.v:188.1-195.4" *)
  dfnt1v0x2 _205_ (
    .cp(clk),
    .d(_013_),
    .z(data_out[5])
  );
  (* src = "SPI_Master.v:188.1-195.4" *)
  dfnt1v0x2 _206_ (
    .cp(clk),
    .d(_014_),
    .z(data_out[6])
  );
  (* src = "SPI_Master.v:188.1-195.4" *)
  dfnt1v0x2 _207_ (
    .cp(clk),
    .d(_015_),
    .z(data_out[7])
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _208_ (
    .cp(clk),
    .d(_016_),
    .z(cs_n)
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _209_ (
    .cp(clk),
    .d(_017_),
    .z(finish)
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _210_ (
    .cp(clk),
    .d(_018_),
    .z(shift_cnt[0])
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _211_ (
    .cp(clk),
    .d(_019_),
    .z(shift_cnt[1])
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _212_ (
    .cp(clk),
    .d(_020_),
    .z(shift_cnt[2])
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _213_ (
    .cp(clk),
    .d(_021_),
    .z(shift_cnt[3])
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _214_ (
    .cp(clk),
    .d(_022_),
    .z(data_reg[0])
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _215_ (
    .cp(clk),
    .d(_023_),
    .z(data_reg[1])
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _216_ (
    .cp(clk),
    .d(_024_),
    .z(data_reg[2])
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _217_ (
    .cp(clk),
    .d(_025_),
    .z(data_reg[3])
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _218_ (
    .cp(clk),
    .d(_026_),
    .z(data_reg[4])
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _219_ (
    .cp(clk),
    .d(_027_),
    .z(data_reg[5])
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _220_ (
    .cp(clk),
    .d(_028_),
    .z(data_reg[6])
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _221_ (
    .cp(clk),
    .d(_029_),
    .z(data_reg[7])
  );
  (* src = "SPI_Master.v:84.1-92.4" *)
  dfnt1v0x2 _222_ (
    .cp(clk),
    .d(_030_),
    .z(sclk_a)
  );
  (* src = "SPI_Master.v:84.1-92.4" *)
  dfnt1v0x2 _223_ (
    .cp(clk),
    .d(_031_),
    .z(sclk_b)
  );
  (* src = "SPI_Master.v:71.1-81.4" *)
  dfnt1v0x2 _224_ (
    .cp(clk),
    .d(_032_),
    .z(sclk)
  );
  (* src = "SPI_Master.v:133.1-184.4" *)
  dfnt1v0x2 _225_ (
    .cp(clk),
    .d(_033_),
    .z(clk_cnt_en)
  );
  assign mosi = data_reg[7];
endmodule
