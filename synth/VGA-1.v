/* Generated by Yosys 0.32+74 (git sha1 b739213d9, x86_64-w64-mingw32-g++ 9.2.1 -Os) */

(* src = "clock.v:87.1-105.10" *)
module color(clk, blank, red_out, green_out, blue_out);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  (* src = "clock.v:88.15-88.20" *)
  input blank;
  wire blank;
  (* src = "clock.v:89.31-89.39" *)
  output blue_out;
  wire blue_out;
  (* src = "clock.v:88.10-88.13" *)
  input clk;
  wire clk;
  (* src = "clock.v:91.14-91.19" *)
  wire [8:0] count;
  (* src = "clock.v:89.20-89.29" *)
  output green_out;
  wire green_out;
  (* src = "clock.v:89.11-89.18" *)
  output red_out;
  wire red_out;
  iv1v0x05 _22_ (
    .a(count[7]),
    .z(_09_)
  );
  iv1v0x05 _23_ (
    .a(blank),
    .z(_10_)
  );
  nr2v0x05 _24_ (
    .a(count[0]),
    .b(blank),
    .z(_00_)
  );
  oai21v0x05 _25_ (
    .a1(count[0]),
    .a2(count[1]),
    .b(_10_),
    .z(_11_)
  );
  aoi21v0x05 _26_ (
    .a1(count[0]),
    .a2(count[1]),
    .b(_11_),
    .z(_01_)
  );
  xaoi21v0x05 _27_ (
    .a1(count[0]),
    .a2(count[1]),
    .b(count[2]),
    .z(_12_)
  );
  nr2v0x05 _28_ (
    .a(blank),
    .b(_12_),
    .z(_02_)
  );
  an4v0x05 _29_ (
    .a(count[0]),
    .b(count[1]),
    .c(count[2]),
    .d(count[3]),
    .z(_13_)
  );
  aoi31v0x05 _30_ (
    .a1(count[0]),
    .a2(count[1]),
    .a3(count[2]),
    .b(count[3]),
    .z(_14_)
  );
  nr3v0x05 _31_ (
    .a(blank),
    .b(_13_),
    .c(_14_),
    .z(_03_)
  );
  an2v0x05 _32_ (
    .a(count[4]),
    .b(_13_),
    .z(_15_)
  );
  oai21v0x05 _33_ (
    .a1(count[4]),
    .a2(_13_),
    .b(_10_),
    .z(_16_)
  );
  nr2v0x05 _34_ (
    .a(_15_),
    .b(_16_),
    .z(_04_)
  );
  oai21v0x05 _35_ (
    .a1(count[5]),
    .a2(_15_),
    .b(_10_),
    .z(_17_)
  );
  aoi21v0x05 _36_ (
    .a1(count[5]),
    .a2(_15_),
    .b(_17_),
    .z(_05_)
  );
  nd4v0x05 _37_ (
    .a(count[4]),
    .b(count[5]),
    .c(count[6]),
    .d(_13_),
    .z(_18_)
  );
  aoi21v0x05 _38_ (
    .a1(count[5]),
    .a2(_15_),
    .b(count[6]),
    .z(_19_)
  );
  nr3abv0x05 _39_ (
    .a(_10_),
    .b(_18_),
    .c(_19_),
    .z(_06_)
  );
  xnr2v0x05 _40_ (
    .a(_09_),
    .b(_18_),
    .z(_20_)
  );
  nr2v0x05 _41_ (
    .a(blank),
    .b(_20_),
    .z(_07_)
  );
  xooi21v0x05 _42_ (
    .a1(_09_),
    .a2(_18_),
    .b(count[8]),
    .z(_21_)
  );
  an2v0x05 _43_ (
    .a(_10_),
    .b(_21_),
    .z(_08_)
  );
  (* src = "clock.v:93.4-99.6" *)
  dfnt1v0x2 _44_ (
    .cp(clk),
    .d(_00_),
    .z(count[0])
  );
  (* src = "clock.v:93.4-99.6" *)
  dfnt1v0x2 _45_ (
    .cp(clk),
    .d(_01_),
    .z(count[1])
  );
  (* src = "clock.v:93.4-99.6" *)
  dfnt1v0x2 _46_ (
    .cp(clk),
    .d(_02_),
    .z(count[2])
  );
  (* src = "clock.v:93.4-99.6" *)
  dfnt1v0x2 _47_ (
    .cp(clk),
    .d(_03_),
    .z(count[3])
  );
  (* src = "clock.v:93.4-99.6" *)
  dfnt1v0x2 _48_ (
    .cp(clk),
    .d(_04_),
    .z(count[4])
  );
  (* src = "clock.v:93.4-99.6" *)
  dfnt1v0x2 _49_ (
    .cp(clk),
    .d(_05_),
    .z(count[5])
  );
  (* src = "clock.v:93.4-99.6" *)
  dfnt1v0x2 _50_ (
    .cp(clk),
    .d(_06_),
    .z(count[6])
  );
  (* src = "clock.v:93.4-99.6" *)
  dfnt1v0x2 _51_ (
    .cp(clk),
    .d(_07_),
    .z(count[7])
  );
  (* src = "clock.v:93.4-99.6" *)
  dfnt1v0x2 _52_ (
    .cp(clk),
    .d(_08_),
    .z(count[8])
  );
  assign blue_out = count[6];
  assign green_out = count[7];
  assign red_out = count[8];
endmodule

(* src = "clock.v:37.1-84.10" *)
module hsync(clk50, hsync_out, blank_out, newline_out);
  (* src = "clock.v:62.4-68.6" *)
  wire _000_;
  (* src = "clock.v:54.4-60.6" *)
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  (* init = 1'h0 *)
  (* src = "clock.v:43.8-43.13" *)
  wire blank;
  (* src = "clock.v:39.22-39.31" *)
  output blank_out;
  wire blank_out;
  (* src = "clock.v:38.10-38.15" *)
  input clk50;
  wire clk50;
  (* init = 11'h000 *)
  (* src = "clock.v:41.15-41.20" *)
  wire [10:0] count;
  (* init = 1'h0 *)
  (* src = "clock.v:42.8-42.13" *)
  wire hsync;
  (* src = "clock.v:39.11-39.20" *)
  output hsync_out;
  wire hsync_out;
  (* init = 1'h0 *)
  (* src = "clock.v:44.8-44.15" *)
  wire newline;
  (* src = "clock.v:39.33-39.44" *)
  output newline_out;
  wire newline_out;
  iv1v0x05 _044_ (
    .a(count[9]),
    .z(_014_)
  );
  iv1v0x05 _045_ (
    .a(count[8]),
    .z(_015_)
  );
  iv1v0x05 _046_ (
    .a(count[6]),
    .z(_016_)
  );
  iv1v0x05 _047_ (
    .a(count[7]),
    .z(_017_)
  );
  iv1v0x05 _048_ (
    .a(count[10]),
    .z(_018_)
  );
  nr3v0x05 _049_ (
    .a(count[6]),
    .b(count[7]),
    .c(count[5]),
    .z(_019_)
  );
  oai31v0x05 _050_ (
    .a1(_014_),
    .a2(_015_),
    .a3(_019_),
    .b(_018_),
    .z(_000_)
  );
  nr4v1x05 _051_ (
    .a(count[6]),
    .b(count[7]),
    .c(count[5]),
    .d(count[4]),
    .z(_020_)
  );
  nd3v0x05 _052_ (
    .a(_014_),
    .b(_015_),
    .c(_020_),
    .z(_021_)
  );
  nr2v0x05 _053_ (
    .a(count[1]),
    .b(count[0]),
    .z(_022_)
  );
  nd3abv0x05 _054_ (
    .a(count[2]),
    .b(count[10]),
    .c(_022_),
    .z(_023_)
  );
  nr3v0x05 _055_ (
    .a(count[3]),
    .b(_021_),
    .c(_023_),
    .z(_001_)
  );
  aoi31v0x05 _056_ (
    .a1(_014_),
    .a2(_015_),
    .a3(_020_),
    .b(_018_),
    .z(_024_)
  );
  nr2v0x05 _057_ (
    .a(count[0]),
    .b(_024_),
    .z(_002_)
  );
  an2v0x05 _058_ (
    .a(count[1]),
    .b(count[0]),
    .z(_025_)
  );
  nr3v0x05 _059_ (
    .a(_022_),
    .b(_024_),
    .c(_025_),
    .z(_003_)
  );
  xnr2v0x05 _060_ (
    .a(count[2]),
    .b(_025_),
    .z(_026_)
  );
  nr2v0x05 _061_ (
    .a(_024_),
    .b(_026_),
    .z(_004_)
  );
  aoi21v0x05 _062_ (
    .a1(count[2]),
    .a2(_025_),
    .b(count[3]),
    .z(_027_)
  );
  an4v0x05 _063_ (
    .a(count[3]),
    .b(count[2]),
    .c(count[1]),
    .d(count[0]),
    .z(_028_)
  );
  nr3v0x05 _064_ (
    .a(_024_),
    .b(_027_),
    .c(_028_),
    .z(_005_)
  );
  an2v0x05 _065_ (
    .a(count[4]),
    .b(_028_),
    .z(_029_)
  );
  nr2v0x05 _066_ (
    .a(count[4]),
    .b(_028_),
    .z(_030_)
  );
  nr3v0x05 _067_ (
    .a(_024_),
    .b(_029_),
    .c(_030_),
    .z(_006_)
  );
  aoi21v0x05 _068_ (
    .a1(count[5]),
    .a2(_029_),
    .b(_024_),
    .z(_031_)
  );
  oan21v0x05 _069_ (
    .a1(count[5]),
    .a2(_029_),
    .b(_031_),
    .z(_007_)
  );
  an4v0x05 _070_ (
    .a(count[6]),
    .b(count[5]),
    .c(count[4]),
    .d(_028_),
    .z(_032_)
  );
  nd4v0x05 _071_ (
    .a(count[6]),
    .b(count[5]),
    .c(count[4]),
    .d(_028_),
    .z(_033_)
  );
  aoi21v0x05 _072_ (
    .a1(count[5]),
    .a2(_029_),
    .b(count[6]),
    .z(_034_)
  );
  nr3v0x05 _073_ (
    .a(_024_),
    .b(_032_),
    .c(_034_),
    .z(_008_)
  );
  aoi21v0x05 _074_ (
    .a1(count[7]),
    .a2(_032_),
    .b(_024_),
    .z(_035_)
  );
  aoi21bv0x05 _075_ (
    .a1(_017_),
    .a2(_033_),
    .b(_035_),
    .z(_009_)
  );
  xooi21v0x05 _076_ (
    .a1(_017_),
    .a2(_033_),
    .b(_015_),
    .z(_036_)
  );
  nr2v0x05 _077_ (
    .a(_024_),
    .b(_036_),
    .z(_010_)
  );
  oai31v0x05 _078_ (
    .a1(_015_),
    .a2(_017_),
    .a3(_033_),
    .b(count[9]),
    .z(_037_)
  );
  nd4v0x05 _079_ (
    .a(_014_),
    .b(count[8]),
    .c(count[7]),
    .d(_032_),
    .z(_038_)
  );
  aoi21v0x05 _080_ (
    .a1(_037_),
    .a2(_038_),
    .b(_024_),
    .z(_011_)
  );
  nd4v0x05 _081_ (
    .a(count[9]),
    .b(count[8]),
    .c(count[7]),
    .d(_032_),
    .z(_039_)
  );
  oai23av0x05 _082_ (
    .a3(_021_),
    .b1(_039_),
    .b2(count[10]),
    .z(_012_)
  );
  aoi21v0x05 _083_ (
    .a1(count[3]),
    .a2(count[4]),
    .b(count[5]),
    .z(_040_)
  );
  oai21v0x05 _084_ (
    .a1(_016_),
    .a2(_040_),
    .b(_017_),
    .z(_041_)
  );
  oai211v0x05 _085_ (
    .a1(count[5]),
    .a2(count[4]),
    .b(count[6]),
    .c(count[7]),
    .z(_042_)
  );
  nr3v0x05 _086_ (
    .a(_014_),
    .b(_015_),
    .c(count[10]),
    .z(_043_)
  );
  nd3v0x05 _087_ (
    .a(_041_),
    .b(_042_),
    .c(_043_),
    .z(_013_)
  );
  (* src = "clock.v:46.4-52.6" *)
  dfnt1v0x2 _088_ (
    .cp(clk50),
    .d(_002_),
    .z(count[0])
  );
  (* src = "clock.v:46.4-52.6" *)
  dfnt1v0x2 _089_ (
    .cp(clk50),
    .d(_003_),
    .z(count[1])
  );
  (* src = "clock.v:46.4-52.6" *)
  dfnt1v0x2 _090_ (
    .cp(clk50),
    .d(_004_),
    .z(count[2])
  );
  (* src = "clock.v:46.4-52.6" *)
  dfnt1v0x2 _091_ (
    .cp(clk50),
    .d(_005_),
    .z(count[3])
  );
  (* src = "clock.v:46.4-52.6" *)
  dfnt1v0x2 _092_ (
    .cp(clk50),
    .d(_006_),
    .z(count[4])
  );
  (* src = "clock.v:46.4-52.6" *)
  dfnt1v0x2 _093_ (
    .cp(clk50),
    .d(_007_),
    .z(count[5])
  );
  (* src = "clock.v:46.4-52.6" *)
  dfnt1v0x2 _094_ (
    .cp(clk50),
    .d(_008_),
    .z(count[6])
  );
  (* src = "clock.v:46.4-52.6" *)
  dfnt1v0x2 _095_ (
    .cp(clk50),
    .d(_009_),
    .z(count[7])
  );
  (* src = "clock.v:46.4-52.6" *)
  dfnt1v0x2 _096_ (
    .cp(clk50),
    .d(_010_),
    .z(count[8])
  );
  (* src = "clock.v:46.4-52.6" *)
  dfnt1v0x2 _097_ (
    .cp(clk50),
    .d(_011_),
    .z(count[9])
  );
  (* src = "clock.v:46.4-52.6" *)
  dfnt1v0x2 _098_ (
    .cp(clk50),
    .d(_012_),
    .z(count[10])
  );
  (* src = "clock.v:70.4-78.6" *)
  dfnt1v0x2 _099_ (
    .cp(clk50),
    .d(_013_),
    .z(hsync)
  );
  (* src = "clock.v:62.4-68.6" *)
  dfnt1v0x2 _100_ (
    .cp(clk50),
    .d(_000_),
    .z(blank)
  );
  (* src = "clock.v:54.4-60.6" *)
  dfnt1v0x2 _101_ (
    .cp(clk50),
    .d(_001_),
    .z(newline)
  );
  assign blank_out = blank;
  assign hsync_out = hsync;
  assign newline_out = newline;
endmodule

(* src = "clock.v:108.1-119.10" *)
module top(clk50, hsync_out, vsync_out, red_out, blue_out, green_out);
  (* src = "clock.v:111.19-111.24" *)
  wire blank;
  (* src = "clock.v:110.42-110.50" *)
  output blue_out;
  wire blue_out;
  (* src = "clock.v:109.10-109.15" *)
  input clk50;
  wire clk50;
  (* src = "clock.v:110.52-110.61" *)
  output green_out;
  wire green_out;
  (* src = "clock.v:111.26-111.32" *)
  wire hblank;
  (* src = "clock.v:110.11-110.20" *)
  output hsync_out;
  wire hsync_out;
  (* src = "clock.v:111.9-111.17" *)
  wire line_clk;
  (* src = "clock.v:110.33-110.40" *)
  output red_out;
  wire red_out;
  (* src = "clock.v:111.34-111.40" *)
  wire vblank;
  (* src = "clock.v:110.22-110.31" *)
  output vsync_out;
  wire vsync_out;
  or2v0x05 _0_ (
    .a(vblank),
    .b(hblank),
    .z(blank)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "clock.v:115.12-115.58" *)
  color cg (
    .blank(blank),
    .blue_out(blue_out),
    .clk(clk50),
    .green_out(green_out),
    .red_out(red_out)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "clock.v:113.12-113.50" *)
  hsync hs (
    .blank_out(hblank),
    .clk50(clk50),
    .hsync_out(hsync_out),
    .newline_out(line_clk)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "clock.v:114.12-114.43" *)
  vsync vs (
    .blank_out(vblank),
    .line_clk(line_clk),
    .vsync_out(vsync_out)
  );
endmodule

(* src = "clock.v:1.1-35.10" *)
module vsync(line_clk, vsync_out, blank_out);
  (* src = "clock.v:16.4-20.18" *)
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  (* init = 1'h0 *)
  (* src = "clock.v:8.8-8.13" *)
  wire blank;
  (* src = "clock.v:4.11-4.20" *)
  output blank_out;
  wire blank_out;
  (* init = 11'h000 *)
  (* src = "clock.v:6.15-6.20" *)
  wire [10:0] count;
  (* src = "clock.v:2.10-2.18" *)
  input line_clk;
  wire line_clk;
  (* init = 1'h0 *)
  (* src = "clock.v:7.8-7.13" *)
  wire vsync;
  (* src = "clock.v:3.11-3.20" *)
  output vsync_out;
  wire vsync_out;
  iv1v0x05 _048_ (
    .a(count[8]),
    .z(_012_)
  );
  iv1v0x05 _049_ (
    .a(count[7]),
    .z(_013_)
  );
  iv1v0x05 _050_ (
    .a(count[6]),
    .z(_014_)
  );
  iv1v0x05 _051_ (
    .a(count[2]),
    .z(_015_)
  );
  or2v0x05 _052_ (
    .a(count[10]),
    .b(count[9]),
    .z(_016_)
  );
  nd2av0x05 _053_ (
    .a(count[5]),
    .b(count[4]),
    .z(_017_)
  );
  or2v0x05 _054_ (
    .a(count[5]),
    .b(count[4]),
    .z(_018_)
  );
  aoi21v0x05 _055_ (
    .a1(count[4]),
    .a2(count[3]),
    .b(count[5]),
    .z(_019_)
  );
  nr3av0x05 _056_ (
    .a(count[9]),
    .b(count[8]),
    .c(count[10]),
    .z(_020_)
  );
  oai211v0x05 _057_ (
    .a1(_014_),
    .a2(_019_),
    .b(_020_),
    .c(_013_),
    .z(_021_)
  );
  an2v0x05 _058_ (
    .a(_016_),
    .b(_021_),
    .z(_000_)
  );
  nd2av0x05 _059_ (
    .a(count[6]),
    .b(count[7]),
    .z(_022_)
  );
  nd4v0x05 _060_ (
    .a(count[3]),
    .b(_015_),
    .c(count[1]),
    .d(_020_),
    .z(_023_)
  );
  nr4v1x05 _061_ (
    .a(count[0]),
    .b(_017_),
    .c(_022_),
    .d(_023_),
    .z(_024_)
  );
  nd2v0x05 _062_ (
    .a(count[0]),
    .b(count[1]),
    .z(_025_)
  );
  aon21v0x05 _063_ (
    .a1(count[0]),
    .a2(count[1]),
    .b(count[2]),
    .z(_026_)
  );
  aoi112v0x05 _064_ (
    .a(_017_),
    .b(_022_),
    .c1(_026_),
    .c2(count[3]),
    .z(_027_)
  );
  nr2v0x05 _065_ (
    .a(_018_),
    .b(_022_),
    .z(_028_)
  );
  oai31v0x05 _066_ (
    .a1(_013_),
    .a2(_027_),
    .a3(_028_),
    .b(_020_),
    .z(_029_)
  );
  aoi112v0x05 _067_ (
    .a(count[0]),
    .b(_024_),
    .c1(_029_),
    .c2(_016_),
    .z(_001_)
  );
  xnr2v0x05 _068_ (
    .a(count[0]),
    .b(count[1]),
    .z(_030_)
  );
  aoi112v0x05 _069_ (
    .a(_024_),
    .b(_030_),
    .c1(_029_),
    .c2(_016_),
    .z(_002_)
  );
  xnr2v0x05 _070_ (
    .a(_015_),
    .b(_025_),
    .z(_031_)
  );
  aoi112v0x05 _071_ (
    .a(_024_),
    .b(_031_),
    .c1(_029_),
    .c2(_016_),
    .z(_003_)
  );
  xoon21v0x05 _072_ (
    .a1(_015_),
    .a2(_025_),
    .b(count[3]),
    .z(_032_)
  );
  aoi112v0x05 _073_ (
    .a(_024_),
    .b(_032_),
    .c1(_029_),
    .c2(_016_),
    .z(_004_)
  );
  an4v0x05 _074_ (
    .a(count[0]),
    .b(count[3]),
    .c(count[2]),
    .d(count[1]),
    .z(_033_)
  );
  xnr2v0x05 _075_ (
    .a(count[4]),
    .b(_033_),
    .z(_034_)
  );
  aoi112v0x05 _076_ (
    .a(_024_),
    .b(_034_),
    .c1(_029_),
    .c2(_016_),
    .z(_005_)
  );
  xaoi21v0x05 _077_ (
    .a1(count[4]),
    .a2(_033_),
    .b(count[5]),
    .z(_035_)
  );
  aoi112v0x05 _078_ (
    .a(_024_),
    .b(_035_),
    .c1(_029_),
    .c2(_016_),
    .z(_006_)
  );
  an2v0x05 _079_ (
    .a(count[5]),
    .b(count[4]),
    .z(_036_)
  );
  nd2v0x05 _080_ (
    .a(_033_),
    .b(_036_),
    .z(_037_)
  );
  xnr2v0x05 _081_ (
    .a(_014_),
    .b(_037_),
    .z(_038_)
  );
  aoi112v0x05 _082_ (
    .a(_024_),
    .b(_038_),
    .c1(_029_),
    .c2(_016_),
    .z(_007_)
  );
  nd4v0x05 _083_ (
    .a(count[7]),
    .b(count[6]),
    .c(_033_),
    .d(_036_),
    .z(_039_)
  );
  xooi21v0x05 _084_ (
    .a1(_014_),
    .a2(_037_),
    .b(_013_),
    .z(_040_)
  );
  aoi112v0x05 _085_ (
    .a(_024_),
    .b(_040_),
    .c1(_029_),
    .c2(_016_),
    .z(_008_)
  );
  xnr2v0x05 _086_ (
    .a(_012_),
    .b(_039_),
    .z(_041_)
  );
  aoi112v0x05 _087_ (
    .a(_024_),
    .b(_041_),
    .c1(_029_),
    .c2(_016_),
    .z(_009_)
  );
  xoon21v0x05 _088_ (
    .a1(_012_),
    .a2(_039_),
    .b(count[9]),
    .z(_042_)
  );
  aoi112v0x05 _089_ (
    .a(_024_),
    .b(_042_),
    .c1(_029_),
    .c2(_016_),
    .z(_010_)
  );
  oai21v0x05 _090_ (
    .a1(count[0]),
    .a2(count[1]),
    .b(count[6]),
    .z(_043_)
  );
  nd3v0x05 _091_ (
    .a(count[3]),
    .b(count[2]),
    .c(_036_),
    .z(_044_)
  );
  oai21v0x05 _092_ (
    .a1(_043_),
    .a2(_044_),
    .b(_013_),
    .z(_045_)
  );
  nr4v1x05 _093_ (
    .a(count[3]),
    .b(count[2]),
    .c(_018_),
    .d(_022_),
    .z(_046_)
  );
  mxn2v0x05 _094_ (
    .a0(_013_),
    .a1(_025_),
    .s(_046_),
    .z(_047_)
  );
  nd3v0x05 _095_ (
    .a(_020_),
    .b(_045_),
    .c(_047_),
    .z(_011_)
  );
  (* src = "clock.v:10.4-14.16" *)
  dfnt1v0x2 _096_ (
    .cp(line_clk),
    .d(_001_),
    .z(count[0])
  );
  (* src = "clock.v:10.4-14.16" *)
  dfnt1v0x2 _097_ (
    .cp(line_clk),
    .d(_002_),
    .z(count[1])
  );
  (* src = "clock.v:10.4-14.16" *)
  dfnt1v0x2 _098_ (
    .cp(line_clk),
    .d(_003_),
    .z(count[2])
  );
  (* src = "clock.v:10.4-14.16" *)
  dfnt1v0x2 _099_ (
    .cp(line_clk),
    .d(_004_),
    .z(count[3])
  );
  (* src = "clock.v:10.4-14.16" *)
  dfnt1v0x2 _100_ (
    .cp(line_clk),
    .d(_005_),
    .z(count[4])
  );
  (* src = "clock.v:10.4-14.16" *)
  dfnt1v0x2 _101_ (
    .cp(line_clk),
    .d(_006_),
    .z(count[5])
  );
  (* src = "clock.v:10.4-14.16" *)
  dfnt1v0x2 _102_ (
    .cp(line_clk),
    .d(_007_),
    .z(count[6])
  );
  (* src = "clock.v:10.4-14.16" *)
  dfnt1v0x2 _103_ (
    .cp(line_clk),
    .d(_008_),
    .z(count[7])
  );
  (* src = "clock.v:10.4-14.16" *)
  dfnt1v0x2 _104_ (
    .cp(line_clk),
    .d(_009_),
    .z(count[8])
  );
  (* src = "clock.v:10.4-14.16" *)
  dfnt1v0x2 _105_ (
    .cp(line_clk),
    .d(_010_),
    .z(count[9])
  );
  (* src = "clock.v:10.4-14.16" *)
  dfnt1v0x2 _106_ (
    .cp(line_clk),
    .d(1'h0),
    .z(count[10])
  );
  (* src = "clock.v:22.4-30.6" *)
  dfnt1v0x2 _107_ (
    .cp(line_clk),
    .d(_011_),
    .z(vsync)
  );
  (* src = "clock.v:16.4-20.18" *)
  dfnt1v0x2 _108_ (
    .cp(line_clk),
    .d(_000_),
    .z(blank)
  );
  assign blank_out = blank;
  assign vsync_out = vsync;
endmodule
