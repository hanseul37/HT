/* Generated by Yosys 0.32+74 (git sha1 b739213d9, x86_64-w64-mingw32-g++ 9.2.1 -Os) */

(* src = "rx_uart.v:26.1-160.10" *)
module uart_rx(i_Clock, i_Rx_Serial, o_Rx_DV, o_Rx_Byte);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  (* force_downto = 32'd1 *)
  (* src = "rx_uart.v:0.0-0.0|rx_uart.v:63.7-154.14|E:\\study\\yosys\\oss-cad-suite\\bin\\../share/yosys/techmap.v:575.21-575.22" *)
  wire [2:0] _097_;
  (* src = "rx_uart.v:27.17-27.24" *)
  input i_Clock;
  wire i_Clock;
  (* src = "rx_uart.v:28.17-28.28" *)
  input i_Rx_Serial;
  wire i_Rx_Serial;
  (* src = "rx_uart.v:30.17-30.26" *)
  output [7:0] o_Rx_Byte;
  wire [7:0] o_Rx_Byte;
  (* src = "rx_uart.v:29.17-29.24" *)
  output o_Rx_DV;
  wire o_Rx_DV;
  (* init = 3'h0 *)
  (* src = "rx_uart.v:44.17-44.28" *)
  wire [2:0] r_Bit_Index;
  (* init = 8'h00 *)
  (* src = "rx_uart.v:43.17-43.30" *)
  wire [7:0] r_Clock_Count;
  (* init = 8'h00 *)
  (* src = "rx_uart.v:45.17-45.26" *)
  wire [7:0] r_Rx_Byte;
  (* init = 1'h0 *)
  (* src = "rx_uart.v:46.17-46.24" *)
  wire r_Rx_DV;
  (* init = 1'h1 *)
  (* src = "rx_uart.v:41.17-41.26" *)
  wire r_Rx_Data;
  (* init = 1'h1 *)
  (* src = "rx_uart.v:40.17-40.28" *)
  wire r_Rx_Data_R;
  (* init = 3'h0 *)
  (* src = "rx_uart.v:47.17-47.26" *)
  wire [2:0] r_SM_Main;
  iv1v0x05 _098_ (
    .a(r_Clock_Count[6]),
    .z(_054_)
  );
  iv1v0x05 _099_ (
    .a(r_Bit_Index[1]),
    .z(_055_)
  );
  iv1v0x05 _100_ (
    .a(r_Bit_Index[0]),
    .z(_056_)
  );
  nr2v0x05 _101_ (
    .a(_055_),
    .b(_056_),
    .z(_057_)
  );
  nd2v0x05 _102_ (
    .a(r_Bit_Index[1]),
    .b(r_Bit_Index[0]),
    .z(_058_)
  );
  nd2v0x05 _103_ (
    .a(r_Bit_Index[2]),
    .b(_057_),
    .z(_059_)
  );
  nd3abv0x05 _104_ (
    .a(r_Clock_Count[7]),
    .b(r_Clock_Count[5]),
    .c(r_Clock_Count[6]),
    .z(_060_)
  );
  nd3av0x05 _105_ (
    .a(r_Clock_Count[0]),
    .b(r_Clock_Count[1]),
    .c(r_Clock_Count[2]),
    .z(_061_)
  );
  nd3abv0x05 _106_ (
    .a(r_Clock_Count[3]),
    .b(_060_),
    .c(r_Clock_Count[4]),
    .z(_062_)
  );
  nr2v0x05 _107_ (
    .a(r_Clock_Count[7]),
    .b(r_Clock_Count[6]),
    .z(_063_)
  );
  or2v0x05 _108_ (
    .a(r_Clock_Count[7]),
    .b(r_Clock_Count[6]),
    .z(_064_)
  );
  nd2v0x05 _109_ (
    .a(r_Clock_Count[1]),
    .b(r_Clock_Count[0]),
    .z(_065_)
  );
  aoi31v0x05 _110_ (
    .a1(r_Clock_Count[2]),
    .a2(r_Clock_Count[1]),
    .a3(r_Clock_Count[0]),
    .b(r_Clock_Count[3]),
    .z(_066_)
  );
  aoi21a2v0x05 _111_ (
    .a1(r_Clock_Count[4]),
    .a2(_066_),
    .b(_060_),
    .z(_067_)
  );
  oai22v0x05 _112_ (
    .a1(_061_),
    .a2(_062_),
    .b1(_063_),
    .b2(_067_),
    .z(_068_)
  );
  nr3av0x05 _113_ (
    .a(r_SM_Main[1]),
    .b(r_SM_Main[2]),
    .c(r_SM_Main[0]),
    .z(_069_)
  );
  an2v0x05 _114_ (
    .a(_068_),
    .b(_069_),
    .z(_070_)
  );
  nd2v0x05 _115_ (
    .a(_068_),
    .b(_069_),
    .z(_071_)
  );
  nr3abv0x05 _116_ (
    .a(r_SM_Main[0]),
    .b(r_SM_Main[1]),
    .c(r_SM_Main[2]),
    .z(_072_)
  );
  nd2av0x05 _117_ (
    .a(_068_),
    .b(_072_),
    .z(_073_)
  );
  nr3v0x05 _118_ (
    .a(r_SM_Main[0]),
    .b(r_SM_Main[1]),
    .c(r_SM_Main[2]),
    .z(_074_)
  );
  nr3av0x05 _119_ (
    .a(r_SM_Main[0]),
    .b(r_SM_Main[1]),
    .c(r_SM_Main[2]),
    .z(_075_)
  );
  nd3abv0x05 _120_ (
    .a(r_SM_Main[1]),
    .b(r_SM_Main[2]),
    .c(r_SM_Main[0]),
    .z(_076_)
  );
  nd3av0x05 _121_ (
    .a(r_Clock_Count[4]),
    .b(r_Clock_Count[3]),
    .c(r_Clock_Count[5]),
    .z(_077_)
  );
  nr4v1x05 _122_ (
    .a(r_Clock_Count[2]),
    .b(_064_),
    .c(_065_),
    .d(_077_),
    .z(_078_)
  );
  nd2av0x05 _123_ (
    .a(_078_),
    .b(_075_),
    .z(_079_)
  );
  aoi21a2bv0x05 _124_ (
    .a1(_074_),
    .a2(r_Rx_Data),
    .b(_079_),
    .z(_080_)
  );
  oai211v0x05 _125_ (
    .a1(_059_),
    .a2(_071_),
    .b(_073_),
    .c(_080_),
    .z(_097_[0])
  );
  nd3abv0x05 _126_ (
    .a(r_Rx_Data),
    .b(_076_),
    .c(_078_),
    .z(_081_)
  );
  nd3av0x05 _127_ (
    .a(_069_),
    .b(_073_),
    .c(_081_),
    .z(_097_[1])
  );
  an2v0x05 _128_ (
    .a(_068_),
    .b(_072_),
    .z(_097_[2])
  );
  oai21v0x05 _129_ (
    .a1(r_SM_Main[0]),
    .a2(r_SM_Main[1]),
    .b(r_Rx_DV),
    .z(_082_)
  );
  nd2av0x05 _130_ (
    .a(_097_[2]),
    .b(_082_),
    .z(_000_)
  );
  aoi21v0x05 _131_ (
    .a1(_068_),
    .a2(_069_),
    .b(_074_),
    .z(_083_)
  );
  or2v0x05 _132_ (
    .a(_070_),
    .b(_074_),
    .z(_084_)
  );
  an2v0x05 _133_ (
    .a(_059_),
    .b(_069_),
    .z(_085_)
  );
  nd2av0x05 _134_ (
    .a(_083_),
    .b(_085_),
    .z(_086_)
  );
  mxi2v0x05 _135_ (
    .a0(_084_),
    .a1(_086_),
    .s(_056_),
    .z(_001_)
  );
  nr2v0x05 _136_ (
    .a(r_Bit_Index[1]),
    .b(r_Bit_Index[0]),
    .z(_087_)
  );
  nr2v0x05 _137_ (
    .a(_057_),
    .b(_087_),
    .z(_088_)
  );
  iv1v0x05 _138_ (
    .a(_088_),
    .z(_089_)
  );
  oai22v0x05 _139_ (
    .a1(_055_),
    .a2(_084_),
    .b1(_086_),
    .b2(_089_),
    .z(_002_)
  );
  oai21v0x05 _140_ (
    .a1(_083_),
    .a2(_085_),
    .b(r_Bit_Index[2]),
    .z(_090_)
  );
  oai21v0x05 _141_ (
    .a1(_058_),
    .a2(_086_),
    .b(_090_),
    .z(_003_)
  );
  nd3v0x05 _142_ (
    .a(r_Rx_Data),
    .b(_075_),
    .c(_078_),
    .z(_091_)
  );
  nd2av0x05 _143_ (
    .a(r_SM_Main[2]),
    .b(_091_),
    .z(_092_)
  );
  nr2v0x05 _144_ (
    .a(_069_),
    .b(_072_),
    .z(_093_)
  );
  oai21v0x05 _145_ (
    .a1(_068_),
    .a2(_093_),
    .b(_076_),
    .z(_094_)
  );
  mxn2v0x05 _146_ (
    .a0(_094_),
    .a1(_092_),
    .s(r_Clock_Count[0]),
    .z(_004_)
  );
  xor2v0x05 _147_ (
    .a(r_Clock_Count[1]),
    .b(r_Clock_Count[0]),
    .z(_095_)
  );
  aoi22v0x05 _148_ (
    .a1(r_Clock_Count[1]),
    .a2(_092_),
    .b1(_094_),
    .b2(_095_),
    .z(_096_)
  );
  iv1v0x05 _149_ (
    .a(_096_),
    .z(_005_)
  );
  oan21v0x05 _150_ (
    .a1(_068_),
    .a2(_093_),
    .b(_079_),
    .z(_020_)
  );
  oai21v0x05 _151_ (
    .a1(_068_),
    .a2(_093_),
    .b(_079_),
    .z(_021_)
  );
  xnai21v2x05 _152_ (
    .a1(r_Clock_Count[2]),
    .a2(_065_),
    .b(_021_),
    .z(_022_)
  );
  aon21bv0x05 _153_ (
    .a1(r_Clock_Count[2]),
    .a2(r_SM_Main[2]),
    .b(_022_),
    .z(_006_)
  );
  nd2v0x05 _154_ (
    .a(r_Clock_Count[3]),
    .b(_092_),
    .z(_023_)
  );
  an4v0x05 _155_ (
    .a(r_Clock_Count[3]),
    .b(r_Clock_Count[2]),
    .c(r_Clock_Count[1]),
    .d(r_Clock_Count[0]),
    .z(_024_)
  );
  oai31v0x05 _156_ (
    .a1(_066_),
    .a2(_020_),
    .a3(_024_),
    .b(_023_),
    .z(_007_)
  );
  an2v0x05 _157_ (
    .a(r_Clock_Count[4]),
    .b(_024_),
    .z(_025_)
  );
  iv1v0x05 _158_ (
    .a(_025_),
    .z(_026_)
  );
  aoi22v0x05 _159_ (
    .a1(r_Clock_Count[4]),
    .a2(_092_),
    .b1(_094_),
    .b2(_026_),
    .z(_027_)
  );
  oan21bv0x05 _160_ (
    .a1(r_Clock_Count[4]),
    .a2(_024_),
    .b(_027_),
    .z(_008_)
  );
  nd2v0x05 _161_ (
    .a(r_Clock_Count[5]),
    .b(_025_),
    .z(_028_)
  );
  aoi22v0x05 _162_ (
    .a1(r_Clock_Count[5]),
    .a2(_092_),
    .b1(_021_),
    .b2(_028_),
    .z(_029_)
  );
  oan21bv0x05 _163_ (
    .a1(r_Clock_Count[5]),
    .a2(_025_),
    .b(_029_),
    .z(_009_)
  );
  nd3v0x05 _164_ (
    .a(r_Clock_Count[6]),
    .b(r_Clock_Count[5]),
    .c(_025_),
    .z(_030_)
  );
  aoi22v0x05 _165_ (
    .a1(r_Clock_Count[6]),
    .a2(_092_),
    .b1(_094_),
    .b2(_030_),
    .z(_031_)
  );
  aoi21v0x05 _166_ (
    .a1(_054_),
    .a2(_028_),
    .b(_031_),
    .z(_010_)
  );
  an2v0x05 _167_ (
    .a(_075_),
    .b(_030_),
    .z(_032_)
  );
  oai21v0x05 _168_ (
    .a1(_092_),
    .a2(_032_),
    .b(r_Clock_Count[7]),
    .z(_033_)
  );
  oai31v0x05 _169_ (
    .a1(r_Clock_Count[7]),
    .a2(_076_),
    .a3(_030_),
    .b(_033_),
    .z(_011_)
  );
  nr3v0x05 _170_ (
    .a(r_Bit_Index[1]),
    .b(r_Bit_Index[0]),
    .c(r_Bit_Index[2]),
    .z(_034_)
  );
  nd2v0x05 _171_ (
    .a(_070_),
    .b(_034_),
    .z(_035_)
  );
  mxn2v0x05 _172_ (
    .a0(r_Rx_Data),
    .a1(r_Rx_Byte[0]),
    .s(_035_),
    .z(_012_)
  );
  nd2v0x05 _173_ (
    .a(_055_),
    .b(r_Bit_Index[0]),
    .z(_036_)
  );
  xnr2v0x05 _174_ (
    .a(r_Bit_Index[2]),
    .b(_087_),
    .z(_037_)
  );
  xor2v0x05 _175_ (
    .a(r_Bit_Index[2]),
    .b(_087_),
    .z(_038_)
  );
  nd3v0x05 _176_ (
    .a(_068_),
    .b(_069_),
    .c(_037_),
    .z(_039_)
  );
  oai21v0x05 _177_ (
    .a1(_036_),
    .a2(_039_),
    .b(r_Rx_Byte[1]),
    .z(_040_)
  );
  nd3v0x05 _178_ (
    .a(_055_),
    .b(r_Bit_Index[0]),
    .c(r_Rx_Data),
    .z(_041_)
  );
  oai31v0x05 _179_ (
    .a1(_071_),
    .a2(_038_),
    .a3(_041_),
    .b(_040_),
    .z(_013_)
  );
  nd2v0x05 _180_ (
    .a(r_Bit_Index[1]),
    .b(_056_),
    .z(_042_)
  );
  oai21v0x05 _181_ (
    .a1(_039_),
    .a2(_042_),
    .b(r_Rx_Byte[2]),
    .z(_043_)
  );
  or2v0x05 _182_ (
    .a(r_Bit_Index[0]),
    .b(_034_),
    .z(_044_)
  );
  nd3abv0x05 _183_ (
    .a(r_Bit_Index[0]),
    .b(_034_),
    .c(r_Rx_Data),
    .z(_045_)
  );
  nd3v0x05 _184_ (
    .a(r_Bit_Index[1]),
    .b(_056_),
    .c(r_Rx_Data),
    .z(_046_)
  );
  oai21v0x05 _185_ (
    .a1(_039_),
    .a2(_046_),
    .b(_043_),
    .z(_014_)
  );
  nd3v0x05 _186_ (
    .a(r_Bit_Index[1]),
    .b(r_Bit_Index[0]),
    .c(r_Rx_Data),
    .z(_047_)
  );
  oai31v0x05 _187_ (
    .a1(r_Bit_Index[2]),
    .a2(_058_),
    .a3(_071_),
    .b(r_Rx_Byte[3]),
    .z(_048_)
  );
  oai21v0x05 _188_ (
    .a1(_039_),
    .a2(_047_),
    .b(_048_),
    .z(_015_)
  );
  oai31v0x05 _189_ (
    .a1(_071_),
    .a2(_088_),
    .a3(_044_),
    .b(r_Rx_Byte[4]),
    .z(_049_)
  );
  oai31v0x05 _190_ (
    .a1(_071_),
    .a2(_088_),
    .a3(_045_),
    .b(_049_),
    .z(_016_)
  );
  nd3v0x05 _191_ (
    .a(_068_),
    .b(_069_),
    .c(_038_),
    .z(_050_)
  );
  oai21v0x05 _192_ (
    .a1(_036_),
    .a2(_050_),
    .b(r_Rx_Byte[5]),
    .z(_051_)
  );
  oai31v0x05 _193_ (
    .a1(_071_),
    .a2(_037_),
    .a3(_041_),
    .b(_051_),
    .z(_017_)
  );
  oai21v0x05 _194_ (
    .a1(_042_),
    .a2(_050_),
    .b(r_Rx_Byte[6]),
    .z(_052_)
  );
  oai21v0x05 _195_ (
    .a1(_046_),
    .a2(_050_),
    .b(_052_),
    .z(_018_)
  );
  oai21v0x05 _196_ (
    .a1(_059_),
    .a2(_071_),
    .b(r_Rx_Byte[7]),
    .z(_053_)
  );
  oai21v0x05 _197_ (
    .a1(_047_),
    .a2(_050_),
    .b(_053_),
    .z(_019_)
  );
  (* src = "rx_uart.v:60.3-155.8" *)
  dfnt1v0x2 _198_ (
    .cp(i_Clock),
    .d(_000_),
    .z(r_Rx_DV)
  );
  (* src = "rx_uart.v:60.3-155.8" *)
  dfnt1v0x2 _199_ (
    .cp(i_Clock),
    .d(_001_),
    .z(r_Bit_Index[0])
  );
  (* src = "rx_uart.v:60.3-155.8" *)
  dfnt1v0x2 _200_ (
    .cp(i_Clock),
    .d(_002_),
    .z(r_Bit_Index[1])
  );
  (* src = "rx_uart.v:60.3-155.8" *)
  dfnt1v0x2 _201_ (
    .cp(i_Clock),
    .d(_003_),
    .z(r_Bit_Index[2])
  );
  (* src = "rx_uart.v:60.3-155.8" *)
  dfnt1v0x2 _202_ (
    .cp(i_Clock),
    .d(_004_),
    .z(r_Clock_Count[0])
  );
  (* src = "rx_uart.v:60.3-155.8" *)
  dfnt1v0x2 _203_ (
    .cp(i_Clock),
    .d(_005_),
    .z(r_Clock_Count[1])
  );
  (* src = "rx_uart.v:60.3-155.8" *)
  dfnt1v0x2 _204_ (
    .cp(i_Clock),
    .d(_006_),
    .z(r_Clock_Count[2])
  );
  (* src = "rx_uart.v:60.3-155.8" *)
  dfnt1v0x2 _205_ (
    .cp(i_Clock),
    .d(_007_),
    .z(r_Clock_Count[3])
  );
  (* src = "rx_uart.v:60.3-155.8" *)
  dfnt1v0x2 _206_ (
    .cp(i_Clock),
    .d(_008_),
    .z(r_Clock_Count[4])
  );
  (* src = "rx_uart.v:60.3-155.8" *)
  dfnt1v0x2 _207_ (
    .cp(i_Clock),
    .d(_009_),
    .z(r_Clock_Count[5])
  );
  (* src = "rx_uart.v:60.3-155.8" *)
  dfnt1v0x2 _208_ (
    .cp(i_Clock),
    .d(_010_),
    .z(r_Clock_Count[6])
  );
  (* src = "rx_uart.v:60.3-155.8" *)
  dfnt1v0x2 _209_ (
    .cp(i_Clock),
    .d(_011_),
    .z(r_Clock_Count[7])
  );
  (* src = "rx_uart.v:60.3-155.8" *)
  dfnt1v0x2 _210_ (
    .cp(i_Clock),
    .d(_012_),
    .z(r_Rx_Byte[0])
  );
  (* src = "rx_uart.v:60.3-155.8" *)
  dfnt1v0x2 _211_ (
    .cp(i_Clock),
    .d(_013_),
    .z(r_Rx_Byte[1])
  );
  (* src = "rx_uart.v:60.3-155.8" *)
  dfnt1v0x2 _212_ (
    .cp(i_Clock),
    .d(_014_),
    .z(r_Rx_Byte[2])
  );
  (* src = "rx_uart.v:60.3-155.8" *)
  dfnt1v0x2 _213_ (
    .cp(i_Clock),
    .d(_015_),
    .z(r_Rx_Byte[3])
  );
  (* src = "rx_uart.v:60.3-155.8" *)
  dfnt1v0x2 _214_ (
    .cp(i_Clock),
    .d(_016_),
    .z(r_Rx_Byte[4])
  );
  (* src = "rx_uart.v:60.3-155.8" *)
  dfnt1v0x2 _215_ (
    .cp(i_Clock),
    .d(_017_),
    .z(r_Rx_Byte[5])
  );
  (* src = "rx_uart.v:60.3-155.8" *)
  dfnt1v0x2 _216_ (
    .cp(i_Clock),
    .d(_018_),
    .z(r_Rx_Byte[6])
  );
  (* src = "rx_uart.v:60.3-155.8" *)
  dfnt1v0x2 _217_ (
    .cp(i_Clock),
    .d(_019_),
    .z(r_Rx_Byte[7])
  );
  (* src = "rx_uart.v:60.3-155.8" *)
  dfnt1v0x2 _218_ (
    .cp(i_Clock),
    .d(_097_[0]),
    .z(r_SM_Main[0])
  );
  (* src = "rx_uart.v:60.3-155.8" *)
  dfnt1v0x2 _219_ (
    .cp(i_Clock),
    .d(_097_[1]),
    .z(r_SM_Main[1])
  );
  (* src = "rx_uart.v:60.3-155.8" *)
  dfnt1v0x2 _220_ (
    .cp(i_Clock),
    .d(_097_[2]),
    .z(r_SM_Main[2])
  );
  (* src = "rx_uart.v:52.3-56.8" *)
  dfnt1v0x2 _221_ (
    .cp(i_Clock),
    .d(i_Rx_Serial),
    .z(r_Rx_Data_R)
  );
  (* src = "rx_uart.v:52.3-56.8" *)
  dfnt1v0x2 _222_ (
    .cp(i_Clock),
    .d(r_Rx_Data_R),
    .z(r_Rx_Data)
  );
  assign o_Rx_Byte = r_Rx_Byte;
  assign o_Rx_DV = r_Rx_DV;
endmodule

(* src = "tx_uart.v:26.1-157.10" *)
module uart_tx(i_Clock, i_Tx_DV, i_Tx_Byte, o_Tx_Active, o_Tx_Serial, o_Tx_Done);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  (* force_downto = 32'd1 *)
  (* src = "tx_uart.v:0.0-0.0|tx_uart.v:52.7-151.14|E:\\study\\yosys\\oss-cad-suite\\bin\\../share/yosys/techmap.v:575.21-575.22" *)
  wire [2:0] _054_;
  (* src = "tx_uart.v:27.16-27.23" *)
  input i_Clock;
  wire i_Clock;
  (* src = "tx_uart.v:29.16-29.25" *)
  input [7:0] i_Tx_Byte;
  wire [7:0] i_Tx_Byte;
  (* src = "tx_uart.v:28.16-28.23" *)
  input i_Tx_DV;
  wire i_Tx_DV;
  (* src = "tx_uart.v:30.16-30.27" *)
  output o_Tx_Active;
  wire o_Tx_Active;
  (* src = "tx_uart.v:32.16-32.25" *)
  output o_Tx_Done;
  wire o_Tx_Done;
  (* src = "tx_uart.v:31.19-31.30" *)
  output o_Tx_Serial;
  wire o_Tx_Serial;
  (* init = 3'h0 *)
  (* src = "tx_uart.v:44.16-44.27" *)
  wire [2:0] r_Bit_Index;
  (* init = 8'h00 *)
  (* src = "tx_uart.v:43.16-43.29" *)
  wire [7:0] r_Clock_Count;
  (* init = 3'h0 *)
  (* src = "tx_uart.v:42.16-42.25" *)
  wire [2:0] r_SM_Main;
  (* init = 1'h0 *)
  (* src = "tx_uart.v:47.16-47.27" *)
  wire r_Tx_Active;
  (* init = 8'h00 *)
  (* src = "tx_uart.v:45.16-45.25" *)
  wire [7:0] r_Tx_Data;
  (* init = 1'h0 *)
  (* src = "tx_uart.v:46.16-46.25" *)
  wire r_Tx_Done;
  iv1v0x05 _055_ (
    .a(r_Bit_Index[1]),
    .z(_024_)
  );
  iv1v0x05 _056_ (
    .a(r_Bit_Index[0]),
    .z(_025_)
  );
  iv1v0x05 _057_ (
    .a(r_Tx_Active),
    .z(_026_)
  );
  an2v0x05 _058_ (
    .a(r_Bit_Index[1]),
    .b(r_Bit_Index[0]),
    .z(_027_)
  );
  nr4v1x05 _059_ (
    .a(r_Clock_Count[2]),
    .b(r_Clock_Count[1]),
    .c(r_Clock_Count[7]),
    .d(r_Clock_Count[0]),
    .z(_028_)
  );
  nr4v1x05 _060_ (
    .a(r_Clock_Count[6]),
    .b(r_Clock_Count[5]),
    .c(r_Clock_Count[4]),
    .d(r_Clock_Count[3]),
    .z(_029_)
  );
  nd2v0x05 _061_ (
    .a(_028_),
    .b(_029_),
    .z(_030_)
  );
  nd3abv0x05 _062_ (
    .a(r_SM_Main[0]),
    .b(r_SM_Main[2]),
    .c(r_SM_Main[1]),
    .z(_031_)
  );
  aoi21v0x05 _063_ (
    .a1(_028_),
    .a2(_029_),
    .b(_031_),
    .z(_032_)
  );
  nd3v0x05 _064_ (
    .a(r_Bit_Index[2]),
    .b(_027_),
    .c(_032_),
    .z(_033_)
  );
  nd2av0x05 _065_ (
    .a(r_SM_Main[2]),
    .b(r_SM_Main[0]),
    .z(_034_)
  );
  nr2v0x05 _066_ (
    .a(r_SM_Main[0]),
    .b(r_SM_Main[1]),
    .z(_035_)
  );
  nr3v0x05 _067_ (
    .a(r_SM_Main[0]),
    .b(r_SM_Main[1]),
    .c(r_SM_Main[2]),
    .z(_036_)
  );
  nd2v0x05 _068_ (
    .a(i_Tx_DV),
    .b(_036_),
    .z(_037_)
  );
  oai211v0x05 _069_ (
    .a1(_030_),
    .a2(_034_),
    .b(_037_),
    .c(_033_),
    .z(_054_[0])
  );
  nr2v0x05 _070_ (
    .a(r_SM_Main[1]),
    .b(_034_),
    .z(_038_)
  );
  nr3abv0x05 _071_ (
    .a(r_SM_Main[0]),
    .b(r_SM_Main[1]),
    .c(r_SM_Main[2]),
    .z(_039_)
  );
  mxi2v0x05 _072_ (
    .a0(_039_),
    .a1(_038_),
    .s(_030_),
    .z(_040_)
  );
  nd2v0x05 _073_ (
    .a(_031_),
    .b(_040_),
    .z(_054_[1])
  );
  an2v0x05 _074_ (
    .a(_030_),
    .b(_039_),
    .z(_054_[2])
  );
  oai21v0x05 _075_ (
    .a1(_032_),
    .a2(_036_),
    .b(r_Bit_Index[0]),
    .z(_041_)
  );
  aoi21v0x05 _076_ (
    .a1(r_Bit_Index[2]),
    .a2(_027_),
    .b(_031_),
    .z(_042_)
  );
  oai21v0x05 _077_ (
    .a1(_032_),
    .a2(_036_),
    .b(_042_),
    .z(_043_)
  );
  aoi21bv0x05 _078_ (
    .a1(_025_),
    .a2(_043_),
    .b(_041_),
    .z(_000_)
  );
  oai22v0x05 _079_ (
    .a1(_027_),
    .a2(_031_),
    .b1(_032_),
    .b2(_036_),
    .z(_044_)
  );
  aoi21bv0x05 _080_ (
    .a1(_024_),
    .a2(_041_),
    .b(_044_),
    .z(_001_)
  );
  oai211v0x05 _081_ (
    .a1(_032_),
    .a2(_036_),
    .b(_042_),
    .c(_027_),
    .z(_045_)
  );
  aon21bv0x05 _082_ (
    .a1(r_Bit_Index[2]),
    .a2(_044_),
    .b(_045_),
    .z(_002_)
  );
  mxi2v0x05 _083_ (
    .a0(r_Tx_Data[6]),
    .a1(r_Tx_Data[7]),
    .s(r_Bit_Index[0]),
    .z(_046_)
  );
  mxi2v0x05 _084_ (
    .a0(r_Tx_Data[4]),
    .a1(r_Tx_Data[5]),
    .s(r_Bit_Index[0]),
    .z(_047_)
  );
  mxi2v0x05 _085_ (
    .a0(_046_),
    .a1(_047_),
    .s(_024_),
    .z(_048_)
  );
  mxi2v0x05 _086_ (
    .a0(r_Tx_Data[2]),
    .a1(r_Tx_Data[3]),
    .s(r_Bit_Index[0]),
    .z(_049_)
  );
  mxi2v0x05 _087_ (
    .a0(r_Tx_Data[0]),
    .a1(r_Tx_Data[1]),
    .s(r_Bit_Index[0]),
    .z(_050_)
  );
  mxi2v0x05 _088_ (
    .a0(_049_),
    .a1(_050_),
    .s(_024_),
    .z(_051_)
  );
  mxi2v0x05 _089_ (
    .a0(_051_),
    .a1(_048_),
    .s(r_Bit_Index[2]),
    .z(_052_)
  );
  aoi112v0x05 _090_ (
    .a(_036_),
    .b(_039_),
    .c1(r_SM_Main[2]),
    .c2(o_Tx_Serial),
    .z(_053_)
  );
  oai21v0x05 _091_ (
    .a1(_031_),
    .a2(_052_),
    .b(_053_),
    .z(_003_)
  );
  mxn2v0x05 _092_ (
    .a0(i_Tx_Byte[0]),
    .a1(r_Tx_Data[0]),
    .s(_037_),
    .z(_004_)
  );
  mxn2v0x05 _093_ (
    .a0(i_Tx_Byte[1]),
    .a1(r_Tx_Data[1]),
    .s(_037_),
    .z(_005_)
  );
  mxn2v0x05 _094_ (
    .a0(i_Tx_Byte[2]),
    .a1(r_Tx_Data[2]),
    .s(_037_),
    .z(_006_)
  );
  mxn2v0x05 _095_ (
    .a0(i_Tx_Byte[3]),
    .a1(r_Tx_Data[3]),
    .s(_037_),
    .z(_007_)
  );
  mxn2v0x05 _096_ (
    .a0(i_Tx_Byte[4]),
    .a1(r_Tx_Data[4]),
    .s(_037_),
    .z(_008_)
  );
  mxn2v0x05 _097_ (
    .a0(i_Tx_Byte[5]),
    .a1(r_Tx_Data[5]),
    .s(_037_),
    .z(_009_)
  );
  mxn2v0x05 _098_ (
    .a0(i_Tx_Byte[6]),
    .a1(r_Tx_Data[6]),
    .s(_037_),
    .z(_010_)
  );
  mxn2v0x05 _099_ (
    .a0(i_Tx_Byte[7]),
    .a1(r_Tx_Data[7]),
    .s(_037_),
    .z(_011_)
  );
  mxi2v0x05 _100_ (
    .a0(r_Tx_Done),
    .a1(r_SM_Main[2]),
    .s(_035_),
    .z(_022_)
  );
  nd2av0x05 _101_ (
    .a(_054_[2]),
    .b(_022_),
    .z(_012_)
  );
  aoi21v0x05 _102_ (
    .a1(_026_),
    .a2(_037_),
    .b(_054_[2]),
    .z(_013_)
  );
  nd2v0x05 _103_ (
    .a(r_SM_Main[2]),
    .b(r_Clock_Count[0]),
    .z(_023_)
  );
  oai31v0x05 _104_ (
    .a1(r_SM_Main[2]),
    .a2(_030_),
    .a3(_035_),
    .b(_023_),
    .z(_014_)
  );
  an2v0x05 _105_ (
    .a(r_SM_Main[2]),
    .b(r_Clock_Count[1]),
    .z(_015_)
  );
  an2v0x05 _106_ (
    .a(r_SM_Main[2]),
    .b(r_Clock_Count[2]),
    .z(_016_)
  );
  an2v0x05 _107_ (
    .a(r_SM_Main[2]),
    .b(r_Clock_Count[3]),
    .z(_017_)
  );
  an2v0x05 _108_ (
    .a(r_SM_Main[2]),
    .b(r_Clock_Count[4]),
    .z(_018_)
  );
  an2v0x05 _109_ (
    .a(r_SM_Main[2]),
    .b(r_Clock_Count[5]),
    .z(_019_)
  );
  an2v0x05 _110_ (
    .a(r_SM_Main[2]),
    .b(r_Clock_Count[6]),
    .z(_020_)
  );
  an2v0x05 _111_ (
    .a(r_SM_Main[2]),
    .b(r_Clock_Count[7]),
    .z(_021_)
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _112_ (
    .cp(i_Clock),
    .d(_000_),
    .z(r_Bit_Index[0])
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _113_ (
    .cp(i_Clock),
    .d(_001_),
    .z(r_Bit_Index[1])
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _114_ (
    .cp(i_Clock),
    .d(_002_),
    .z(r_Bit_Index[2])
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _115_ (
    .cp(i_Clock),
    .d(_054_[0]),
    .z(r_SM_Main[0])
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _116_ (
    .cp(i_Clock),
    .d(_054_[1]),
    .z(r_SM_Main[1])
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _117_ (
    .cp(i_Clock),
    .d(_054_[2]),
    .z(r_SM_Main[2])
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _118_ (
    .cp(i_Clock),
    .d(_003_),
    .z(o_Tx_Serial)
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _119_ (
    .cp(i_Clock),
    .d(_004_),
    .z(r_Tx_Data[0])
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _120_ (
    .cp(i_Clock),
    .d(_005_),
    .z(r_Tx_Data[1])
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _121_ (
    .cp(i_Clock),
    .d(_006_),
    .z(r_Tx_Data[2])
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _122_ (
    .cp(i_Clock),
    .d(_007_),
    .z(r_Tx_Data[3])
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _123_ (
    .cp(i_Clock),
    .d(_008_),
    .z(r_Tx_Data[4])
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _124_ (
    .cp(i_Clock),
    .d(_009_),
    .z(r_Tx_Data[5])
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _125_ (
    .cp(i_Clock),
    .d(_010_),
    .z(r_Tx_Data[6])
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _126_ (
    .cp(i_Clock),
    .d(_011_),
    .z(r_Tx_Data[7])
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _127_ (
    .cp(i_Clock),
    .d(_012_),
    .z(r_Tx_Done)
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _128_ (
    .cp(i_Clock),
    .d(_013_),
    .z(r_Tx_Active)
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _129_ (
    .cp(i_Clock),
    .d(_014_),
    .z(r_Clock_Count[0])
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _130_ (
    .cp(i_Clock),
    .d(_015_),
    .z(r_Clock_Count[1])
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _131_ (
    .cp(i_Clock),
    .d(_016_),
    .z(r_Clock_Count[2])
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _132_ (
    .cp(i_Clock),
    .d(_017_),
    .z(r_Clock_Count[3])
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _133_ (
    .cp(i_Clock),
    .d(_018_),
    .z(r_Clock_Count[4])
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _134_ (
    .cp(i_Clock),
    .d(_019_),
    .z(r_Clock_Count[5])
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _135_ (
    .cp(i_Clock),
    .d(_020_),
    .z(r_Clock_Count[6])
  );
  (* src = "tx_uart.v:49.3-152.8" *)
  dfnt1v0x2 _136_ (
    .cp(i_Clock),
    .d(_021_),
    .z(r_Clock_Count[7])
  );
  assign o_Tx_Active = r_Tx_Active;
  assign o_Tx_Done = r_Tx_Done;
endmodule
