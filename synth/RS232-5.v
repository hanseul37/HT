/* Generated by Yosys 0.32+74 (git sha1 b739213d9, x86_64-w64-mingw32-g++ 9.2.1 -Os) */

(* src = "receiver.v:3.1-73.10" *)
module receiver(clk, rx, ready, data, rst);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  (* src = "receiver.v:7.7-7.10" *)
  input clk;
  wire clk;
  (* src = "receiver.v:13.11-13.14" *)
  wire [8:0] cnt;
  (* src = "receiver.v:12.11-12.18" *)
  wire [3:0] counter;
  (* src = "receiver.v:9.14-9.18" *)
  output [7:0] data;
  wire [7:0] data;
  (* src = "receiver.v:10.11-10.17" *)
  wire [7:0] data_r;
  (* init = 1'h1 *)
  (* src = "receiver.v:17.5-17.6" *)
  wire k;
  (* src = "receiver.v:8.12-8.17" *)
  output ready;
  wire ready;
  (* src = "receiver.v:6.7-6.10" *)
  input rst;
  wire rst;
  (* src = "receiver.v:5.7-5.9" *)
  input rx;
  wire rx;
  (* init = 2'h0 *)
  (* src = "receiver.v:14.11-14.16" *)
  wire [1:0] state;
  (* init = 1'h0 *)
  (* src = "receiver.v:16.5-16.9" *)
  wire tick;
  iv1v0x05 _085_ (
    .a(counter[0]),
    .z(_049_)
  );
  iv1v0x05 _086_ (
    .a(tick),
    .z(_050_)
  );
  iv1v0x05 _087_ (
    .a(counter[1]),
    .z(_051_)
  );
  iv1v0x05 _088_ (
    .a(counter[3]),
    .z(_052_)
  );
  nd2av0x05 _089_ (
    .a(state[0]),
    .b(state[1]),
    .z(_053_)
  );
  oai211v0x05 _090_ (
    .a1(state[0]),
    .a2(state[1]),
    .b(_050_),
    .c(ready),
    .z(_054_)
  );
  nd3v0x05 _091_ (
    .a(state[0]),
    .b(state[1]),
    .c(tick),
    .z(_055_)
  );
  nd2v0x05 _092_ (
    .a(_054_),
    .b(_055_),
    .z(_000_)
  );
  nr3abv0x05 _093_ (
    .a(state[1]),
    .b(tick),
    .c(state[0]),
    .z(_056_)
  );
  nd3av0x05 _094_ (
    .a(state[0]),
    .b(state[1]),
    .c(tick),
    .z(_057_)
  );
  or4v0x05 _095_ (
    .a(counter[0]),
    .b(counter[1]),
    .c(counter[3]),
    .d(counter[2]),
    .z(_058_)
  );
  nr2v0x05 _096_ (
    .a(_057_),
    .b(_058_),
    .z(_059_)
  );
  mxn2v0x05 _097_ (
    .a0(data_r[0]),
    .a1(rx),
    .s(_059_),
    .z(_001_)
  );
  nd2v0x05 _098_ (
    .a(counter[0]),
    .b(_051_),
    .z(_060_)
  );
  nd3v0x05 _099_ (
    .a(_049_),
    .b(_051_),
    .c(counter[2]),
    .z(_061_)
  );
  xooi21v0x05 _100_ (
    .a1(counter[0]),
    .a2(counter[1]),
    .b(counter[2]),
    .z(_062_)
  );
  xoon21v0x05 _101_ (
    .a1(counter[0]),
    .a2(counter[1]),
    .b(counter[2]),
    .z(_063_)
  );
  oai31v0x05 _102_ (
    .a1(counter[0]),
    .a2(counter[1]),
    .a3(counter[2]),
    .b(counter[3]),
    .z(_064_)
  );
  nd3v0x05 _103_ (
    .a(_056_),
    .b(_058_),
    .c(_064_),
    .z(_065_)
  );
  nd4v0x05 _104_ (
    .a(_056_),
    .b(_058_),
    .c(_063_),
    .d(_064_),
    .z(_066_)
  );
  oai21v0x05 _105_ (
    .a1(_060_),
    .a2(_066_),
    .b(data_r[1]),
    .z(_067_)
  );
  xnr2v0x05 _106_ (
    .a(counter[0]),
    .b(counter[1]),
    .z(_068_)
  );
  nd3v0x05 _107_ (
    .a(counter[0]),
    .b(rx),
    .c(_051_),
    .z(_069_)
  );
  oai21v0x05 _108_ (
    .a1(_066_),
    .a2(_069_),
    .b(_067_),
    .z(_002_)
  );
  nd2v0x05 _109_ (
    .a(_049_),
    .b(counter[1]),
    .z(_070_)
  );
  oai21v0x05 _110_ (
    .a1(_066_),
    .a2(_070_),
    .b(data_r[2]),
    .z(_071_)
  );
  nd3v0x05 _111_ (
    .a(_049_),
    .b(rx),
    .c(counter[1]),
    .z(_072_)
  );
  oai21v0x05 _112_ (
    .a1(_066_),
    .a2(_072_),
    .b(_071_),
    .z(_003_)
  );
  nd3v0x05 _113_ (
    .a(counter[0]),
    .b(counter[1]),
    .c(_063_),
    .z(_073_)
  );
  oai21v0x05 _114_ (
    .a1(_065_),
    .a2(_073_),
    .b(data_r[3]),
    .z(_074_)
  );
  nd3v0x05 _115_ (
    .a(counter[0]),
    .b(rx),
    .c(counter[1]),
    .z(_075_)
  );
  oai21v0x05 _116_ (
    .a1(_066_),
    .a2(_075_),
    .b(_074_),
    .z(_004_)
  );
  oai21v0x05 _117_ (
    .a1(_061_),
    .a2(_065_),
    .b(data_r[4]),
    .z(_076_)
  );
  nd4v0x05 _118_ (
    .a(_049_),
    .b(rx),
    .c(_051_),
    .d(_058_),
    .z(_077_)
  );
  oai21v0x05 _119_ (
    .a1(_066_),
    .a2(_077_),
    .b(_076_),
    .z(_005_)
  );
  nd4v0x05 _120_ (
    .a(_056_),
    .b(_058_),
    .c(_062_),
    .d(_064_),
    .z(_078_)
  );
  oai21v0x05 _121_ (
    .a1(_060_),
    .a2(_078_),
    .b(data_r[5]),
    .z(_079_)
  );
  oai21v0x05 _122_ (
    .a1(_069_),
    .a2(_078_),
    .b(_079_),
    .z(_006_)
  );
  oai21v0x05 _123_ (
    .a1(_070_),
    .a2(_078_),
    .b(data_r[6]),
    .z(_080_)
  );
  oai21v0x05 _124_ (
    .a1(_072_),
    .a2(_078_),
    .b(_080_),
    .z(_007_)
  );
  nd3v0x05 _125_ (
    .a(counter[0]),
    .b(counter[1]),
    .c(counter[2]),
    .z(_081_)
  );
  nd4v0x05 _126_ (
    .a(counter[0]),
    .b(counter[1]),
    .c(_052_),
    .d(counter[2]),
    .z(_082_)
  );
  oai21v0x05 _127_ (
    .a1(_057_),
    .a2(_082_),
    .b(data_r[7]),
    .z(_083_)
  );
  oai21v0x05 _128_ (
    .a1(_075_),
    .a2(_078_),
    .b(_083_),
    .z(_008_)
  );
  nd2v0x05 _129_ (
    .a(state[0]),
    .b(_050_),
    .z(_084_)
  );
  aoi21a2v0x05 _130_ (
    .a1(tick),
    .a2(_082_),
    .b(_053_),
    .z(_026_)
  );
  aoi21a2v0x05 _131_ (
    .a1(rst),
    .a2(rx),
    .b(state[1]),
    .z(_027_)
  );
  oai31v0x05 _132_ (
    .a1(state[0]),
    .a2(_026_),
    .a3(_027_),
    .b(_084_),
    .z(_009_)
  );
  xaon21v0x05 _133_ (
    .a1(state[0]),
    .a2(tick),
    .b(state[1]),
    .z(_010_)
  );
  nr3abv0x05 _134_ (
    .a(cnt[7]),
    .b(cnt[8]),
    .c(cnt[6]),
    .z(_028_)
  );
  an2v0x05 _135_ (
    .a(cnt[5]),
    .b(cnt[4]),
    .z(_029_)
  );
  nr2av0x1 _136_ (
    .a(cnt[0]),
    .b(cnt[1]),
    .z(_030_)
  );
  nr2v0x05 _137_ (
    .a(cnt[3]),
    .b(cnt[2]),
    .z(_031_)
  );
  an4v0x05 _138_ (
    .a(_028_),
    .b(_029_),
    .c(_030_),
    .d(_031_),
    .z(_032_)
  );
  aoi21v0x05 _139_ (
    .a1(k),
    .a2(_032_),
    .b(ready),
    .z(_033_)
  );
  aoi21v0x05 _140_ (
    .a1(_050_),
    .a2(ready),
    .b(_033_),
    .z(_011_)
  );
  oan21v0x05 _141_ (
    .a1(k),
    .a2(_032_),
    .b(_033_),
    .z(_012_)
  );
  cgi2v0x05 _142_ (
    .a(state[0]),
    .b(state[1]),
    .c(_050_),
    .z(_034_)
  );
  mxi2v0x05 _143_ (
    .a0(_057_),
    .a1(_034_),
    .s(counter[0]),
    .z(_013_)
  );
  oai22v0x05 _144_ (
    .a1(_057_),
    .a2(_068_),
    .b1(_034_),
    .b2(_051_),
    .z(_014_)
  );
  aoi21v0x05 _145_ (
    .a1(counter[0]),
    .a2(counter[1]),
    .b(_057_),
    .z(_035_)
  );
  oai21a2v0x05 _146_ (
    .a1(_035_),
    .a2(_034_),
    .b(counter[2]),
    .z(_036_)
  );
  oai21v0x05 _147_ (
    .a1(_057_),
    .a2(_073_),
    .b(_036_),
    .z(_015_)
  );
  aoi21bv0x05 _148_ (
    .a1(_056_),
    .a2(_081_),
    .b(_034_),
    .z(_037_)
  );
  oai22v0x05 _149_ (
    .a1(_057_),
    .a2(_082_),
    .b1(_037_),
    .b2(_052_),
    .z(_016_)
  );
  or2v0x05 _150_ (
    .a(ready),
    .b(_032_),
    .z(_038_)
  );
  nr2v0x05 _151_ (
    .a(cnt[0]),
    .b(_038_),
    .z(_017_)
  );
  xnr2v0x05 _152_ (
    .a(cnt[0]),
    .b(cnt[1]),
    .z(_039_)
  );
  nr2v0x05 _153_ (
    .a(_038_),
    .b(_039_),
    .z(_018_)
  );
  xaoi21v0x05 _154_ (
    .a1(cnt[0]),
    .a2(cnt[1]),
    .b(cnt[2]),
    .z(_040_)
  );
  nr2v0x05 _155_ (
    .a(_038_),
    .b(_040_),
    .z(_019_)
  );
  aoi31v0x05 _156_ (
    .a1(cnt[0]),
    .a2(cnt[1]),
    .a3(cnt[2]),
    .b(cnt[3]),
    .z(_041_)
  );
  an4v0x05 _157_ (
    .a(cnt[0]),
    .b(cnt[1]),
    .c(cnt[3]),
    .d(cnt[2]),
    .z(_042_)
  );
  nr3v0x05 _158_ (
    .a(_038_),
    .b(_041_),
    .c(_042_),
    .z(_020_)
  );
  xnr2v0x05 _159_ (
    .a(cnt[4]),
    .b(_042_),
    .z(_043_)
  );
  nr2v0x05 _160_ (
    .a(_038_),
    .b(_043_),
    .z(_021_)
  );
  xaoi21v0x05 _161_ (
    .a1(cnt[4]),
    .a2(_042_),
    .b(cnt[5]),
    .z(_044_)
  );
  nr2v0x05 _162_ (
    .a(_038_),
    .b(_044_),
    .z(_022_)
  );
  an3v0x05 _163_ (
    .a(cnt[6]),
    .b(_029_),
    .c(_042_),
    .z(_045_)
  );
  aoi21v0x05 _164_ (
    .a1(_029_),
    .a2(_042_),
    .b(cnt[6]),
    .z(_046_)
  );
  nr3v0x05 _165_ (
    .a(_038_),
    .b(_045_),
    .c(_046_),
    .z(_023_)
  );
  xnr2v0x05 _166_ (
    .a(cnt[7]),
    .b(_045_),
    .z(_047_)
  );
  nr2v0x05 _167_ (
    .a(_038_),
    .b(_047_),
    .z(_024_)
  );
  xaoi21v0x05 _168_ (
    .a1(cnt[7]),
    .a2(_045_),
    .b(cnt[8]),
    .z(_048_)
  );
  nr2v0x05 _169_ (
    .a(_038_),
    .b(_048_),
    .z(_025_)
  );
  (* src = "receiver.v:49.1-72.4" *)
  dfnt1v0x2 _170_ (
    .cp(clk),
    .d(_000_),
    .z(ready)
  );
  (* src = "receiver.v:49.1-72.4" *)
  dfnt1v0x2 _171_ (
    .cp(clk),
    .d(_001_),
    .z(data_r[0])
  );
  (* src = "receiver.v:49.1-72.4" *)
  dfnt1v0x2 _172_ (
    .cp(clk),
    .d(_002_),
    .z(data_r[1])
  );
  (* src = "receiver.v:49.1-72.4" *)
  dfnt1v0x2 _173_ (
    .cp(clk),
    .d(_003_),
    .z(data_r[2])
  );
  (* src = "receiver.v:49.1-72.4" *)
  dfnt1v0x2 _174_ (
    .cp(clk),
    .d(_004_),
    .z(data_r[3])
  );
  (* src = "receiver.v:49.1-72.4" *)
  dfnt1v0x2 _175_ (
    .cp(clk),
    .d(_005_),
    .z(data_r[4])
  );
  (* src = "receiver.v:49.1-72.4" *)
  dfnt1v0x2 _176_ (
    .cp(clk),
    .d(_006_),
    .z(data_r[5])
  );
  (* src = "receiver.v:49.1-72.4" *)
  dfnt1v0x2 _177_ (
    .cp(clk),
    .d(_007_),
    .z(data_r[6])
  );
  (* src = "receiver.v:49.1-72.4" *)
  dfnt1v0x2 _178_ (
    .cp(clk),
    .d(_008_),
    .z(data_r[7])
  );
  (* src = "receiver.v:37.1-46.4" *)
  dfnt1v0x2 _179_ (
    .cp(clk),
    .d(_009_),
    .z(state[0])
  );
  (* src = "receiver.v:37.1-46.4" *)
  dfnt1v0x2 _180_ (
    .cp(clk),
    .d(_010_),
    .z(state[1])
  );
  (* src = "receiver.v:19.1-35.4" *)
  dfnt1v0x2 _181_ (
    .cp(clk),
    .d(_011_),
    .z(tick)
  );
  (* src = "receiver.v:19.1-35.4" *)
  dfnt1v0x2 _182_ (
    .cp(clk),
    .d(_012_),
    .z(k)
  );
  (* src = "receiver.v:49.1-72.4" *)
  dfnt1v0x2 _183_ (
    .cp(clk),
    .d(_013_),
    .z(counter[0])
  );
  (* src = "receiver.v:49.1-72.4" *)
  dfnt1v0x2 _184_ (
    .cp(clk),
    .d(_014_),
    .z(counter[1])
  );
  (* src = "receiver.v:49.1-72.4" *)
  dfnt1v0x2 _185_ (
    .cp(clk),
    .d(_015_),
    .z(counter[2])
  );
  (* src = "receiver.v:49.1-72.4" *)
  dfnt1v0x2 _186_ (
    .cp(clk),
    .d(_016_),
    .z(counter[3])
  );
  (* src = "receiver.v:19.1-35.4" *)
  dfnt1v0x2 _187_ (
    .cp(clk),
    .d(_017_),
    .z(cnt[0])
  );
  (* src = "receiver.v:19.1-35.4" *)
  dfnt1v0x2 _188_ (
    .cp(clk),
    .d(_018_),
    .z(cnt[1])
  );
  (* src = "receiver.v:19.1-35.4" *)
  dfnt1v0x2 _189_ (
    .cp(clk),
    .d(_019_),
    .z(cnt[2])
  );
  (* src = "receiver.v:19.1-35.4" *)
  dfnt1v0x2 _190_ (
    .cp(clk),
    .d(_020_),
    .z(cnt[3])
  );
  (* src = "receiver.v:19.1-35.4" *)
  dfnt1v0x2 _191_ (
    .cp(clk),
    .d(_021_),
    .z(cnt[4])
  );
  (* src = "receiver.v:19.1-35.4" *)
  dfnt1v0x2 _192_ (
    .cp(clk),
    .d(_022_),
    .z(cnt[5])
  );
  (* src = "receiver.v:19.1-35.4" *)
  dfnt1v0x2 _193_ (
    .cp(clk),
    .d(_023_),
    .z(cnt[6])
  );
  (* src = "receiver.v:19.1-35.4" *)
  dfnt1v0x2 _194_ (
    .cp(clk),
    .d(_024_),
    .z(cnt[7])
  );
  (* src = "receiver.v:19.1-35.4" *)
  dfnt1v0x2 _195_ (
    .cp(clk),
    .d(_025_),
    .z(cnt[8])
  );
  assign data = data_r;
endmodule

(* src = "transmitter.v:21.1-88.10" *)
module transmitter(tx, clk, rst, data_in, busy, tx_start);
  (* src = "transmitter.v:37.1-45.4" *)
  wire _000_;
  (* src = "transmitter.v:48.1-60.4" *)
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  (* force_downto = 32'd1 *)
  (* src = "transmitter.v:0.0-0.0|transmitter.v:65.1-68.8|E:\\study\\yosys\\oss-cad-suite\\bin\\../share/yosys/techmap.v:575.21-575.22" *)
  wire _058_;
  (* init = 1'h0 *)
  (* src = "transmitter.v:25.17-25.21" *)
  output busy;
  wire busy;
  (* src = "transmitter.v:26.7-26.10" *)
  input clk;
  wire clk;
  (* src = "transmitter.v:33.11-33.14" *)
  wire [9:0] cnt;
  (* src = "transmitter.v:29.11-29.18" *)
  wire [3:0] counter;
  wire [8:0] data;
  (* src = "transmitter.v:27.13-27.20" *)
  input [7:0] data_in;
  wire [7:0] data_in;
  (* init = 1'h0 *)
  (* src = "transmitter.v:34.5-34.6" *)
  wire k;
  (* src = "transmitter.v:26.11-26.14" *)
  input rst;
  wire rst;
  (* init = 1'h0 *)
  (* src = "transmitter.v:34.9-34.14" *)
  wire start;
  (* init = 1'h0 *)
  (* src = "transmitter.v:32.5-32.10" *)
  wire state;
  (* init = 1'h0 *)
  (* src = "transmitter.v:35.5-35.9" *)
  wire tick;
  (* init = 1'h1 *)
  (* src = "transmitter.v:25.12-25.14" *)
  output tx;
  wire tx;
  (* src = "transmitter.v:26.15-26.23" *)
  input tx_start;
  wire tx_start;
  iv1v0x05 _059_ (
    .a(cnt[0]),
    .z(_009_)
  );
  iv1v0x05 _060_ (
    .a(cnt[2]),
    .z(_023_)
  );
  iv1v0x05 _061_ (
    .a(cnt[5]),
    .z(_024_)
  );
  iv1v0x05 _062_ (
    .a(cnt[4]),
    .z(_025_)
  );
  iv1v0x05 _063_ (
    .a(cnt[6]),
    .z(_026_)
  );
  iv1v0x05 _064_ (
    .a(data_in[1]),
    .z(_027_)
  );
  nd2av0x05 _065_ (
    .a(counter[0]),
    .b(counter[1]),
    .z(_028_)
  );
  nd3abv0x05 _066_ (
    .a(_028_),
    .b(counter[2]),
    .c(counter[3]),
    .z(_029_)
  );
  mxn2v0x05 _067_ (
    .a0(start),
    .a1(_029_),
    .s(state),
    .z(_058_)
  );
  nd2v0x05 _068_ (
    .a(cnt[0]),
    .b(cnt[1]),
    .z(_030_)
  );
  nd3v0x05 _069_ (
    .a(cnt[6]),
    .b(cnt[9]),
    .c(cnt[8]),
    .z(_031_)
  );
  or4v0x05 _070_ (
    .a(cnt[3]),
    .b(_024_),
    .c(cnt[4]),
    .d(cnt[7]),
    .z(_032_)
  );
  nr4v1x05 _071_ (
    .a(cnt[2]),
    .b(_030_),
    .c(_031_),
    .d(_032_),
    .z(_001_)
  );
  nr2av0x1 _072_ (
    .a(tx_start),
    .b(k),
    .z(_000_)
  );
  nd2v0x05 _073_ (
    .a(state),
    .b(tick),
    .z(_033_)
  );
  mxi2v0x05 _074_ (
    .a0(_033_),
    .a1(tick),
    .s(counter[0]),
    .z(_002_)
  );
  nd2av0x05 _075_ (
    .a(tick),
    .b(counter[1]),
    .z(_034_)
  );
  xnr2v0x05 _076_ (
    .a(counter[0]),
    .b(counter[1]),
    .z(_035_)
  );
  oai21v0x05 _077_ (
    .a1(_033_),
    .a2(_035_),
    .b(_034_),
    .z(_003_)
  );
  nd2v0x05 _078_ (
    .a(counter[0]),
    .b(counter[1]),
    .z(_036_)
  );
  nd3v0x05 _079_ (
    .a(counter[0]),
    .b(counter[1]),
    .c(counter[2]),
    .z(_037_)
  );
  aoi21bv0x05 _080_ (
    .a1(state),
    .a2(_037_),
    .b(tick),
    .z(_038_)
  );
  oan21bv0x05 _081_ (
    .a1(_033_),
    .a2(_036_),
    .b(counter[2]),
    .z(_039_)
  );
  nr2v0x05 _082_ (
    .a(_038_),
    .b(_039_),
    .z(_004_)
  );
  oan21bv0x05 _083_ (
    .a1(_033_),
    .a2(_037_),
    .b(counter[3]),
    .z(_040_)
  );
  aoi21v0x05 _084_ (
    .a1(counter[3]),
    .a2(_038_),
    .b(_040_),
    .z(_005_)
  );
  mxi2v0x05 _085_ (
    .a0(data_in[3]),
    .a1(data_in[4]),
    .s(counter[0]),
    .z(_041_)
  );
  nd3av0x05 _086_ (
    .a(counter[0]),
    .b(counter[1]),
    .c(data_in[5]),
    .z(_042_)
  );
  nd3v0x05 _087_ (
    .a(counter[0]),
    .b(counter[1]),
    .c(data_in[6]),
    .z(_043_)
  );
  oai211v0x05 _088_ (
    .a1(counter[1]),
    .a2(_041_),
    .b(_042_),
    .c(_043_),
    .z(_044_)
  );
  nd3av0x05 _089_ (
    .a(counter[1]),
    .b(data_in[0]),
    .c(counter[0]),
    .z(_045_)
  );
  nd3v0x05 _090_ (
    .a(counter[0]),
    .b(counter[1]),
    .c(data_in[2]),
    .z(_046_)
  );
  oai211v0x05 _091_ (
    .a1(_027_),
    .a2(_028_),
    .b(_045_),
    .c(_046_),
    .z(_047_)
  );
  mxi2v0x05 _092_ (
    .a0(_047_),
    .a1(_044_),
    .s(counter[2]),
    .z(_048_)
  );
  nr3av0x05 _093_ (
    .a(counter[3]),
    .b(counter[2]),
    .c(counter[1]),
    .z(_049_)
  );
  oai21v0x05 _094_ (
    .a1(counter[0]),
    .a2(data_in[7]),
    .b(_049_),
    .z(_050_)
  );
  oai211v0x05 _095_ (
    .a1(counter[3]),
    .a2(_048_),
    .b(_050_),
    .c(state),
    .z(_051_)
  );
  mxn2v0x05 _096_ (
    .a0(tx),
    .a1(_051_),
    .s(tick),
    .z(_006_)
  );
  mxn2v0x05 _097_ (
    .a0(busy),
    .a1(state),
    .s(tick),
    .z(_007_)
  );
  xor2v0x05 _098_ (
    .a(cnt[0]),
    .b(cnt[1]),
    .z(_010_)
  );
  xnr2v0x05 _099_ (
    .a(_023_),
    .b(_030_),
    .z(_052_)
  );
  nr2v0x05 _100_ (
    .a(_001_),
    .b(_052_),
    .z(_011_)
  );
  nd4v0x05 _101_ (
    .a(cnt[0]),
    .b(cnt[1]),
    .c(cnt[3]),
    .d(cnt[2]),
    .z(_053_)
  );
  xooi21v0x05 _102_ (
    .a1(_023_),
    .a2(_030_),
    .b(cnt[3]),
    .z(_012_)
  );
  nr2v0x05 _103_ (
    .a(_025_),
    .b(_053_),
    .z(_054_)
  );
  xnr2v0x05 _104_ (
    .a(cnt[4]),
    .b(_053_),
    .z(_013_)
  );
  oai21bv0x05 _105_ (
    .a1(cnt[5]),
    .a2(_054_),
    .b(_001_),
    .z(_055_)
  );
  aoi21v0x05 _106_ (
    .a1(cnt[5]),
    .a2(_054_),
    .b(_055_),
    .z(_014_)
  );
  or4v0x05 _107_ (
    .a(_024_),
    .b(_025_),
    .c(_026_),
    .d(_053_),
    .z(_056_)
  );
  iv1v0x05 _108_ (
    .a(_056_),
    .z(_057_)
  );
  aoi21v0x05 _109_ (
    .a1(cnt[5]),
    .a2(_054_),
    .b(cnt[6]),
    .z(_019_)
  );
  nr3v0x05 _110_ (
    .a(_001_),
    .b(_057_),
    .c(_019_),
    .z(_015_)
  );
  xnr2v0x05 _111_ (
    .a(cnt[7]),
    .b(_056_),
    .z(_016_)
  );
  nr3abv0x05 _112_ (
    .a(cnt[7]),
    .b(cnt[8]),
    .c(_056_),
    .z(_020_)
  );
  aoi21v0x05 _113_ (
    .a1(cnt[7]),
    .a2(_057_),
    .b(cnt[8]),
    .z(_021_)
  );
  nr3v0x05 _114_ (
    .a(_001_),
    .b(_020_),
    .c(_021_),
    .z(_017_)
  );
  xnr2v0x05 _115_ (
    .a(cnt[9]),
    .b(_020_),
    .z(_022_)
  );
  nr2v0x05 _116_ (
    .a(_001_),
    .b(_022_),
    .z(_018_)
  );
  bf1v0x05 _117_ (
    .a(tx_start),
    .z(_008_)
  );
  (* src = "transmitter.v:71.1-87.4" *)
  dfnt1v0x2 _118_ (
    .cp(clk),
    .d(_002_),
    .z(counter[0])
  );
  (* src = "transmitter.v:71.1-87.4" *)
  dfnt1v0x2 _119_ (
    .cp(clk),
    .d(_003_),
    .z(counter[1])
  );
  (* src = "transmitter.v:71.1-87.4" *)
  dfnt1v0x2 _120_ (
    .cp(clk),
    .d(_004_),
    .z(counter[2])
  );
  (* src = "transmitter.v:71.1-87.4" *)
  dfnt1v0x2 _121_ (
    .cp(clk),
    .d(_005_),
    .z(counter[3])
  );
  (* src = "transmitter.v:71.1-87.4" *)
  dfnt1v0x2 _122_ (
    .cp(clk),
    .d(_006_),
    .z(tx)
  );
  (* src = "transmitter.v:63.1-69.4" *)
  dfnt1v0x2 _123_ (
    .cp(clk),
    .d(_058_),
    .z(state)
  );
  (* src = "transmitter.v:71.1-87.4" *)
  dfnt1v0x2 _124_ (
    .cp(clk),
    .d(_007_),
    .z(busy)
  );
  (* src = "transmitter.v:48.1-60.4" *)
  dfnt1v0x2 _125_ (
    .cp(clk),
    .d(_001_),
    .z(tick)
  );
  (* src = "transmitter.v:37.1-45.4" *)
  dfnt1v0x2 _126_ (
    .cp(clk),
    .d(_008_),
    .z(k)
  );
  (* src = "transmitter.v:37.1-45.4" *)
  dfnt1v0x2 _127_ (
    .cp(clk),
    .d(_000_),
    .z(start)
  );
  (* src = "transmitter.v:48.1-60.4" *)
  dfnt1v0x2 _128_ (
    .cp(clk),
    .d(_009_),
    .z(cnt[0])
  );
  (* src = "transmitter.v:48.1-60.4" *)
  dfnt1v0x2 _129_ (
    .cp(clk),
    .d(_010_),
    .z(cnt[1])
  );
  (* src = "transmitter.v:48.1-60.4" *)
  dfnt1v0x2 _130_ (
    .cp(clk),
    .d(_011_),
    .z(cnt[2])
  );
  (* src = "transmitter.v:48.1-60.4" *)
  dfnt1v0x2 _131_ (
    .cp(clk),
    .d(_012_),
    .z(cnt[3])
  );
  (* src = "transmitter.v:48.1-60.4" *)
  dfnt1v0x2 _132_ (
    .cp(clk),
    .d(_013_),
    .z(cnt[4])
  );
  (* src = "transmitter.v:48.1-60.4" *)
  dfnt1v0x2 _133_ (
    .cp(clk),
    .d(_014_),
    .z(cnt[5])
  );
  (* src = "transmitter.v:48.1-60.4" *)
  dfnt1v0x2 _134_ (
    .cp(clk),
    .d(_015_),
    .z(cnt[6])
  );
  (* src = "transmitter.v:48.1-60.4" *)
  dfnt1v0x2 _135_ (
    .cp(clk),
    .d(_016_),
    .z(cnt[7])
  );
  (* src = "transmitter.v:48.1-60.4" *)
  dfnt1v0x2 _136_ (
    .cp(clk),
    .d(_017_),
    .z(cnt[8])
  );
  (* src = "transmitter.v:48.1-60.4" *)
  dfnt1v0x2 _137_ (
    .cp(clk),
    .d(_018_),
    .z(cnt[9])
  );
  assign data = { data_in, 1'h0 };
endmodule
